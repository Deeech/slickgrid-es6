{"version":3,"sources":["webpack:///slick.es6.min.js","webpack:///webpack/bootstrap a9fe02102c53c51f9d34","webpack:///../src/slick.core.js","webpack:///external \"jquery\"","webpack:///../plugins/slick.cellrangedecorator/slick.cellrangedecorator.js","webpack:///../plugins/slick.cellrangeselector/slick.cellrangeselector.js","webpack:///external \"interactjs\"","webpack:///../src/index.js","webpack:///../plugins/index.js","webpack:///../plugins/slick.autotooltips/index.js","webpack:///../plugins/slick.autotooltips/slick.autotooltips.js","webpack:///../plugins/slick.cellcopymanager/index.js","webpack:///../plugins/slick.cellcopymanager/slick.cellcopymanager.js","webpack:///../plugins/slick.cellrangedecorator/index.js","webpack:///../plugins/slick.cellrangeselector/index.js","webpack:///../plugins/slick.cellselectionmodel/index.js","webpack:///../plugins/slick.cellselectionmodel/slick.cellselectionmodel.js","webpack:///../plugins/slick.checkboxselectcolumn/index.js","webpack:///../plugins/slick.checkboxselectcolumn/slick.checkboxselectcolumn.js","webpack:///../plugins/slick.headerbuttons/index.js","webpack:///../plugins/slick.headerbuttons/slick.headerbuttons.js","webpack:///../plugins/slick.headermenu/index.js","webpack:///../plugins/slick.headermenu/slick.headermenu.js","webpack:///../plugins/slick.rowmovemanager/index.js","webpack:///../plugins/slick.rowmovemanager/slick.rowmovemanager.js","webpack:///../plugins/slick.rowselectionmodel/index.js","webpack:///../plugins/slick.rowselectionmodel/slick.rowselectionmodel.js","webpack:///../src/slick-frozen.grid.js","webpack:///../src/slick.dataview.js","webpack:///../src/slick.editors.js","webpack:///../src/slick.formatters.js","webpack:///../src/slick.grid.js","webpack:///external \"flatpickr\""],"names":["module","exports","modules","__webpack_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","EventData","isPropagationStopped","isImmediatePropagationStopped","this","stopPropagation","stopImmediatePropagation","Event","handlers","subscribe","fn","push","unsubscribe","length","splice","notify","args","e","scope","returnValue","EventHandler","event","handler","unsubscribeAll","Range","fromRow","fromCell","toRow","toCell","undefined","Math","min","max","isSingleRow","isSingleCell","contains","row","cell","toString","NonDataItem","__nonDataRow","Group","__group","level","count","title","collapsed","totals","rows","groups","groupingKey","GroupTotals","__groupTotals","group","initialized","EditorLock","activeEditController","isActive","editController","activate","commitCurrentEdit","cancelCurrentEdit","deactivate","TreeColumns","treeColumns","mapToId","columns","forEach","column","columnsById","id","filter","node","condition","valid","sort","grid","a","b","getOrDefault","getColumnIndex","getDepth","getColumnsInDepth","depth","current","extractColumns","concat","result","cloneTreeColumns","_jquery2","default","extend","hasDepth","getTreeColumns","getColumnsInGroup","visibleColumns","visible","reOrder","getById","getInIds","ids","map","_jquery","obj","Slick","NonDataRow","GlobalEditorLock","keyCode","BACKSPACE","DELETE","DOWN","END","ENTER","ESCAPE","HOME","INSERT","LEFT","PAGE_DOWN","PAGE_UP","RIGHT","TAB","UP","equals","require","_interopRequireDefault","CellRangeDecorator","options","show","range","_elem","css","selectionCss","addClass","selectionCssClass","appendTo","getCanvasNode","from","getCellNodeBox","to","top","left","height","bottom","width","right","hide","remove","_defaults","zIndex","border","assign","_slick","CellRangeSelector","init","_decorator","_slick4","_grid","_canvas","_handler","onDragInit","handleDragInit","onDragStart","handleDragStart","onDrag","handleDrag","onDragEnd","handleDragEnd","destroy","dd","jqueryEvent","interactEvent","getCellFromEvent","originalEvent","_self","onBeforeCellRangeSelected","canCellBeSelected","_dragging","focus","start","getCellFromPoint","x0","offset","y0","_range","end","_slick2","pageX","pageY","onCellRangeSelected","_slick3","Plugins","FrozenGrid","Grid","Data","Formatters","Editors","_slick5","_slick6","_slick7","_slick8","_slickFrozen","_slickFrozen2","_slick9","_slick10","_plugins","newObj","key","RowSelectionModel","RowMoveManager","HeaderMenu","HeaderButtons","CheckboxSelectColumn","CellSelectionModel","CellCopyManager","AutoTooltips","_slick11","_slick12","_slick13","_slick14","_slick15","_slick16","_slick17","_slick18","_slick19","_slick20","enableForCells","onMouseEnter","handleMouseEnter","enableForHeaderCells","onHeaderMouseEnter","handleHeaderMouseEnter","$node","getCellNode","text","innerWidth","scrollWidth","trim","maxToolTipLength","substr","attr","target","closest","toolTip","onKeyDown","handleKeyDown","ranges","getEditorLock","which","_copiedRanges","preventDefault","clearCopySelection","onCopyCancelled","ctrlKey","metaKey","getSelectionModel","getSelectedRanges","markCopySelection","onCopyCells","onPasteCells","getColumns","hash","j","k","setCellCssStyles","removeCellCssStyles","_options","onActiveCellChanged","handleActiveCellChange","registerPlugin","_selector","handleCellRangeSelected","handleBeforeCellRangeSelected","unregisterPlugin","removeInvalidRanges","r","setSelectedRanges","_ranges","onSelectedRangesChanged","selectActiveCell","last","active","getActiveCell","shiftKey","altKey","pop","dRow","dCell","dirRow","dirCell","new_last","viewRow","viewCell","scrollRowIntoView","scrollCellIntoView","arguments","onSelectedRowsChanged","handleSelectedRowsChanged","onClick","handleClick","onHeaderClick","handleHeaderClick","selectedRows","getSelectedRows","lookup","_selectedRowsLookup","invalidateRow","render","getDataLength","updateColumnHeader","columnId","toggleRowSelection","is","setSelectedRows","grep","getColumnDefinition","field","resizable","sortable","cssClass","formatter","checkboxSelectionFormatter","columnDef","dataContext","onHeaderCellRendered","handleHeaderCellRendered","onBeforeHeaderCellDestroy","handleBeforeHeaderCellDestroy","setColumns","header","buttons","button","btn","buttonCssClass","data","showOnHover","image","tooltip","command","bind","handleButtonClick","classList","add","find","onCommand","document","body","handleBodyMouseDown","unbind","$menu","hideMenu","$activeHeaderColumn","removeClass","menu","$el","buttonImage","showMenu","$menuButton","onBeforeMenuShow","getContainerNode","empty","items","item","$li","handleMenuItemClick","disabled","$icon","iconCssClass","iconImage","cancelEditOnDrag","test","behavior","$","inArray","rowHeight","getOptions","selectionProxy","guide","insertBefore","round","eventData","onBeforeMoveRows","canMove","onMoveRows","wrapHandler","_inHandler","apply","rangesToRows","rowsToRanges","lastCell","getRowsRange","selectActiveRow","activeRow","x","y","canCellBeActive","multiSelect","selection","idx","setActiveCell","SlickGrid","container","$container","Error","maxSupportedCssHeight","getMaxSupportedCssHeight","scrollbarDimensions","measureScrollbar","defaults","validateAndEnforceOptions","columnDefaults","defaultColumnWidth","minWidth","maxWidth","uid","$focusSink","$paneHeaderL","$paneHeaderR","$paneTopL","$paneTopR","$paneBottomL","$paneBottomR","$headerScrollerL","$headerScrollerR","$headerScroller","$groupHeadersL","$groupHeadersR","index","$groupHeaders","$headerL","$headerR","$headers","$headerRowScrollerL","$headerRowScrollerR","$headerRowScroller","$headerRowSpacerL","getCanvasWidth","$headerRowSpacerR","$headerRowL","$headerRowR","$headerRow","$topPanelScrollerL","$topPanelScrollerR","$topPanelScroller","$topPanelL","$topPanelR","$topPanel","showTopPanel","showHeaderRow","$viewportTopL","$viewportTopR","$viewportBottomL","$viewportBottomR","$viewport","$activeViewportNode","$canvasTopL","$canvasTopR","$canvasBottomL","$canvasBottomR","$canvas","$activeCanvasNode","$footerRowScrollerR","$footerRowScrollerL","$footerRowScroller","$footerRowSpacerL","$footerRowSpacerR","$footerRowL","$footerRowR","$footerRow","showFooterRow","$focusSink2","clone","explicitInitialization","finishInitialization","getViewportWidth","getViewportHeight","measureCellPaddingAndBorder","disableSelection","enableTextSelectionOnCells","setFrozenOptions","setPaneVisibility","setScroller","setOverflow","updateColumnCaches","createColumnHeaders","createColumnGroupHeaders","createColumnFooter","setupColumnSort","createCssRules","resizeCanvas","bindAncestorScrollEvents","on","handleScroll","mousewheel","frozenColumn","hasFrozenRows","handleMouseWheel","handleHeaderContextMenu","delegate","handleHeaderMouseLeave","handleHeaderRowScroll","handleFooterRowScroll","handleDblClick","handleContextMenu","handleMouseLeave","_interactjs2","allowFrom","draggable","onmove","onstart","onend","navigator","userAgent","toLowerCase","match","hasFrozenColumns","plugin","plugins","unshift","self","setSelectionModel","model","selectionModel","handleSelectedRangesChanged","getActiveCanvasNode","element","setActiveCanvasNode","getCanvases","getViewportNode","getActiveViewportNode","setActiveViewPortNode","setActiveViewportNode","$c","dim","clientWidth","clientHeight","getHeadersWidth","headersWidth","headersWidthL","headersWidthR","ii","viewportW","getHeadersWidthL","getHeadersWidthR","availableWidth","viewportHasVScroll","canvasWidthL","canvasWidthR","totalRowWidth","fullWidthRows","updateCanvasWidth","forceColumnWidthsUpdate","widthChanged","oldCanvasWidth","canvasWidth","oldCanvasWidthL","oldCanvasWidthR","viewportHasHScroll","applyColumnWidths","$target","jquery","supportedHeight","testUpTo","div","elem","frozenBottom","parentNode","scrollHeight","$elem","$boundAncestors","handleActiveCellPositionChange","unbindAncestorScrollEvents","$header","children","eq","trigger","html","getHeaderRow","getHeaderRowColumn","$headerRowTarget","getFooterRow","getFooterRowColumn","$footerRowTarget","$footer","each","onBeforeFooterRowCellDestroy","footerRowCell","onFooterRowCellRendered","columnsLength","frozenColumnsValid","groupColumns","indexGroup","headerCssClass","alert","applyColumnGroupHeaderWidths","onMouseLeave","onBeforeHeaderRowCellDestroy","$headerTarget","enableColumnReorder","append","headerRowCell","onHeaderRowCellRendered","setSortColumns","sortColumns","setupColumnResize","setupColumnReorder","click","hasClass","$col","sortOpts","sortAsc","multiColumnSort","defaultSortAsc","onSort","sortCols","col","sortCol","currentPositionInHeader","currentPosition","limitPositionInGroup","idColumn","groupColumnOfPreviousPosition","startLimit","endLimit","some","groupColumn","arr","lastIndexOf","columnPositionValidInGroup","$item","limit","positionValid","message","delta","placeholder","createElement","className","ignoreFrom","inertia","restrict","restriction","endOnly","elementRect","autoScroll","axis","offsetWidth","style","offsetHeight","after","position","marginLeft","dx","transform","validPositionInGroup","cancel","removeChild","newColumns","removeData","onColumnsReordered","impactedColumns","getImpactedColumns","dropzone","accept","ondragenter","relatedTarget","ondragleave","ondrop","columnElements","firstResizable","lastResizable","forceFitColumns","activeColumn","preserveAspectRatio","edges","previousWidth","rect","autosizeColumns","applyColumnHeaderWidths","syncColumnCellResize","invalidateAllRows","onColumnsResized","getVBoxDelta","val","parseFloat","parseInt","frozenRow","numVisibleRows","frozenRowsHeight","dataLength","actualFrozenRow","overflow-x","overflow-y","$headerScrollContainer","$headerRowScrollContainer","$footerRowScrollContainer","$viewportScrollContainerX","$viewportScrollContainerY","el","h","v","headerColumnWidthDiff","headerColumnHeightDiff","cellWidthDiff","cellHeightDiff","absoluteColumnMinWidth","$style","getRule","rule","rules","topPanelHeight","headerRowHeight","footerRowHeight","styleSheet","cssText","join","appendChild","createTextNode","getColumnCssRules","stylesheet","sheets","styleSheets","ownerNode","owningElement","columnCssRulesL","columnCssRulesR","matches","columnIdx","cssRules","selector","selectorText","exec","removeCssRules","onBeforeDestroy","evt","editorLock","getEditController","prevTotal","widths","shrinkLeeway","total","availWidth","shrinkProportion","absMinWidth","shrinkSize","floor","growProportion","growSize","currentWidth","reRender","rerenderOnResize","$groupHeader","currentColumnIndex","$groupHeaderColumn","$headerColumn","next","outerWidth","headers","w","setSortColumn","ascending","cols","headerColumnEls","columnIndex","getSortColumns","selectedCellCssClass","columnPosLeft","columnPosRight","columnDefinitions","_treeColumns","setOptions","makeActiveCellNormal","enableAddRow","zombieRowNodeFromLastMouseWheelEvent","autoHeight","leaveSpaceForNewRows","setData","newData","scrollToTop","updateRowCount","scrollTo","getData","getLength","getDataLengthIncludingAddNew","getDataItem","getItem","getTopPanel","setTopPanelVisibility","slideDown","slideUp","setHeaderRowVisibility","setFooterRowVisibility","fadeIn","getRowTop","getRowFromPosition","th","oldOffset","page","ph","cj","newScrollTop","cleanupRows","getVisibleRange","updateRowPositions","prevScrollTop","vScrollDir","lastRenderedScrollTop","scrollTop","onViewportChanged","defaultFormatter","replace","getFormatter","rowMetadata","getItemMetadata","columnOverrides","formatterFactory","callFormatter","metadata","columnData","getEditor","columnMetadata","editor","editorFactory","getDataItemValueForColumn","dataItemColumnValueExtractor","appendRowHtml","stringArrayL","stringArrayR","dataLoading","rowCss","addNewRowCssClass","cssClasses","frozenRowOffset","getFrozenRowOffset","rowHtml","colspan","leftPx","rightPx","appendCellHtml","stringArray","cellCss","activeCell","cellCssClasses","rowsCache","cellRenderQueue","cellColSpans","rangeToKeep","removeFrozenRow","removeRowFromCache","invalidate","currentEditor","cacheEntry","rowNodeFromLastMouseWheelEvent","rowNode","parentElement","postProcessedRows","renderedRows","counter_rows_removed","invalidateRows","rl","updateCell","cellNode","loadValue","innerHTML","invalidatePostProcessingResults","updateRow","ensureCellNodesInRowsCache","cellNodesByColumnIdx","viewportH","outerHeight","topPanelH","headerRowH","footerRowH","ceil","paneTopH","paneBottomH","viewportTopH","viewportBottomH","paneBottomTop","lastRenderedScrollLeft","dataLengthIncludingAddNew","numberOfRows","oldH","tempViewportH","oldViewportHasVScroll","activeCellNode","resetActiveCell","oldScrollTopInRange","viewportTop","viewportLeft","scrollLeft","getRenderedRange","buffer","$lastNode","prev","cleanUpCells","totalCellsRemoved","cellsToRemove","cellToRemove","cleanUpAndRenderCells","cellsAdded","processedRows","totalCellsAdded","btm","processedRow","renderRows","needToReselectCell","counter_rows_rendered","xRight","firstChild","startPostProcessing","enableAsyncPostRender","clearTimeout","h_postrender","setTimeout","asyncPostProcessRows","asyncPostRenderDelay","postProcessFromRow","postProcessToRow","rendered","renderedFrozenRows","h_render","deltaX","deltaY","$rowNode","$gridCanvas","parents","zombieRow","_handleScroll","isMouseWheel","maxScrollDistanceY","maxScrollDistanceX","hasFrozenCols","vScrollDist","abs","hScrollDist","prevScrollLeft","forceSyncScrolling","onScroll","asyncPostRender","updateCellCssStylesOnRenderedRows","addedHash","removedHash","addedRowHash","removedRowHash","addCellCssStyles","onCellCssStylesChanged","prevHash","getCellCssStyles","flashCell","speed","$cell","toggleCellClass","times","queue","toggleClass","cellFlashingCssClass","dequeue","cellExists","retval","type","handled","navigatePrev","cancelEditAndSetFocus","navigatePageDown","navigatePageUp","navigateLeft","navigateRight","navigateUp","navigateDown","navigateNext","editable","commitEditAndSetFocus","makeActiveCellEditable","error","activeElement","setFocus","setActiveCellInternal","onContextMenu","onDblClick","gotoCell","onHeaderMouseLeave","onHeaderContextMenu","getCellFromNode","cls","getRowFromNode","rowOffset","clientX","clientY","y1","y2","x1","tabbingDirection","doPaging","getColspan","scrollRight","newCell","opt_editMode","activeCellChanged","$activeCellNode","$activeCellOffset","isBottom","activePosX","autoEdit","isCellPotentiallyEditable","h_editorLoader","asyncEditorLoading","asyncEditorLoadDelay","scrollActiveCellIntoView","clearTextSelection","window","getSelection","sel","removeAllRanges","cannotTriggerInsert","onBeforeCellEditorDestroy","onBeforeEditCell","gridPosition","absBox","commitChanges","cancelChanges","serializedEditorValue","serializeValue","box","offsetTop","offsetLeft","offsetParent","getActiveCellPosition","getGridPosition","onActiveCellPositionChanged","cellBox","getCellEditor","getActiveCellNode","viewportScrollH","rowAtTop","rowAtBottom","scrollRowToTop","scrollPage","dir","deltaRows","enableCellNavigation","prevCell","prevActivePosX","findFirstFocusableCell","findLastFocusableCell","lastFocusableCell","gotoRight","posX","gotoLeft","firstFocusableCell","pos","gotoDown","gotoUp","gotoNext","gotoPrev","lastSelectableCell","navigate","up","down","stepFunctions","stepFn","isAddNewRow","focusable","selectable","forceEdit","isValueChanged","validationResults","validate","editCommand","serializedValue","prevSerializedValue","execute","applyValue","onCellChange","undo","editCommandHandler","newItem","onAddNewRow","onValidationError","random","debug","eval","expr","slickGridVersion","getViewport","editActiveCell","_interactjs","DataView","beginUpdate","suspend","endUpdate","refresh","setRefreshHints","hints","refreshHints","setFilterArgs","filterArgs","updateIdxById","startingIndex","idProperty","idxById","ensureIdUniqueness","getItems","setItems","objectIdProperty","filteredItems","setPagingOptions","pageSize","pagesize","pagenum","totalRows","pageNum","onPagingInfoChanged","getPagingInfo","totalPages","dataView","comparer","sortComparer","fastSortField","reverse","fastSort","oldToString","reSort","setFilter","filterFn","inlineFilters","compiledFilter","compileFilter","compiledFilterWithCaching","compileFilterWithCaching","getGrouping","groupingInfos","setGrouping","groupingInfo","groupItemMetadataProvider","GroupItemMetadataProvider","toggledGroupsByLevel","Array","gi","groupingInfoDefaults","getterIsAFn","compiledAccumulators","aggregators","compileAccumulatorLoop","groupBy","valueGetter","valueFormatter","setAggregators","groupAggregators","includeCollapsed","aggregateCollapsed","getItemByIdx","getIdxById","ensureRowsByIdCache","rowsById","getRowById","getItemById","mapIdsToRows","idArray","mapRowsToIds","rowArray","updateItem","updated","insertItem","addItem","deleteItem","displayTotalsRow","calculateTotals","getGroupRowMetadata","getTotalsRowMetadata","expandCollapseAllGroups","collapse","collapseAllGroups","expandAllGroups","expandCollapseGroup","collapseGroup","varArgs","slice","arg0","indexOf","groupingDelimiter","split","expandGroup","getGroups","extractGroups","parentGroup","groupsByVal","predefinedValues","agg","isLeafLevel","aggregateChildGroups","storeResult","addGroupTotals","lazyTotalsCalculation","addTotals","g","groupCollapsed","toggledGroups","aggregateEmpty","flattenGroupedRows","groupedRows","gl","jj","getFunctionInfo","params","aggregator","accumulatorInfo","accumulate","Function","displayName","filterInfo","filterPath2","filterBody","tpl","uncompiledFilter","uncompiledFilterWithCaching","cache","getFilteredAndPagedItems","batchFilter","batchFilterWithCaching","isFilterNarrowing","isFilterExpanding","filterCache","isFilterUnchanged","paged","getRowDiffs","newRows","eitherIsNonData","diff","ignoreDiffsBefore","ignoreDiffsAfter","recalc","_items","prevRefreshHints","countBefore","totalRowsBefore","onRowCountChanged","previous","onRowsChanged","syncGridSelection","preserveHidden","preserveHiddenOnSelectionChange","setSelectedRowIds","rowIds","selectedRowIds","onSelectedRowIdsChanged","update","inHandler","newSelectedRowIds","syncGridCellCssStyles","storeCellCssStyles","hashById","newHash","AvgAggregator","field_","count_","nonNullCount_","sum_","isNaN","groupTotals","avg","MinAggregator","min_","MaxAggregator","max_","SumAggregator","sum","Aggregators","Avg","Min","Max","Sum","TextEditor","$input","defaultValue","select","getValue","setValue","state","validator","msg","IntegerEditor","FloatEditor","getDecimalPlaces","rtn","editorFixedDecimalPlaces","DefaultDecimalPlaces","decPlaces","toFixed","DateEditor","flatInstance","defaultDate","date","_flatpickr2","open","positionCalendar","close","YesNoSelectEditor","$select","CheckboxEditor","prop","LongTextEditor","$wrapper","save","_flatpickr","Text","Integer","Float","Date","YesNoSelect","Checkbox","LongText","PercentCompleteFormatter","PercentCompleteBarFormatter","YesNoFormatter","CheckmarkFormatter","PercentComplete","PercentCompleteBar","YesNo","Checkmark","cacheCssForHiddenInit","$headerRowSpacer","createFooterRow","$footerRowSpacer","restoreCssFromHiddenInit","$hiddenParents","addBack","not","old","cssShow","oldProps","rowWidth","verArray","jQueryNewWidthBehaviour","enableAsyncPostRenderCleanup","startPostProcessingCleanup","queuePostProcessedRowForCleanup","postProcessedRow","rowIdx","postProcessgroupId","postProcessedCleanupQueue","actionType","groupId","detach","queuePostProcessedCellForCleanup","cellnode","display","zombieRowCacheFromLastMouseWheelEvent","zombieRowPostProcessedFromLastMouseWheelEvent","lastChild","previousSibling","h_postrenderCleanup","asyncPostProcessCleanupRows","asyncPostRenderCleanupDelay","processedStatus","entry","shift","asyncPostRenderCleanup","keyCaptureList","useEditor","suppressClearOnEdit","visibility"],"mappings":"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","file":"slick.es6.min.js","sourcesContent":["module.exports =\n/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__webpack_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 31);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\nvar Slick = {\n  Event: Event,\n  EventData: EventData,\n  EventHandler: EventHandler,\n  Range: Range,\n  NonDataRow: NonDataItem,\n  Group: Group,\n  GroupTotals: GroupTotals,\n  EditorLock: EditorLock,\n  /** *\n   * A global singleton editor lock.\n   * @class GlobalEditorLock\n   * @static\n   * @constructor\n   */\n  GlobalEditorLock: new EditorLock(),\n  TreeColumns: TreeColumns,\n\n  keyCode: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    INSERT: 45,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    RIGHT: 39,\n    TAB: 9,\n    UP: 38\n  }\n};\n\nexports.default = Slick;\n\n/***\n * An event object for passing data to event handlers and letting them control propagation.\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n * @class EventData\n * @constructor\n */\n\nfunction EventData() {\n  var isPropagationStopped = false;\n  var isImmediatePropagationStopped = false;\n\n  /***\n   * Stops event from propagating up the DOM tree.\n   * @method stopPropagation\n   */\n  this.stopPropagation = function () {\n    isPropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopPropagation was called on this event object.\n   * @method isPropagationStopped\n   * @return {Boolean}\n   */\n  this.isPropagationStopped = function () {\n    return isPropagationStopped;\n  };\n\n  /***\n   * Prevents the rest of the handlers from being executed.\n   * @method stopImmediatePropagation\n   */\n  this.stopImmediatePropagation = function () {\n    isImmediatePropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopImmediatePropagation was called on this event object.\\\n   * @method isImmediatePropagationStopped\n   * @return {Boolean}\n   */\n  this.isImmediatePropagationStopped = function () {\n    return isImmediatePropagationStopped;\n  };\n}\n\n/***\n * A simple publisher-subscriber implementation.\n * @class Event\n * @constructor\n */\nfunction Event() {\n  var handlers = [];\n\n  /***\n   * Adds an event handler to be called when the event is fired.\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n   * object the event was fired with.<p>\n   * @method subscribe\n   * @param fn {Function} Event handler.\n   */\n  this.subscribe = function (fn) {\n    handlers.push(fn);\n  };\n\n  /***\n   * Removes an event handler added with <code>subscribe(fn)</code>.\n   * @method unsubscribe\n   * @param fn {Function} Event handler to be removed.\n   */\n  this.unsubscribe = function (fn) {\n    for (var i = handlers.length - 1; i >= 0; i--) {\n      if (handlers[i] === fn) {\n        handlers.splice(i, 1);\n      }\n    }\n  };\n\n  /***\n   * Fires an event notifying all subscribers.\n   * @method notify\n   * @param args {Object} Additional data object to be passed to all handlers.\n   * @param e {EventData}\n   *      Optional.\n   *      An <code>EventData</code> object to be passed to all handlers.\n   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n   * @param scope {Object}\n   *      Optional.\n   *      The scope (\"this\") within which the handler will be executed.\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\n   */\n  this.notify = function (args, e, scope) {\n    e = e || new EventData();\n    scope = scope || this;\n\n    var returnValue;\n    for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++) {\n      returnValue = handlers[i].call(scope, e, args);\n    }\n\n    return returnValue;\n  };\n}\n\nfunction EventHandler() {\n  var handlers = [];\n\n  this.subscribe = function (event, handler) {\n    handlers.push({\n      event: event,\n      handler: handler\n    });\n    event.subscribe(handler);\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribe = function (event, handler) {\n    var i = handlers.length;\n    while (i--) {\n      if (handlers[i].event === event && handlers[i].handler === handler) {\n        handlers.splice(i, 1);\n        event.unsubscribe(handler);\n        return;\n      }\n    }\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribeAll = function () {\n    var i = handlers.length;\n    while (i--) {\n      handlers[i].event.unsubscribe(handlers[i].handler);\n    }\n    handlers = [];\n\n    return this; // allow chaining\n  };\n}\n\n/***\n * A structure containing a range of cells.\n * @class Range\n * @constructor\n * @param fromRow {Integer} Starting row.\n * @param fromCell {Integer} Starting cell.\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n */\nfunction Range(fromRow, fromCell, toRow, toCell) {\n  if (toRow === undefined && toCell === undefined) {\n    toRow = fromRow;\n    toCell = fromCell;\n  }\n\n  /***\n   * @property fromRow\n   * @type {Integer}\n   */\n  this.fromRow = Math.min(fromRow, toRow);\n\n  /***\n   * @property fromCell\n   * @type {Integer}\n   */\n  this.fromCell = Math.min(fromCell, toCell);\n\n  /***\n   * @property toRow\n   * @type {Integer}\n   */\n  this.toRow = Math.max(fromRow, toRow);\n\n  /***\n   * @property toCell\n   * @type {Integer}\n   */\n  this.toCell = Math.max(fromCell, toCell);\n\n  /***\n   * Returns whether a range represents a single row.\n   * @method isSingleRow\n   * @return {Boolean}\n   */\n  this.isSingleRow = function () {\n    return this.fromRow == this.toRow;\n  };\n\n  /***\n   * Returns whether a range represents a single cell.\n   * @method isSingleCell\n   * @return {Boolean}\n   */\n  this.isSingleCell = function () {\n    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n  };\n\n  /***\n   * Returns whether a range contains a given cell.\n   * @method contains\n   * @param row {Integer}\n   * @param cell {Integer}\n   * @return {Boolean}\n   */\n  this.contains = function (row, cell) {\n    return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n  };\n\n  /***\n   * Returns a readable representation of a range.\n   * @method toString\n   * @return {String}\n   */\n  this.toString = function () {\n    if (this.isSingleCell()) {\n      return '(' + this.fromRow + ':' + this.fromCell + ')';\n    } else {\n      return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n    }\n  };\n}\n\n/***\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n * @class NonDataItem\n * @constructor\n */\nfunction NonDataItem() {\n  this.__nonDataRow = true;\n}\n\n/***\n * Information about a group of rows.\n * @class Group\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction Group() {\n  this.__group = true;\n\n  /**\n   * Grouping level, starting with 0.\n   * @property level\n   * @type {Number}\n   */\n  this.level = 0;\n\n  /***\n   * Number of rows in the group.\n   * @property count\n   * @type {Integer}\n   */\n  this.count = 0;\n\n  /***\n   * Grouping value.\n   * @property value\n   * @type {Object}\n   */\n  this.value = null;\n\n  /***\n   * Formatted display value of the group.\n   * @property title\n   * @type {String}\n   */\n  this.title = null;\n\n  /***\n   * Whether a group is collapsed.\n   * @property collapsed\n   * @type {Boolean}\n   */\n  this.collapsed = false;\n\n  /***\n   * GroupTotals, if any.\n   * @property totals\n   * @type {GroupTotals}\n   */\n  this.totals = null;\n\n  /**\n   * Rows that are part of the group.\n   * @property rows\n   * @type {Array}\n   */\n  this.rows = [];\n\n  /**\n   * Sub-groups that are part of the group.\n   * @property groups\n   * @type {Array}\n   */\n  this.groups = null;\n\n  /**\n   * A unique key used to identify the group.  This key can be used in calls to DataView\n   * collapseGroup() or expandGroup().\n   * @property groupingKey\n   * @type {Object}\n   */\n  this.groupingKey = null;\n}\n\nGroup.prototype = new NonDataItem();\n\n/***\n * Compares two Group instances.\n * @method equals\n * @return {Boolean}\n * @param group {Group} Group instance to compare to.\n */\nGroup.prototype.equals = function (group) {\n  return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n\n/***\n * Information about group totals.\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n * formatters during the display.\n * @class GroupTotals\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction GroupTotals() {\n  this.__groupTotals = true;\n\n  /***\n   * Parent Group.\n   * @param group\n   * @type {Group}\n   */\n  this.group = null;\n\n  /***\n   * Whether the totals have been fully initialized / calculated.\n   * Will be set to false for lazy-calculated group totals.\n   * @param initialized\n   * @type {Boolean}\n   */\n  this.initialized = false;\n}\n\nGroupTotals.prototype = new NonDataItem();\n\n/***\n * A locking helper to track the active edit controller and ensure that only a single controller\n * can be active at a time.  This prevents a whole class of state and validation synchronization\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n * and attempt a commit or cancel before proceeding.\n * @class EditorLock\n * @constructor\n */\nfunction EditorLock() {\n  var activeEditController = null;\n\n  /***\n   * Returns true if a specified edit controller is active (has the edit lock).\n   * If the parameter is not specified, returns true if any edit controller is active.\n   * @method isActive\n   * @param editController {EditController}\n   * @return {Boolean}\n   */\n  this.isActive = function (editController) {\n    return editController ? activeEditController === editController : activeEditController !== null;\n  };\n\n  /***\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n   * If another edit controller is already active, and exception will be thrown.\n   * @method activate\n   * @param editController {EditController} edit controller acquiring the lock\n   */\n  this.activate = function (editController) {\n    if (editController === activeEditController) {\n      // already activated?\n      return;\n    }\n    if (activeEditController !== null) {\n      throw 'SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController';\n    }\n    if (!editController.commitCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n    }\n    if (!editController.cancelCurrentEdit) {\n      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n    }\n    activeEditController = editController;\n  };\n\n  /***\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\n   * If the specified edit controller is not the active one, an exception will be thrown.\n   * @method deactivate\n   * @param editController {EditController} edit controller releasing the lock\n   */\n  this.deactivate = function (editController) {\n    if (activeEditController !== editController) {\n      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n    }\n    activeEditController = null;\n  };\n\n  /***\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n   * and false otherwise.  If no edit controller is active, returns true.\n   * @method commitCurrentEdit\n   * @return {Boolean}\n   */\n  this.commitCurrentEdit = function () {\n    return activeEditController ? activeEditController.commitCurrentEdit() : true;\n  };\n\n  /***\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n   * active, returns true.\n   * @method cancelCurrentEdit\n   * @return {Boolean}\n   */\n  this.cancelCurrentEdit = function cancelCurrentEdit() {\n    return activeEditController ? activeEditController.cancelCurrentEdit() : true;\n  };\n}\n\n/**\n *\n * @param {Array} treeColumns Array com levels of columns\n * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n * @constructor\n */\nfunction TreeColumns(treeColumns) {\n\n  var columnsById = {};\n\n  function init() {\n    mapToId(treeColumns);\n  }\n\n  function mapToId(columns) {\n    columns.forEach(function (column) {\n      columnsById[column.id] = column;\n\n      if (column.columns) mapToId(column.columns);\n    });\n  }\n\n  function filter(node, condition) {\n\n    return node.filter(function (column) {\n\n      var valid = condition.call(column);\n\n      if (valid && column.columns) column.columns = filter(column.columns, condition);\n\n      return valid && (!column.columns || column.columns.length);\n    });\n  }\n\n  function sort(columns, grid) {\n    columns.sort(function (a, b) {\n      var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n          indexB = getOrDefault(grid.getColumnIndex(b.id));\n\n      return indexA - indexB;\n    }).forEach(function (column) {\n      if (column.columns) sort(column.columns, grid);\n    });\n  }\n\n  function getOrDefault(value) {\n    return typeof value === 'undefined' ? -1 : value;\n  }\n\n  function getDepth(node) {\n    if (node.length) for (var i in node) {\n      return getDepth(node[i]);\n    } else if (node.columns) return 1 + getDepth(node.columns);else return 1;\n  }\n\n  function getColumnsInDepth(node, depth, current) {\n    var columns = [];\n    current = current || 0;\n\n    if (depth == current) {\n\n      if (node.length) node.forEach(function (n) {\n        if (n.columns) n.extractColumns = function () {\n          return extractColumns(n);\n        };\n      });\n\n      return node;\n    } else for (var i in node) {\n      if (node[i].columns) {\n        columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\n      }\n    }return columns;\n  }\n\n  function extractColumns(node) {\n    var result = [];\n\n    if (node.hasOwnProperty('length')) {\n\n      for (var i = 0; i < node.length; i++) {\n        result = result.concat(extractColumns(node[i]));\n      }\n    } else {\n\n      if (node.hasOwnProperty('columns')) result = result.concat(extractColumns(node.columns));else return node;\n    }\n\n    return result;\n  }\n\n  function cloneTreeColumns() {\n    return _jquery2.default.extend(true, [], treeColumns);\n  }\n\n  init();\n\n  this.hasDepth = function () {\n\n    for (var i in treeColumns) {\n      if (treeColumns[i].hasOwnProperty('columns')) return true;\n    }return false;\n  };\n\n  this.getTreeColumns = function () {\n    return treeColumns;\n  };\n\n  this.extractColumns = function () {\n    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n  };\n\n  this.getDepth = function () {\n    return getDepth(treeColumns);\n  };\n\n  this.getColumnsInDepth = function (depth) {\n    return getColumnsInDepth(treeColumns, depth);\n  };\n\n  this.getColumnsInGroup = function (groups) {\n    return extractColumns(groups);\n  };\n\n  this.visibleColumns = function () {\n    return filter(cloneTreeColumns(), function () {\n      return this.visible;\n    });\n  };\n\n  this.filter = function (condition) {\n    return filter(cloneTreeColumns(), condition);\n  };\n\n  this.reOrder = function (grid) {\n    return sort(treeColumns, grid);\n  };\n\n  this.getById = function (id) {\n    return columnsById[id];\n  };\n\n  this.getInIds = function (ids) {\n    return ids.map(function (id) {\n      return columnsById[id];\n    });\n  };\n}\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"jquery\");\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellRangeDecorator;\n\n/** *\n * Displays an overlay on top of a given cell range.\n *\n * TODO:\n * Currently, it blocks mouse events to DOM nodes behind it.\n * Use FF and WebKit-specific 'pointer-events' CSS style, or some kind of event forwarding.\n * Could also construct the borders separately using 4 individual DIVs.\n *\n * @param {Grid} grid\n * @param {Object} options\n */\n\nfunction CellRangeDecorator(grid, options) {\n  var _elem = void 0;\n  var _defaults = {\n    selectionCssClass: 'slick-range-decorator',\n    selectionCss: {\n      zIndex: '9999',\n      border: '2px dashed red'\n    }\n  };\n\n  options = Object.assign({}, _defaults, options);\n\n  function show(range) {\n    if (!_elem) {\n      _elem = (0, _jquery2.default)('<div></div>', { css: options.selectionCss }).addClass(options.selectionCssClass).css('position', 'absolute').appendTo(grid.getCanvasNode());\n    }\n\n    var from = grid.getCellNodeBox(range.fromRow, range.fromCell);\n    var to = grid.getCellNodeBox(range.toRow, range.toCell);\n\n    _elem.css({\n      top: from.top - 1,\n      left: from.left - 1,\n      height: to.bottom - from.top - 2,\n      width: to.right - from.left - 2\n    });\n\n    return _elem;\n  }\n\n  function hide() {\n    if (_elem) {\n      _elem.remove();\n      _elem = null;\n    }\n  }\n\n  Object.assign(this, {\n    show: show,\n    hide: hide\n  });\n}\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(2);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellRangeSelector;\n\n\nfunction CellRangeSelector(options) {\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _dragging = void 0;\n  var _decorator = void 0;\n  var _range = {};\n\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    selectionCss: {\n      // 'border': '2px dashed blue'\n    }\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _decorator = new _slick4.default(grid, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler.subscribe(_grid.onDragInit, handleDragInit).subscribe(_grid.onDragStart, handleDragStart).subscribe(_grid.onDrag, handleDrag).subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd) {\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(jqueryEvent, interactEvent) {\n    var cell = _grid.getCellFromEvent(interactEvent.originalEvent);\n    if (_self.onBeforeCellRangeSelected.notify(cell) !== false) {\n      if (_grid.canCellBeSelected(cell.row, cell.cell)) {\n        _dragging = true;\n        // jqueryEvent.stopImmediatePropagation();\n      }\n    }\n    if (!_dragging) {\n      return;\n    }\n\n    _grid.focus();\n\n    var start = _grid.getCellFromPoint(interactEvent.x0 - (0, _jquery2.default)(_canvas).offset().left, interactEvent.y0 - (0, _jquery2.default)(_canvas).offset().top);\n\n    _range = {\n      start: start,\n      end: {}\n    };\n\n    return _decorator.show(new _slick2.default.Range(start.row, start.cell));\n  }\n\n  function handleDrag(e, interactEvent) {\n    if (!_dragging) {\n      return;\n    }\n    // e.stopImmediatePropagation();\n\n    var end = _grid.getCellFromPoint(interactEvent.pageX - (0, _jquery2.default)(_canvas).offset().left, interactEvent.pageY - (0, _jquery2.default)(_canvas).offset().top);\n\n    if (!_grid.canCellBeSelected(end.row, end.cell)) {\n      return;\n    }\n\n    _range.end = end;\n    _decorator.show(new _slick2.default.Range(_range.start.row, _range.start.cell, end.row, end.cell));\n  }\n\n  function handleDragEnd(e) {\n    if (!_dragging) {\n      return;\n    }\n\n    _dragging = false;\n    // e.stopImmediatePropagation();\n\n    _decorator.hide();\n    _self.onCellRangeSelected.notify({\n      range: new _slick2.default.Range(_range.start.row, _range.start.cell, _range.end.row, _range.end.cell)\n    });\n    _range = {};\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    onBeforeCellRangeSelected: new _slick2.default.Event(),\n    onCellRangeSelected: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"interactjs\");\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Plugins = exports.FrozenGrid = exports.Grid = exports.Data = exports.Formatters = exports.Editors = exports.Slick = undefined;\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(27);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nvar _slick5 = __webpack_require__(26);\n\nvar _slick6 = _interopRequireDefault(_slick5);\n\nvar _slick7 = __webpack_require__(29);\n\nvar _slick8 = _interopRequireDefault(_slick7);\n\nvar _slickFrozen = __webpack_require__(25);\n\nvar _slickFrozen2 = _interopRequireDefault(_slickFrozen);\n\nvar _slick9 = __webpack_require__(28);\n\nvar _slick10 = _interopRequireDefault(_slick9);\n\nvar _plugins = __webpack_require__(6);\n\nvar Plugins = _interopRequireWildcard(_plugins);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.Slick = _slick2.default;\nexports.Editors = _slick4.default;\nexports.Formatters = _slick10.default;\nexports.Data = _slick6.default;\nexports.Grid = _slick8.default;\nexports.FrozenGrid = _slickFrozen2.default;\nexports.Plugins = Plugins;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.RowSelectionModel = exports.RowMoveManager = exports.HeaderMenu = exports.HeaderButtons = exports.CheckboxSelectColumn = exports.CellSelectionModel = exports.CellRangeSelector = exports.CellRangeDecorator = exports.CellCopyManager = exports.AutoTooltips = undefined;\n\nvar _slick = __webpack_require__(7);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(9);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nvar _slick5 = __webpack_require__(11);\n\nvar _slick6 = _interopRequireDefault(_slick5);\n\nvar _slick7 = __webpack_require__(12);\n\nvar _slick8 = _interopRequireDefault(_slick7);\n\nvar _slick9 = __webpack_require__(13);\n\nvar _slick10 = _interopRequireDefault(_slick9);\n\nvar _slick11 = __webpack_require__(15);\n\nvar _slick12 = _interopRequireDefault(_slick11);\n\nvar _slick13 = __webpack_require__(17);\n\nvar _slick14 = _interopRequireDefault(_slick13);\n\nvar _slick15 = __webpack_require__(19);\n\nvar _slick16 = _interopRequireDefault(_slick15);\n\nvar _slick17 = __webpack_require__(21);\n\nvar _slick18 = _interopRequireDefault(_slick17);\n\nvar _slick19 = __webpack_require__(23);\n\nvar _slick20 = _interopRequireDefault(_slick19);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.AutoTooltips = _slick2.default;\nexports.CellCopyManager = _slick4.default;\nexports.CellRangeDecorator = _slick6.default;\nexports.CellRangeSelector = _slick8.default;\nexports.CellSelectionModel = _slick10.default;\nexports.CheckboxSelectColumn = _slick12.default;\nexports.HeaderButtons = _slick14.default;\nexports.HeaderMenu = _slick16.default;\nexports.RowMoveManager = _slick18.default;\nexports.RowSelectionModel = _slick20.default;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(8);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = AutoTooltips;\n\n/**\n * AutoTooltips plugin to show/hide tooltips when columns are too narrow to fit content.\n * @constructor\n * @param {boolean} [options.enableForCells=true]        - Enable tooltip for grid cells\n * @param {boolean} [options.enableForHeaderCells=false] - Enable tooltip for header cells\n * @param {number}  [options.maxToolTipLength=null]      - The maximum length for a tooltip\n */\n\nfunction AutoTooltips(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _defaults = {\n    enableForCells: true,\n    enableForHeaderCells: false,\n    maxToolTipLength: null\n  };\n\n  /**\n   * Initialize plugin.\n   */\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    if (options.enableForCells) _grid.onMouseEnter.subscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.subscribe(handleHeaderMouseEnter);\n  }\n\n  /**\n   * Destroy plugin.\n   */\n  function destroy() {\n    if (options.enableForCells) _grid.onMouseEnter.unsubscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.unsubscribe(handleHeaderMouseEnter);\n  }\n\n  /**\n   * Handle mouse entering grid cell to add/remove tooltip.\n   * @param {jQuery.Event} e - The event\n   */\n  function handleMouseEnter(e) {\n    var cell = _grid.getCellFromEvent(e);\n    if (cell) {\n      var $node = (0, _jquery2.default)(_grid.getCellNode(cell.row, cell.cell));\n      var text = void 0;\n      if ($node.innerWidth() < $node[0].scrollWidth) {\n        text = _jquery2.default.trim($node.text());\n        if (options.maxToolTipLength && text.length > options.maxToolTipLength) {\n          text = text.substr(0, options.maxToolTipLength - 3) + '...';\n        }\n      } else {\n        text = '';\n      }\n      $node.attr('title', text);\n    }\n  }\n\n  /**\n   * Handle mouse entering header cell to add/remove tooltip.\n   * @param {jQuery.Event} e     - The event\n   * @param {object} args.column - The column definition\n   */\n  function handleHeaderMouseEnter(e, args) {\n    var column = args.column,\n        $node = (0, _jquery2.default)(e.target).closest('.slick-header-column');\n    if (column && !column.toolTip) {\n      $node.attr('title', $node.innerWidth() < $node[0].scrollWidth ? column.name : '');\n    }\n  }\n\n  // Public API\n  Object.assign(this, {\n    init: init,\n    destroy: destroy\n  });\n}\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(10);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar keyCode = _slick2.default.keyCode;\nexports.default = CellCopyManager;\n\n\nfunction CellCopyManager() {\n  var _grid;\n  var _self = this;\n  var _copiedRanges;\n\n  function init(grid) {\n    _grid = grid;\n    _grid.onKeyDown.subscribe(handleKeyDown);\n  }\n\n  function destroy() {\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n  }\n\n  function handleKeyDown(e, args) {\n    var ranges;\n    if (!_grid.getEditorLock().isActive()) {\n      if (e.which == keyCode.ESCAPE) {\n        if (_copiedRanges) {\n          e.preventDefault();\n          clearCopySelection();\n          _self.onCopyCancelled.notify({ ranges: _copiedRanges });\n          _copiedRanges = null;\n        }\n      }\n\n      if (e.which == 67 && (e.ctrlKey || e.metaKey)) {\n        ranges = _grid.getSelectionModel().getSelectedRanges();\n        if (ranges.length != 0) {\n          e.preventDefault();\n          _copiedRanges = ranges;\n          markCopySelection(ranges);\n          _self.onCopyCells.notify({ ranges: ranges });\n        }\n      }\n\n      if (e.which == 86 && (e.ctrlKey || e.metaKey)) {\n        if (_copiedRanges) {\n          e.preventDefault();\n          clearCopySelection();\n          ranges = _grid.getSelectionModel().getSelectedRanges();\n          _self.onPasteCells.notify({ from: _copiedRanges, to: ranges });\n          _copiedRanges = null;\n        }\n      }\n    }\n  }\n\n  function markCopySelection(ranges) {\n    var columns = _grid.getColumns();\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        hash[j] = {};\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          hash[j][columns[k].id] = 'copied';\n        }\n      }\n    }\n    _grid.setCellCssStyles('copy-manager', hash);\n  }\n\n  function clearCopySelection() {\n    _grid.removeCellCssStyles('copy-manager');\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n    clearCopySelection: clearCopySelection,\n\n    onCopyCells: new _slick2.default.Event(),\n    onCopyCancelled: new _slick2.default.Event(),\n    onPasteCells: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(2);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(3);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(14);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _slick3 = __webpack_require__(3);\n\nvar _slick4 = _interopRequireDefault(_slick3);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CellSelectionModel;\n\n\nfunction CellSelectionModel() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    selectActiveCell: true\n  };\n\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _ranges = [];\n  var _self = this;\n  var _selector = new _slick4.default({\n    selectionCss: {\n      border: '2px solid black'\n    }\n  });\n  var _options = void 0;\n  var _defaults = {\n    selectActiveCell: true\n  };\n\n  function init(grid) {\n    _options = Object.assign({}, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _grid.onActiveCellChanged.subscribe(handleActiveCellChange);\n    _grid.onKeyDown.subscribe(handleKeyDown);\n    grid.registerPlugin(_selector);\n    _selector.onCellRangeSelected.subscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.subscribe(handleBeforeCellRangeSelected);\n  }\n\n  function destroy() {\n    _grid.onActiveCellChanged.unsubscribe(handleActiveCellChange);\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n    _selector.onCellRangeSelected.unsubscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.unsubscribe(handleBeforeCellRangeSelected);\n    _grid.unregisterPlugin(_selector);\n  }\n\n  function removeInvalidRanges(ranges) {\n    var result = [];\n\n    for (var i = 0; i < ranges.length; i++) {\n      var r = ranges[i];\n      if (_grid.canCellBeSelected(r.fromRow, r.fromCell) && _grid.canCellBeSelected(r.toRow, r.toCell)) {\n        result.push(r);\n      }\n    }\n\n    return result;\n  }\n\n  function setSelectedRanges(ranges) {\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n      return;\n    }\n\n    _ranges = removeInvalidRanges(ranges);\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges() {\n    return _ranges;\n  }\n\n  function handleBeforeCellRangeSelected(e, args) {\n    if (_grid.getEditorLock().isActive()) {\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  function handleCellRangeSelected(e, args) {\n    setSelectedRanges([args.range]);\n  }\n\n  function handleActiveCellChange(e, args) {\n    if (_options.selectActiveCell && args.row != null && args.cell != null) {\n      setSelectedRanges([new _slick2.default.Range(args.row, args.cell)]);\n    }\n  }\n\n  function handleKeyDown(e) {\n    /** *\n     * Кey codes\n     * 37 left\n     * 38 up\n     * 39 right\n     * 40 down\n     */\n    var ranges = void 0,\n        last = void 0;\n    var active = _grid.getActiveCell();\n\n    if (active && e.shiftKey && !e.ctrlKey && !e.altKey && (e.which == 37 || e.which == 39 || e.which == 38 || e.which == 40)) {\n      ranges = getSelectedRanges();\n      if (!ranges.length) ranges.push(new _slick2.default.Range(active.row, active.cell));\n\n      // keyboard can work with last range only\n      last = ranges.pop();\n\n      // can't handle selection out of active cell\n      if (!last.contains(active.row, active.cell)) last = new _slick2.default.Range(active.row, active.cell);\n\n      var dRow = last.toRow - last.fromRow,\n          dCell = last.toCell - last.fromCell,\n\n      // walking direction\n      dirRow = active.row == last.fromRow ? 1 : -1,\n          dirCell = active.cell == last.fromCell ? 1 : -1;\n\n      if (e.which == 37) {\n        dCell -= dirCell;\n      } else if (e.which == 39) {\n        dCell += dirCell;\n      } else if (e.which == 38) {\n        dRow -= dirRow;\n      } else if (e.which == 40) {\n        dRow += dirRow;\n      }\n\n      // define new selection range\n      var new_last = new _slick2.default.Range(active.row, active.cell, active.row + dirRow * dRow, active.cell + dirCell * dCell);\n      if (removeInvalidRanges([new_last]).length) {\n        ranges.push(new_last);\n        var viewRow = dirRow > 0 ? new_last.toRow : new_last.fromRow;\n        var viewCell = dirCell > 0 ? new_last.toCell : new_last.fromCell;\n        _grid.scrollRowIntoView(viewRow);\n        _grid.scrollCellIntoView(viewRow, viewCell);\n      } else ranges.push(last);\n\n      setSelectedRanges(ranges);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  Object.assign(this, {\n    getSelectedRanges: getSelectedRanges,\n    setSelectedRanges: setSelectedRanges,\n\n    init: init,\n    destroy: destroy,\n\n    onSelectedRangesChanged: new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(16);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = CheckboxSelectColumn;\n\n\nfunction CheckboxSelectColumn(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _selectedRowsLookup = {};\n  var _defaults = {\n    columnId: '_checkbox_selector',\n    cssClass: null,\n    toolTip: 'Select/Deselect All',\n    width: 30\n  };\n\n  var _options = _jquery2.default.extend(true, {}, _defaults, options);\n\n  function init(grid) {\n    _grid = grid;\n    _handler.subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged).subscribe(_grid.onClick, handleClick).subscribe(_grid.onHeaderClick, handleHeaderClick).subscribe(_grid.onKeyDown, handleKeyDown);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleSelectedRowsChanged(e, args) {\n    var selectedRows = _grid.getSelectedRows();\n    var lookup = {},\n        row = void 0,\n        i = void 0;\n    for (i = 0; i < selectedRows.length; i++) {\n      row = selectedRows[i];\n      lookup[row] = true;\n      if (lookup[row] !== _selectedRowsLookup[row]) {\n        _grid.invalidateRow(row);\n        delete _selectedRowsLookup[row];\n      }\n    }\n    for (i in _selectedRowsLookup) {\n      _grid.invalidateRow(i);\n    }\n    _selectedRowsLookup = lookup;\n    _grid.render();\n\n    if (selectedRows.length && selectedRows.length == _grid.getDataLength()) {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox' checked='checked'>\", _options.toolTip);\n    } else {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox'>\", _options.toolTip);\n    }\n  }\n\n  function handleKeyDown(e, args) {\n    if (e.which == 32) {\n      if (_grid.getColumns()[args.cell].id === _options.columnId) {\n        // if editing, try to commit\n        if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()) {\n          toggleRowSelection(args.row);\n        }\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function handleClick(e, args) {\n    // clicking on a row select checkbox\n    if (_grid.getColumns()[args.cell].id === _options.columnId && (0, _jquery2.default)(e.target).is(':checkbox')) {\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      toggleRowSelection(args.row);\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function toggleRowSelection(row) {\n    if (_selectedRowsLookup[row]) {\n      _grid.setSelectedRows(_jquery2.default.grep(_grid.getSelectedRows(), function (n) {\n        return n != row;\n      }));\n    } else {\n      _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n    }\n  }\n\n  function handleHeaderClick(e, args) {\n    if (args.column.id == _options.columnId && (0, _jquery2.default)(e.target).is(':checkbox')) {\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()) {\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if ((0, _jquery2.default)(e.target).is(':checked')) {\n        var rows = [];\n        for (var i = 0; i < _grid.getDataLength(); i++) {\n          rows.push(i);\n        }\n        _grid.setSelectedRows(rows);\n      } else {\n        _grid.setSelectedRows([]);\n      }\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function getColumnDefinition() {\n    return {\n      id: _options.columnId,\n      name: \"<input type='checkbox'>\",\n      toolTip: _options.toolTip,\n      field: 'sel',\n      width: _options.width,\n      resizable: false,\n      sortable: false,\n      cssClass: _options.cssClass,\n      formatter: checkboxSelectionFormatter\n    };\n  }\n\n  function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext) {\n    if (dataContext) {\n      return _selectedRowsLookup[row] ? \"<input type='checkbox' checked='checked'>\" : \"<input type='checkbox'>\";\n    }\n    return null;\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    getColumnDefinition: getColumnDefinition\n  });\n}\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(18);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = HeaderButtons;\n/** *\n * A plugin to add custom buttons to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a custom button in a column header, extend the column definition like so:\n *\n *   var columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          buttons: [\n *              {\n *                // button options\n *              },\n *              {\n *                // button options\n *              }\n *          ]\n *       }\n *     }\n *   ];\n *\n * Available button options:\n *    cssClass:     CSS class to add to the button.\n *    image:        Relative button image path.\n *    tooltip:      Button tooltip.\n *    showOnHover:  Only show the button on hover.\n *    handler:      Button click handler.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *\n * The plugin exposes the following events:\n *    onCommand:    Fired on button click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   a CSS class to use for buttons (default 'slick-header-button')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\n\nfunction HeaderButtons(options) {\n  var _grid;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    buttonCssClass: 'slick-header-button'\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered).subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleHeaderCellRendered(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.buttons) {\n      // Append buttons in reverse order since they are floated to the right.\n      var i = column.header.buttons.length;\n      while (i--) {\n        var button = column.header.buttons[i];\n        var btn = (0, _jquery2.default)('<div></div>').addClass(options.buttonCssClass).data('column', column).data('button', button);\n\n        if (button.showOnHover) {\n          btn.addClass('slick-header-button-hidden');\n        }\n\n        if (button.image) {\n          btn.css('backgroundImage', 'url(' + button.image + ')');\n        }\n\n        if (button.cssClass) {\n          btn.addClass(button.cssClass);\n        }\n\n        if (button.tooltip) {\n          btn.attr('title', button.tooltip);\n        }\n\n        if (button.command) {\n          btn.data('command', button.command);\n        }\n\n        if (button.handler) {\n          btn.bind('click', button.handler);\n        }\n\n        btn.bind('click', handleButtonClick).appendTo(args.node);\n        args.node.classList.add('has-buttons');\n      }\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.buttons) {\n      // Removing buttons via jQuery will also clean up any event handlers and data.\n      // NOTE: If you attach event handlers directly or using a different framework,\n      //       you must also clean them up here to avoid memory leaks.\n      (0, _jquery2.default)(args.node).find('.' + options.buttonCssClass).remove();\n    }\n  }\n\n  function handleButtonClick(e) {\n    var command = (0, _jquery2.default)(this).data('command');\n    var columnDef = (0, _jquery2.default)(this).data('column');\n    var button = (0, _jquery2.default)(this).data('button');\n\n    if (command != null) {\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'button': button\n      }, e, _self);\n\n      // Update the header in case the user updated the button definition in the handler.\n      _grid.updateColumnHeader(columnDef.id);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    'onCommand': new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(20);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// import './slick.headermenu.css';\n\nexports.default = HeaderMenu;\n\n/** *\n * A plugin to add drop-down menus to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a menu in a column header, extend the column definition like so:\n *\n *   const columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          menu: {\n *              items: [\n *                {\n *                  // menu item options\n *                },\n *                {\n *                  // menu item options\n *                }\n *              ]\n *          }\n *       }\n *     }\n *   ];\n *\n *\n * Available menu options:\n *    tooltip:      Menu button tooltip.\n *\n *\n * Available menu item options:\n *    title:        Menu item text.\n *    disabled:     Whether the item is disabled.\n *    tooltip:      Item tooltip.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *    iconCssClass: A CSS class to be added to the menu item icon.\n *    iconImage:    A url to the icon image.\n *\n *\n * The plugin exposes the following events:\n *    onBeforeMenuShow:   Fired before the menu is shown.  You can customize the menu or dismiss it by returning false.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            menu:     Menu options.  Note that you can change the menu items here.\n *\n *    onCommand:    Fired on menu item click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   an extra CSS class to add to the menu button\n *    buttonImage:      a url to the menu button image (default '../images/down.gif')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\n\nfunction HeaderMenu(options) {\n  var _grid = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    buttonCssClass: null,\n    buttonImage: null\n  };\n\n  var $menu = void 0;\n  var $activeHeaderColumn = void 0;\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered).subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n\n    // Hide the menu on outside click.\n    (0, _jquery2.default)(document.body).bind('mousedown', handleBodyMouseDown);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n    (0, _jquery2.default)(document.body).unbind('mousedown', handleBodyMouseDown);\n  }\n\n  function handleBodyMouseDown(e) {\n    if ($menu && $menu[0] != e.target && !_jquery2.default.contains($menu[0], e.target)) {\n      hideMenu();\n    }\n  }\n\n  function hideMenu() {\n    if ($menu) {\n      $menu.remove();\n      $menu = null;\n      $activeHeaderColumn.removeClass('slick-header-column-active');\n    }\n  }\n\n  function handleHeaderCellRendered(e, args) {\n    var column = args.column;\n    var menu = column.header && column.header.menu;\n\n    if (menu) {\n      var $el = (0, _jquery2.default)('<div></div>').addClass('slick-header-menubutton').data('column', column).data('menu', menu);\n\n      if (options.buttonCssClass) {\n        $el.addClass(options.buttonCssClass);\n      }\n\n      if (options.buttonImage) {\n        $el.css('background-image', 'url(' + options.buttonImage + ')');\n      }\n\n      if (menu.tooltip) {\n        $el.attr('title', menu.tooltip);\n      }\n\n      $el.bind('click', showMenu).appendTo(args.node);\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args) {\n    var column = args.column;\n\n    if (column.header && column.header.menu) {\n      (0, _jquery2.default)(args.node).find('.slick-header-menubutton').remove();\n    }\n  }\n\n  function showMenu(e) {\n    var $menuButton = (0, _jquery2.default)(this);\n    var menu = $menuButton.data('menu');\n    var columnDef = $menuButton.data('column');\n\n    // Let the user modify the menu or cancel altogether,\n    // or provide alternative menu implementation.\n    if (_self.onBeforeMenuShow.notify({\n      'grid': _grid,\n      'column': columnDef,\n      'menu': menu\n    }, e, _self) == false) {\n      return;\n    }\n\n    if (!$menu) {\n      $menu = (0, _jquery2.default)(\"<div class='slick-header-menu'></div>\").appendTo(_grid.getContainerNode());\n    }\n    $menu.empty();\n\n    // Construct the menu items.\n    for (var i = 0; i < menu.items.length; i++) {\n      var item = menu.items[i];\n\n      var $li = (0, _jquery2.default)(\"<div class='slick-header-menuitem'></div>\").data('command', item.command || '').data('column', columnDef).data('item', item).bind('click', handleMenuItemClick).appendTo($menu);\n\n      if (item.disabled) {\n        $li.addClass('slick-header-menuitem-disabled');\n      }\n\n      if (item.tooltip) {\n        $li.attr('title', item.tooltip);\n      }\n\n      var $icon = (0, _jquery2.default)(\"<div class='slick-header-menuicon'></div>\").appendTo($li);\n\n      if (item.iconCssClass) {\n        $icon.addClass(item.iconCssClass);\n      }\n\n      if (item.iconImage) {\n        $icon.css('background-image', 'url(' + item.iconImage + ')');\n      }\n\n      (0, _jquery2.default)(\"<span class='slick-header-menucontent'></span>\").text(item.title).appendTo($li);\n    }\n\n    // Position the menu.\n    $menu.offset({ top: (0, _jquery2.default)(this).offset().top + (0, _jquery2.default)(this).height(), left: (0, _jquery2.default)(this).offset().left });\n\n    // Mark the header as active to keep the highlighting.\n    $activeHeaderColumn = $menuButton.closest('.slick-header-column');\n    $activeHeaderColumn.addClass('slick-header-column-active');\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleMenuItemClick(e) {\n    var command = (0, _jquery2.default)(this).data('command');\n    var columnDef = (0, _jquery2.default)(this).data('column');\n    var item = (0, _jquery2.default)(this).data('item');\n\n    if (item.disabled) {\n      return;\n    }\n\n    hideMenu();\n\n    if (command != null && command != '') {\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'item': item\n      }, e, _self);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init: init,\n    destroy: destroy,\n\n    'onBeforeMenuShow': new _slick2.default.Event(),\n    'onCommand': new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(22);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = RowMoveManager;\n\n\nfunction RowMoveManager(options) {\n  var _grid = void 0;\n  var _canvas = void 0;\n  var _dragging = void 0;\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _defaults = {\n    cancelEditOnDrag: false\n  };\n\n  function init(grid) {\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler.subscribe(_grid.onDragInit, handleDragInit).subscribe(_grid.onDragStart, handleDragStart).subscribe(_grid.onDrag, handleDrag).subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd) {\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(e, dd) {\n    var cell = _grid.getCellFromEvent(e);\n\n    if (options.cancelEditOnDrag && _grid.getEditorLock().isActive()) {\n      _grid.getEditorLock().cancelCurrentEdit();\n    }\n\n    if (_grid.getEditorLock().isActive() || !/move|selectAndMove/.test(_grid.getColumns()[cell.cell].behavior)) {\n      return false;\n    }\n\n    _dragging = true;\n    e.stopImmediatePropagation();\n\n    var selectedRows = _grid.getSelectedRows();\n\n    if (selectedRows.length == 0 || $.inArray(cell.row, selectedRows) == -1) {\n      selectedRows = [cell.row];\n      _grid.setSelectedRows(selectedRows);\n    }\n\n    var rowHeight = _grid.getOptions().rowHeight;\n\n    dd.selectedRows = selectedRows;\n\n    dd.selectionProxy = $(\"<div class='slick-reorder-proxy'/>\").css('position', 'absolute').css('zIndex', '99999').css('width', $(_canvas).innerWidth()).css('height', rowHeight * selectedRows.length).appendTo(_canvas);\n\n    dd.guide = $(\"<div class='slick-reorder-guide'/>\").css('position', 'absolute').css('zIndex', '99998').css('width', $(_canvas).innerWidth()).css('top', -1000).appendTo(_canvas);\n\n    dd.insertBefore = -1;\n  }\n\n  function handleDrag(e, dd) {\n    if (!_dragging) {\n      return;\n    }\n\n    e.stopImmediatePropagation();\n\n    var top = e.pageY - $(_canvas).offset().top;\n    dd.selectionProxy.css('top', top - 5);\n\n    var insertBefore = Math.max(0, Math.min(Math.round(top / _grid.getOptions().rowHeight), _grid.getDataLength()));\n    if (insertBefore !== dd.insertBefore) {\n      var eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': insertBefore\n      };\n\n      if (_self.onBeforeMoveRows.notify(eventData) === false) {\n        dd.guide.css('top', -1000);\n        dd.canMove = false;\n      } else {\n        dd.guide.css('top', insertBefore * _grid.getOptions().rowHeight);\n        dd.canMove = true;\n      }\n\n      dd.insertBefore = insertBefore;\n    }\n  }\n\n  function handleDragEnd(e, dd) {\n    if (!_dragging) {\n      return;\n    }\n    _dragging = false;\n    e.stopImmediatePropagation();\n\n    dd.guide.remove();\n    dd.selectionProxy.remove();\n\n    if (dd.canMove) {\n      var eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': dd.insertBefore\n      };\n      // TODO:  _grid.remapCellCssClasses ?\n      _self.onMoveRows.notify(eventData);\n    }\n  }\n\n  Object.assign(this, {\n    'onBeforeMoveRows': new _slick2.default.Event(),\n    'onMoveRows': new _slick2.default.Event(),\n    init: init,\n    destroy: destroy\n  });\n}\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(24);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = _slick2.default;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = RowSelectionModel;\n\n\nfunction RowSelectionModel(options) {\n  var _grid = void 0;\n  var _ranges = [];\n  var _self = this;\n  var _handler = new _slick2.default.EventHandler();\n  var _inHandler = void 0;\n  var _options = void 0;\n  var _defaults = {\n    selectActiveRow: true\n  };\n\n  function init(grid) {\n    _options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onActiveCellChanged, wrapHandler(handleActiveCellChange));\n    _handler.subscribe(_grid.onKeyDown, wrapHandler(handleKeyDown));\n    _handler.subscribe(_grid.onClick, wrapHandler(handleClick));\n  }\n\n  function destroy() {\n    _handler.unsubscribeAll();\n  }\n\n  function wrapHandler(handler) {\n    return function () {\n      if (!_inHandler) {\n        _inHandler = true;\n        handler.apply(this, arguments);\n        _inHandler = false;\n      }\n    };\n  }\n\n  function rangesToRows(ranges) {\n    var rows = [];\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        rows.push(j);\n      }\n    }\n    return rows;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = _grid.getColumns().length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getRowsRange(from, to) {\n    var i = void 0;\n    var rows = [];\n    for (i = from; i <= to; i++) {\n      rows.push(i);\n    }\n    for (i = to; i < from; i++) {\n      rows.push(i);\n    }\n    return rows;\n  }\n\n  function getSelectedRows() {\n    return rangesToRows(_ranges);\n  }\n\n  function setSelectedRows(rows) {\n    setSelectedRanges(rowsToRanges(rows));\n  }\n\n  function setSelectedRanges(ranges) {\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)) {\n      return;\n    }\n    _ranges = ranges;\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges() {\n    return _ranges;\n  }\n\n  function handleActiveCellChange(e, data) {\n    if (_options.selectActiveRow && data.row != null) {\n      setSelectedRanges([new _slick2.default.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n    }\n  }\n\n  function handleKeyDown(e) {\n    var activeRow = _grid.getActiveCell();\n    if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)) {\n      var selectedRows = getSelectedRows();\n      selectedRows.sort(function (x, y) {\n        return x - y;\n      });\n\n      if (!selectedRows.length) {\n        selectedRows = [activeRow.row];\n      }\n\n      var top = selectedRows[0];\n      var bottom = selectedRows[selectedRows.length - 1];\n      var active = void 0;\n\n      if (e.which == 40) {\n        active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n      } else {\n        active = activeRow.row < bottom ? --bottom : --top;\n      }\n\n      if (active >= 0 && active < _grid.getDataLength()) {\n        _grid.scrollRowIntoView(active);\n        _ranges = rowsToRanges(getRowsRange(top, bottom));\n        setSelectedRanges(_ranges);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  function handleClick(e) {\n    var cell = _grid.getCellFromEvent(e);\n    if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)) {\n      return false;\n    }\n\n    if (!_grid.getOptions().multiSelect || !e.ctrlKey && !e.shiftKey && !e.metaKey) {\n      return false;\n    }\n\n    var selection = rangesToRows(_ranges);\n    var idx = _jquery2.default.inArray(cell.row, selection);\n\n    if (idx === -1 && (e.ctrlKey || e.metaKey)) {\n      selection.push(cell.row);\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (idx !== -1 && (e.ctrlKey || e.metaKey)) {\n      selection = _jquery2.default.grep(selection, function (o, i) {\n        return o !== cell.row;\n      });\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (selection.length && e.shiftKey) {\n      var last = selection.pop();\n      var from = Math.min(cell.row, last);\n      var to = Math.max(cell.row, last);\n      selection = [];\n      for (var i = from; i <= to; i++) {\n        if (i !== last) {\n          selection.push(i);\n        }\n      }\n      selection.push(last);\n      _grid.setActiveCell(cell.row, cell.cell);\n    }\n\n    _ranges = rowsToRanges(selection);\n    setSelectedRanges(_ranges);\n    e.stopImmediatePropagation();\n\n    return true;\n  }\n\n  Object.assign(this, {\n    getSelectedRows: getSelectedRows,\n    setSelectedRows: setSelectedRows,\n\n    getSelectedRanges: getSelectedRanges,\n    setSelectedRanges: setSelectedRanges,\n\n    init: init,\n    destroy: destroy,\n\n    'onSelectedRangesChanged': new _slick2.default.Event()\n  });\n}\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _interactjs = __webpack_require__(4);\n\nvar _interactjs2 = _interopRequireDefault(_interactjs);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Slick.Grid globals pretense\n_slick2.default.FrozenGrid = SlickGrid; /**\n                                         * @license\n                                         * (c) 2009-2013 Michael Leibman\n                                         * michael{dot}leibman{at}gmail{dot}com\n                                         * http://github.com/mleibman/slickgrid\n                                         *\n                                         * Distributed under MIT license.\n                                         * All rights reserved.\n                                         *\n                                         * SlickGrid v2.2\n                                         *\n                                         * NOTES:\n                                         *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n                                         *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n                                         *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n                                         *     and do proper cleanup.\n                                         */\n\nexports.default = SlickGrid;\n\n// shared across all grids on the page\n\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options) {\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    autoHeight: false,\n    editorLock: _slick2.default.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: \"flashing\",\n    selectedCellCssClass: \"selected\",\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    frozenBottom: false,\n    frozenColumn: -1,\n    frozenRow: -1,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: \"new-row\"\n  };\n\n  var columnDefaults = {\n    name: \"\",\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $groupHeaders = (0, _jquery2.default)();\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\n  var $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var treeColumns;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth, canvasWidthL, canvasWidthR;\n  var headersWidth, headersWidthL, headersWidthR;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0,\n      // border+padding\n  cellWidthDiff = 0,\n      cellHeightDiff = 0;\n  var absoluteColumnMinWidth;\n  var hasFrozenRows = false;\n  var frozenRowsHeight = 0;\n  var actualFrozenRow = -1;\n  var paneTopH = 0;\n  var paneBottomH = 0;\n  var viewportTopH = 0;\n  var viewportBottomH = 0;\n  var topPanelH = 0;\n  var headerRowH = 0;\n  var footerRowH = 0;\n\n  var tabbingDirection = 1;\n  var $activeCanvasNode;\n  var $activeViewportNode;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows = 0;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  var $paneHeaderL;\n  var $paneHeaderR;\n  var $paneTopL;\n  var $paneTopR;\n  var $paneBottomL;\n  var $paneBottomR;\n\n  var $headerScrollerL;\n  var $headerScrollerR;\n\n  var $headerL;\n  var $headerR;\n\n  var $groupHeadersL;\n  var $groupHeadersR;\n\n  var $headerRowScrollerL;\n  var $headerRowScrollerR;\n\n  var $footerRowScrollerL;\n  var $footerRowScrollerR;\n\n  var $headerRowL;\n  var $headerRowR;\n\n  var $footerRowL;\n  var $footerRowR;\n\n  var $topPanelScrollerL;\n  var $topPanelScrollerR;\n\n  var $topPanelL;\n  var $topPanelR;\n\n  var $viewportTopL;\n  var $viewportTopR;\n  var $viewportBottomL;\n  var $viewportBottomR;\n\n  var $canvasTopL;\n  var $canvasTopR;\n  var $canvasBottomL;\n  var $canvasBottomR;\n\n  var $viewportScrollContainerX;\n  var $viewportScrollContainerY;\n  var $headerScrollContainer;\n  var $headerRowScrollContainer;\n  var $footerRowScrollContainer;\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    $container = (0, _jquery2.default)(container);\n    if ($container.length < 1) {\n      throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n    }\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = _jquery2.default.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    treeColumns = new _slick2.default.TreeColumns(columns);\n    columns = treeColumns.extractColumns();\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      \"commitCurrentEdit\": commitCurrentEdit,\n      \"cancelCurrentEdit\": cancelCurrentEdit\n    };\n\n    $container.empty().css(\"overflow\", \"hidden\").css(\"outline\", 0).addClass(uid).addClass(\"ui-widget\");\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css(\"position\"))) {\n      $container.css(\"position\", \"relative\");\n    }\n\n    $focusSink = (0, _jquery2.default)(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    // Containers used for scrolling frozen columns and rows\n    $paneHeaderL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneHeaderR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneTopL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneTopR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneBottomL = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneBottomR = (0, _jquery2.default)(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\n\n    // Append the header scroller containers\n    $headerScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-left' />\").appendTo($paneHeaderL);\n    $headerScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-header slick-header-right' />\").appendTo($paneHeaderR);\n\n    // Cache the header scroller containers\n    $headerScroller = (0, _jquery2.default)().add($headerScrollerL).add($headerScrollerR);\n\n    if (treeColumns.hasDepth()) {\n      $groupHeadersL = [], $groupHeadersR = [];\n      for (var index = 0; index < treeColumns.getDepth() - 1; index++) {\n        $groupHeadersL[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n        $groupHeadersR[index] = (0, _jquery2.default)(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n      }\n\n      $groupHeaders = (0, _jquery2.default)().add($groupHeadersL).add($groupHeadersR);\n    }\n\n    // Append the columnn containers to the headers\n    $headerL = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n    $headerR = (0, _jquery2.default)(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\n    // Cache the header columns\n    $headers = (0, _jquery2.default)().add($headerL).add($headerR);\n\n    $headerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopL);\n    $headerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopR);\n\n    $headerRowScroller = (0, _jquery2.default)().add($headerRowScrollerL).add($headerRowScrollerR);\n\n    $headerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($headerRowScrollerL);\n    $headerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($headerRowScrollerR);\n\n    $headerRowL = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\n    $headerRowR = (0, _jquery2.default)(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\n\n    $headerRow = (0, _jquery2.default)().add($headerRowL).add($headerRowR);\n\n    // Append the top panel scroller\n    $topPanelScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopL);\n    $topPanelScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopR);\n\n    $topPanelScroller = (0, _jquery2.default)().add($topPanelScrollerL).add($topPanelScrollerR);\n\n    // Append the top panel\n    $topPanelL = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\n    $topPanelR = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\n\n    $topPanel = (0, _jquery2.default)().add($topPanelL).add($topPanelR);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    // Append the viewport containers\n    $viewportTopL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\n    $viewportTopR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\n    $viewportBottomL = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\n    $viewportBottomR = (0, _jquery2.default)(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\n\n    // Cache the viewports\n    $viewport = (0, _jquery2.default)().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\n\n    // Default the active viewport to the top left\n    $activeViewportNode = $viewportTopL;\n\n    // Append the canvas containers\n    $canvasTopL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\n    $canvasTopR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\n    $canvasBottomL = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\n    $canvasBottomR = (0, _jquery2.default)(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\n\n    // Cache the canvases\n    $canvas = (0, _jquery2.default)().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\n\n    // Default the active canvas to the top left\n    $activeCanvasNode = $canvasTopL;\n\n    // footer Row\n    $footerRowScrollerR = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopR);\n    $footerRowScrollerL = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopL);\n\n    $footerRowScroller = (0, _jquery2.default)().add($footerRowScrollerL).add($footerRowScrollerR);\n\n    $footerRowSpacerL = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($footerRowScrollerL);\n    $footerRowSpacerR = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\").appendTo($footerRowScrollerR);\n\n    $footerRowL = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\n    $footerRowR = (0, _jquery2.default)(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\n\n    $footerRow = (0, _jquery2.default)().add($footerRowL).add($footerRowR);\n\n    if (!options.showFooterRow) {\n      $footerRowScroller.hide();\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n\n      getViewportWidth();\n      getViewportHeight();\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind(\"selectstart.ui\", function (event) {\n          return (0, _jquery2.default)(event.target).is(\"input,textarea\");\n        });\n      }\n\n      setFrozenOptions();\n      setPaneVisibility();\n      setScroller();\n      setOverflow();\n\n      updateColumnCaches();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind(\"resize.slickgrid\", resizeCanvas);\n      $viewport.on(\"scroll\", handleScroll);\n\n      if (_jquery2.default.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)) {\n        $viewport.on(\"mousewheel\", handleMouseWheel);\n      }\n\n      $headerScroller.bind(\"contextmenu\", handleHeaderContextMenu).bind(\"click\", handleHeaderClick).delegate(\".slick-header-column\", \"mouseenter\", handleHeaderMouseEnter).delegate(\".slick-header-column\", \"mouseleave\", handleHeaderMouseLeave);\n      $headerRowScroller.bind(\"scroll\", handleHeaderRowScroll);\n\n      $footerRowScroller.bind(\"scroll\", handleFooterRowScroll);\n\n      $focusSink.add($focusSink2).bind(\"keydown\", handleKeyDown);\n      $canvas.bind(\"keydown\", handleKeyDown).bind(\"click\", handleClick).bind(\"dblclick\", handleDblClick).bind(\"contextmenu\", handleContextMenu).delegate(\".slick-cell\", \"mouseenter\", handleMouseEnter).delegate(\".slick-cell\", \"mouseleave\", handleMouseLeave);\n\n      // legacy support for drag events\n      (0, _interactjs2.default)($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      });\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n        $canvas.on(\"mousewheel\", handleMouseWheel);\n      }\n    }\n  }\n\n  function hasFrozenColumns() {\n    return options.frozenColumn > -1;\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function getActiveCanvasNode(element) {\n    setActiveCanvasNode(element);\n\n    return $activeCanvasNode[0];\n  }\n\n  function getCanvases() {\n    return $canvas;\n  }\n\n  function setActiveCanvasNode(element) {\n    if (element) {\n      $activeCanvasNode = (0, _jquery2.default)(element.target).closest('.grid-canvas');\n    }\n  }\n\n  function getViewportNode() {\n    return $viewport[0];\n  }\n\n  function getActiveViewportNode(element) {\n    setActiveViewPortNode(element);\n\n    return $activeViewportNode[0];\n  }\n\n  function setActiveViewportNode(element) {\n    if (element) {\n      $activeViewportNode = (0, _jquery2.default)(element.target).closest('.slick-viewport');\n    }\n  }\n\n  function measureScrollbar() {\n    var $c = (0, _jquery2.default)(\"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo(document.body);\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth() {\n    headersWidth = headersWidthL = headersWidthR = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n\n      if (options.frozenColumn > -1 && i > options.frozenColumn) {\n        headersWidthR += width;\n      } else {\n        headersWidthL += width;\n      }\n    }\n\n    if (hasFrozenColumns()) {\n      headersWidthL = headersWidthL + 1000;\n\n      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n      headersWidthR += scrollbarDimensions.width;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    headersWidth = headersWidthL + headersWidthR;\n  }\n\n  function getHeadersWidthL() {\n    headersWidthL = 0;\n\n    columns.forEach(function (column, i) {\n      if (!(options.frozenColumn > -1 && i > options.frozenColumn)) headersWidthL += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthL += 1000;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    return headersWidthL;\n  }\n\n  function getHeadersWidthR() {\n    headersWidthR = 0;\n\n    columns.forEach(function (column, i) {\n      if (options.frozenColumn > -1 && i > options.frozenColumn) headersWidthR += column.width;\n    });\n\n    if (hasFrozenColumns()) {\n      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n      headersWidthR += scrollbarDimensions.width;\n    }\n\n    return headersWidthR;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    var i = columns.length;\n\n    canvasWidthL = canvasWidthR = 0;\n\n    while (i--) {\n      if (hasFrozenColumns() && i > options.frozenColumn) {\n        canvasWidthR += columns[i].width;\n      } else {\n        canvasWidthL += columns[i].width;\n      }\n    }\n\n    var totalRowWidth = canvasWidthL + canvasWidthR;\n\n    return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    var oldCanvasWidthL = canvasWidthL;\n    var oldCanvasWidthR = canvasWidthR;\n    var widthChanged;\n    canvasWidth = getCanvasWidth();\n\n    widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n\n    if (widthChanged || hasFrozenColumns() || hasFrozenRows) {\n      $canvasTopL.width(canvasWidthL);\n\n      getHeadersWidth();\n\n      $headerL.width(headersWidthL);\n      $headerR.width(headersWidthR);\n\n      if (hasFrozenColumns()) {\n        $canvasTopR.width(canvasWidthR);\n\n        $paneHeaderL.width(canvasWidthL);\n        $paneHeaderR.css('left', canvasWidthL);\n        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\n        $paneTopL.width(canvasWidthL);\n        $paneTopR.css('left', canvasWidthL);\n        $paneTopR.css('width', viewportW - canvasWidthL);\n\n        $headerRowScrollerL.width(canvasWidthL);\n        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $headerRowL.width(canvasWidthL);\n        $headerRowR.width(canvasWidthR);\n\n        $footerRowScrollerL.width(canvasWidthL);\n        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $footerRowL.width(canvasWidthL);\n        $footerRowR.width(canvasWidthR);\n\n        $viewportTopL.width(canvasWidthL);\n        $viewportTopR.width(viewportW - canvasWidthL);\n\n        if (hasFrozenRows) {\n          $paneBottomL.width(canvasWidthL);\n          $paneBottomR.css('left', canvasWidthL);\n\n          $viewportBottomL.width(canvasWidthL);\n          $viewportBottomR.width(viewportW - canvasWidthL);\n\n          $canvasBottomL.width(canvasWidthL);\n          $canvasBottomR.width(canvasWidthR);\n        }\n      } else {\n        $paneHeaderL.width('100%');\n\n        $paneTopL.width('100%');\n\n        $headerRowScrollerL.width('100%');\n\n        $headerRowL.width(canvasWidth);\n\n        $footerRowScrollerL.width('100%');\n\n        $footerRowL.width(canvasWidth);\n\n        $viewportTopL.width('100%');\n\n        if (hasFrozenRows) {\n          $viewportBottomL.width('100%');\n          $canvasBottomL.width(canvasWidthL);\n        }\n      }\n\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    if (widthChanged || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target.attr(\"unselectable\", \"on\").css(\"MozUserSelect\", \"none\").bind(\"selectstart.ui\", function () {\n        return false;\n      }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = (0, _jquery2.default)(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css(\"height\", test);\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents() {\n    var elem = hasFrozenRows && !options.frozenBottom ? $canvasBottomL[0] : $canvasTopL[0];\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n        var $elem = (0, _jquery2.default)(elem);\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind(\"scroll.\" + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n    $boundAncestors.unbind(\"scroll.\" + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n\n      $header.attr(\"title\", toolTip || \"\").children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n    }\n  }\n\n  function getHeaderRow() {\n    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $headerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $headerRowTarget = $headerRowL;\n      } else {\n        $headerRowTarget = $headerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $headerRowTarget = $headerRowL;\n    }\n\n    var $header = $headerRowTarget.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRow() {\n    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n  }\n\n  function getFooterRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n\n    var $footerRowTarget;\n\n    if (hasFrozenColumns()) {\n      if (idx <= options.frozenColumn) {\n        $footerRowTarget = $footerRowL;\n      } else {\n        $footerRowTarget = $footerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $footerRowTarget = $footerRowL;\n    }\n\n    var $footer = $footerRowTarget.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnFooter() {\n    $footerRow.find(\".slick-footerrow-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeFooterRowCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $footerRowL.empty();\n    $footerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var footerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && i > options.frozenColumn ? $footerRowR : $footerRowL);\n\n      trigger(self.onFooterRowCellRendered, {\n        \"node\": footerRowCell[0],\n        \"column\": m\n      });\n    }\n  }\n\n  function createColumnGroupHeaders() {\n    var columnsLength = 0;\n    var frozenColumnsValid = false;\n\n    if (!treeColumns.hasDepth()) return;\n\n    for (var index = 0; index < $groupHeadersL.length; index++) {\n\n      $groupHeadersL[index].empty();\n      $groupHeadersR[index].empty();\n\n      var groupColumns = treeColumns.getColumnsInDepth(index);\n\n      for (var indexGroup in groupColumns) {\n        var m = groupColumns[indexGroup];\n\n        columnsLength += m.extractColumns().length;\n\n        if (hasFrozenColumns() && index == 0 && columnsLength - 1 === options.frozenColumn) frozenColumnsValid = true;\n\n        (0, _jquery2.default)(\"<div class='ui-state-default slick-group-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + \"</span>\").attr(\"id\", \"\" + uid + m.id).attr(\"title\", m.toolTip || \"\").data(\"column\", m).addClass(m.headerCssClass || \"\").addClass(hasFrozenColumns() && columnsLength - 1 <= options.frozenColumn ? 'frozen' : '').appendTo(hasFrozenColumns() && columnsLength - 1 > options.frozenColumn ? $groupHeadersR[index] : $groupHeadersL[index]);\n      }\n\n      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid) {\n        $groupHeadersL[index].empty();\n        $groupHeadersR[index].empty();\n        alert(\"All columns of group should to be grouped!\");\n        break;\n      }\n    }\n\n    applyColumnGroupHeaderWidths();\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      (0, _jquery2.default)(this).addClass(\"ui-state-hover\");\n    }\n\n    function onMouseLeave() {\n      (0, _jquery2.default)(this).removeClass(\"ui-state-hover\");\n    }\n\n    $headers.find(\".slick-header-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $headerL.empty();\n    $headerR.empty();\n\n    getHeadersWidth();\n\n    $headerL.width(headersWidthL);\n    $headerR.width(headersWidthR);\n\n    $headerRow.find(\".slick-headerrow-column\").each(function () {\n      var columnDef = (0, _jquery2.default)(this).data(\"column\");\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          \"node\": this,\n          \"column\": columnDef\n        });\n      }\n    });\n\n    $headerRowL.empty();\n    $headerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var $headerTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerL : $headerR : $headerL;\n      var $headerRowTarget = hasFrozenColumns() ? i <= options.frozenColumn ? $headerRowL : $headerRowR : $headerRowL;\n\n      var header = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + \"</span>\").width(m.width).attr(\"id\", \"\" + uid + m.id).attr(\"title\", m.toolTip || \"\").data(\"column\", m).addClass(m.headerCssClass || \"\").addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '').appendTo($headerTarget);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass(\"slick-header-sortable\");\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": header[0],\n        \"column\": m\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\").data(\"column\", m).appendTo($headerRowTarget);\n\n        trigger(self.onHeaderRowCellRendered, {\n          \"node\": headerRowCell[0],\n          \"column\": m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder) {\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function (e) {\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ((0, _jquery2.default)(e.target).hasClass(\"slick-resizable-handle\")) {\n        return;\n      }\n\n      var $col = (0, _jquery2.default)(e.target).closest(\".slick-header-column\");\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data(\"column\");\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort) {\n          if (sortOpts) {\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (!sortOpts) {\n            sortOpts = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0) {\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: _jquery2.default.map(sortColumns, function (col) {\n              return {\n                sortCol: columns[getColumnIndex(col.columnId)],\n                sortAsc: col.sortAsc\n              };\n            })\n          }, e);\n        }\n      }\n    });\n  }\n\n  function currentPositionInHeader(id) {\n    var currentPosition = 0;\n    $headers.find('.slick-header-column').each(function (i) {\n      if (this.id == id) {\n        currentPosition = i;\n        return false;\n      }\n    });\n\n    return currentPosition;\n  }\n\n  function limitPositionInGroup(idColumn) {\n    var groupColumnOfPreviousPosition,\n        startLimit = 0,\n        endLimit = 0;\n\n    treeColumns.getColumnsInDepth($groupHeadersL.length - 1).some(function (groupColumn) {\n      startLimit = endLimit;\n      endLimit += groupColumn.columns.length;\n\n      groupColumn.columns.some(function (column) {\n\n        if (column.id === idColumn) groupColumnOfPreviousPosition = groupColumn;\n\n        return groupColumnOfPreviousPosition;\n      });\n\n      return groupColumnOfPreviousPosition;\n    });\n\n    endLimit--;\n\n    return {\n      start: startLimit,\n      end: endLimit,\n      group: groupColumnOfPreviousPosition\n    };\n  }\n\n  function remove(arr, elem) {\n    var index = arr.lastIndexOf(elem);\n    if (index > -1) {\n      arr.splice(index, 1);\n      remove(arr, elem);\n    }\n  }\n\n  function columnPositionValidInGroup($item) {\n    var currentPosition = currentPositionInHeader($item[0].id);\n    var limit = limitPositionInGroup($item.data('column').id);\n    var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\n\n    return {\n      limit: limit,\n      valid: positionValid,\n      message: positionValid ? '' : 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\n    };\n  }\n\n  function setupColumnReorder() {\n    var x = 0;\n    var delta = 0;\n    var placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    (0, _interactjs2.default)('.slick-header-column').ignoreFrom('.slick-resizable-handle').draggable({\n      inertia: true,\n      // keep the element within the area of it's parent\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: { top: 0, left: 0, bottom: 0, right: 0 }\n      },\n      // enable autoScroll\n      autoScroll: true,\n      axis: 'x',\n      onstart: function onstart(event) {\n        x = 0;\n        delta = event.target.offsetWidth;\n\n        // get old order\n        $headers.find('.slick-header-column').each(function (index) {\n          (0, _jquery2.default)(this).data('index', index);\n        });\n\n        placeholder.style.height = event.target.offsetHeight + 'px';\n        placeholder.style.width = delta + 'px';\n\n        (0, _jquery2.default)(event.target).after(placeholder).css({\n          position: 'absolute',\n          zIndex: 1000,\n          marginLeft: (0, _jquery2.default)(event.target).position().left - 1000\n        });\n      },\n\n      onmove: function onmove(event) {\n        x += event.dx;\n        event.target.style.transform = 'translate3d(' + x + 'px, -3px, 100px)';\n        // event.target.style.marginLeft = x + 'px';\n      },\n\n      onend: function onend(event) {\n        x = 0;\n        delta = 0;\n\n        if (treeColumns.hasDepth()) {\n          var validPositionInGroup = columnPositionValidInGroup((0, _jquery2.default)(event.target));\n          var limit = validPositionInGroup.limit;\n\n          var cancel = !validPositionInGroup.valid;\n\n          if (cancel) alert(validPositionInGroup.message);\n        }\n\n        placeholder.parentNode.removeChild(placeholder);\n\n        if (cancel) {\n          event.target.style.transform = 'none';\n          setColumns(getColumns());\n          return;\n        }\n\n        (0, _jquery2.default)(event.target).css({\n          position: 'relative',\n          zIndex: '',\n          marginLeft: 0,\n          transform: 'none'\n        });\n\n        var newColumns = [];\n        $headers.find('.slick-header-column').each(function (index) {\n          newColumns.push(columns[(0, _jquery2.default)(this).data('index')]);\n          (0, _jquery2.default)(this).removeData('index');\n        });\n\n        setColumns(newColumns);\n\n        trigger(self.onColumnsReordered, { impactedColumns: getImpactedColumns(limit), grid: self });\n        setupColumnResize();\n      }\n    }).dropzone({\n      accept: '.slick-header-column',\n\n      ondragenter: function ondragenter(event) {\n        event.target.classList.add('interact-drop-active');\n        event.relatedTarget.classList.add('interact-can-drop');\n      },\n\n      ondragleave: function ondragleave(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n      },\n\n      ondrop: function ondrop(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n        (0, _jquery2.default)(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n      }\n    });\n  }\n\n  function getImpactedColumns(limit) {\n    var impactedColumns = [];\n\n    if (limit != undefined) {\n\n      for (var i = limit.start; i <= limit.end; i++) {\n        impactedColumns.push(columns[i]);\n      }\n    } else {\n\n      impactedColumns = columns;\n    }\n\n    return impactedColumns;\n  }\n\n  function setupColumnResize() {\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function (i, e) {\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined) {\n      return;\n    }\n    columnElements.each(function (i, element) {\n      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n        return;\n      }\n      $col = (0, _jquery2.default)(element);\n\n      var $handle = (0, _jquery2.default)(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable')) return;\n\n      var activeColumn = columns[i];\n      if (activeColumn.resizable) {\n        $col.data('resizable', true);\n        (0, _interactjs2.default)(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function (event) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function (event) {\n          var x = event.dx;\n          var width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width) width = activeColumn.minWidth;else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width) width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns) {\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize) {\n            applyColumnWidths();\n          }\n        }).on('resizeend', function (event) {\n          event.target.classList.remove('slick-header-column-active');\n          if (treeColumns.hasDepth()) createColumnGroupHeaders();\n\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, { grid: self });\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n    var delta = 0;\n    _jquery2.default.each(p, function (n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function setFrozenOptions() {\n    options.frozenColumn = options.frozenColumn >= 0 && options.frozenColumn < columns.length ? parseInt(options.frozenColumn) : -1;\n\n    options.frozenRow = options.frozenRow >= 0 && options.frozenRow < numVisibleRows ? parseInt(options.frozenRow) : -1;\n\n    if (options.frozenRow > -1) {\n      hasFrozenRows = true;\n      frozenRowsHeight = options.frozenRow * options.rowHeight;\n\n      var dataLength = getDataLength() || this.data.length;\n\n      actualFrozenRow = options.frozenBottom ? dataLength - options.frozenRow : options.frozenRow;\n    } else {\n      hasFrozenRows = false;\n    }\n  }\n\n  function setPaneVisibility() {\n    if (hasFrozenColumns()) {\n      $paneHeaderR.show();\n      $paneTopR.show();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n        $paneBottomR.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    } else {\n      $paneHeaderR.hide();\n      $paneTopR.hide();\n      $paneBottomR.hide();\n\n      if (hasFrozenRows) {\n        $paneBottomL.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    }\n  }\n\n  function setOverflow() {\n    $viewportTopL.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportTopR.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'scroll' : hasFrozenRows ? 'hidden' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportBottomL.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'hidden' : 'hidden' : hasFrozenRows ? 'scroll' : 'auto'\n    });\n\n    $viewportBottomR.css({\n      'overflow-x': hasFrozenColumns() ? hasFrozenRows ? 'scroll' : 'auto' : hasFrozenRows ? 'auto' : 'auto',\n      'overflow-y': hasFrozenColumns() ? hasFrozenRows ? 'auto' : 'auto' : hasFrozenRows ? 'auto' : 'auto'\n    });\n  }\n\n  function setScroller() {\n    if (hasFrozenColumns()) {\n      $headerScrollContainer = $headerScrollerR;\n      $headerRowScrollContainer = $headerRowScrollerR;\n      $footerRowScrollContainer = $footerRowScrollerR;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomR;\n          $viewportScrollContainerY = $viewportTopR;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n      }\n    } else {\n      $headerScrollContainer = $headerScrollerL;\n      $headerRowScrollContainer = $headerRowScrollerL;\n      $footerRowScrollContainer = $footerRowScrollerL;\n\n      if (hasFrozenRows) {\n        if (options.frozenBottom) {\n          $viewportScrollContainerX = $viewportBottomL;\n          $viewportScrollContainerY = $viewportTopL;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n      }\n    }\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n    var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n    el = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      _jquery2.default.each(h, function (n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = (0, _jquery2.default)(\"<div class='slick-row' />\").appendTo($canvas);\n    el = (0, _jquery2.default)(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\") {\n      _jquery2.default.each(h, function (n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = (0, _jquery2.default)(\"<style type='text/css' rel='stylesheet' />\").appendTo((0, _jquery2.default)(\"head\"));\n\n    var getRule = function getRule(rule) {\n      return '.' + uid + ' ' + rule;\n    };\n\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = [getRule('.slick-group-header-column { left: 1000px; }'), getRule('.slick-header-column { left: 1000px; }'), getRule('.slick-top-panel { height: ' + options.topPanelHeight + 'px; }'), getRule('.slick-headerrow-columns, .' + uid + ' .slick-header-columns { height: ' + options.headerRowHeight + 'px; }'), getRule('.slick-cell { height: ' + rowHeight + 'px; }'), getRule('.slick-row { height: ' + options.rowHeight + 'px; }'), getRule('.slick-footerrow-columns, ' + uid + ' .slick-footer-columns  { height: ' + options.footerRowHeight + 'px; }')];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error(\"Cannot find stylesheet.\");\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      \"left\": columnCssRulesL[idx],\n      \"right\": columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {});\n\n    var i = plugins.length;\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind(\".slickgrid\");\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e) {\n    e = e || new _slick2.default.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += growSize;\n      }\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    applyColumnGroupHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnGroupHeaderWidths() {\n    if (!treeColumns.hasDepth()) return;\n\n    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--) {\n\n      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\n      (0, _jquery2.default)().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function (i) {\n        var $groupHeader = (0, _jquery2.default)(this),\n            currentColumnIndex = 0;\n\n        $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\n        $groupHeader.children().each(function () {\n          var $groupHeaderColumn = (0, _jquery2.default)(this);\n\n          var m = (0, _jquery2.default)(this).data('column');\n\n          m.width = 0;\n\n          m.columns.forEach(function () {\n            var $headerColumn = $groupHeader.next().children(':eq(' + currentColumnIndex++ + ')');\n            m.width += $headerColumn.outerWidth();\n          });\n\n          $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n        });\n      });\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children(), ii = headers.length; i < ii; i++) {\n      h = (0, _jquery2.default)(headers[i]);\n      if (h.css('width') !== columns[i].width - headerColumnWidthDiff) {\n        h.css('width', columns[i].width - headerColumnWidthDiff);\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n        w,\n        rule;\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + \"px\";\n      rule.right.style.right = (options.frozenColumn != -1 && i > options.frozenColumn ? canvasWidthR : canvasWidthL) - x - w + \"px\";\n\n      // If this column is frozen, reset the css left value since the\n      // column starts in a new viewport.\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([{\n      columnId: columnId,\n      sortAsc: ascending\n    }]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n\n    _jquery2.default.each(sortColumns, function (i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null) {\n        headerColumnEls.eq(columnIndex).addClass(\"slick-header-column-sorted\").find(\".slick-sort-indicator\").addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {\n      rows: getSelectedRows()\n    }, e);\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    var _treeColumns = new _slick2.default.TreeColumns(columnDefinitions);\n    if (_treeColumns.hasDepth()) {\n      treeColumns = _treeColumns;\n      columns = treeColumns.extractColumns();\n    } else {\n      columns = columnDefinitions;\n    }\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      setPaneVisibility();\n      setOverflow();\n\n      invalidateAllRows();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      updateCanvasWidth();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = _jquery2.default.extend(options, args);\n    validateAndEnforceOptions();\n\n    setFrozenOptions();\n    setScroller();\n    zombieRowNodeFromLastMouseWheelEvent = null;\n\n    setColumns(treeColumns.extractColumns());\n    render();\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n      if (visible) {\n        $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n      if (visible) {\n        $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n      if (visible) {\n        $footerRowScroller.fadeIn(\"fast\", resizeCanvas);\n      } else {\n        $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(y, th - $viewportScrollContainerY.height() + (viewportHasHScroll || hasFrozenColumns() ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n\n      lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\n      if (hasFrozenColumns()) {\n        $viewportTopL[0].scrollTop = newScrollTop;\n      }\n\n      if (hasFrozenRows) {\n        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n      }\n\n      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n    if (value == null) {\n      return \"\";\n    } else {\n      return (value + \"\").replace(/&/g, \"&\").replace(/</g, \"<\").replace(/>/g, \">\");\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n  }\n\n  function callFormatter(row, cell, value, m, item) {\n\n    var result;\n\n    // pass metadata to formatter\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    metadata = metadata && metadata.columns;\n\n    if (metadata) {\n      var columnData = metadata[m.id] || metadata[cell];\n      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n    } else {\n      result = getFormatter(row, m)(row, cell, value, m, item);\n    }\n\n    return result;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = \"slick-row\" + (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') + (dataLoading ? \" loading\" : \"\") + (row === activeRow ? \" active\" : \"\") + (row % 2 == 1 ? \" odd\" : \" even\");\n\n    if (!d) {\n      rowCss += \" \" + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += \" \" + metadata.cssClasses;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + (getRowTop(row) - frozenRowOffset) + \"px'>\";\n\n    stringArrayL.push(rowHtml);\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push(rowHtml);\n    }\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = columnData && columnData.colspan || 1;\n        if (colspan === \"*\") {\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        if (hasFrozenColumns() && i > options.frozenColumn) {\n          appendCellHtml(stringArrayR, row, i, colspan, d);\n        } else {\n          appendCellHtml(stringArrayL, row, i, colspan, d);\n        }\n      } else if (hasFrozenColumns() && i <= options.frozenColumn) {\n        appendCellHtml(stringArrayL, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArrayL.push(\"</div>\");\n\n    if (hasFrozenColumns()) {\n      stringArrayR.push(\"</div>\");\n    }\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    var m = columns[cell];\n    var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? \" \" + m.cssClass : \"\");\n\n    if (hasFrozenColumns() && cell <= options.frozenColumn) cellCss += ' frozen';\n\n    if (row === activeRow && cell === activeCell) cellCss += \" active\";\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += \" \" + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item) {\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(callFormatter(row, cell, value, m, item));\n    }\n\n    stringArray.push(\"</div>\");\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      var removeFrozenRow = true;\n\n      if (hasFrozenRows && (options.frozenBottom && i >= actualFrozenRow || // Frozen bottom rows\n      !options.frozenBottom && i <= actualFrozenRow // Frozen top rows\n      )) {\n        removeFrozenRow = false;\n      }\n\n      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom) && removeFrozenRow) {\n        removeRowFromCache(i);\n      }\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] || hasFrozenColumns() && rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1]) {\n\n      cacheEntry.rowNode.hide();\n\n      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n    } else {\n\n      cacheEntry.rowNode.each(function () {\n        this.parentElement.removeChild(this);\n      });\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n    if (!rows || !rows.length) {\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n  }\n\n  function invalidateRow(row) {\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n        d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d) : \"\";\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        node.innerHTML = callFormatter(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = \"\";\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    if (options.autoHeight) {\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew() + (options.frozenColumn == -1 ? $headers.outerHeight() : 0);\n    } else {\n      topPanelH = options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\n\n      headerRowH = options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\n\n      footerRowH = options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\n\n      viewportH = parseFloat(_jquery2.default.css($container[0], \"height\", true)) - parseFloat(_jquery2.default.css($container[0], \"paddingTop\", true)) - parseFloat(_jquery2.default.css($container[0], \"paddingBottom\", true)) - parseFloat(_jquery2.default.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) - topPanelH - headerRowH - footerRowH;\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n  }\n\n  function getViewportWidth() {\n    viewportW = parseFloat(_jquery2.default.css($container[0], \"width\", true));\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n\n    paneTopH = 0;\n    paneBottomH = 0;\n    viewportTopH = 0;\n    viewportBottomH = 0;\n\n    getViewportWidth();\n    getViewportHeight();\n\n    // Account for Frozen Rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\n        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n      } else {\n        paneTopH = frozenRowsHeight;\n        paneBottomH = viewportH - frozenRowsHeight;\n      }\n    } else {\n      paneTopH = viewportH;\n    }\n\n    // The top pane includes the top panel and the header row\n    paneTopH += topPanelH + headerRowH + footerRowH;\n\n    if (hasFrozenColumns() && options.autoHeight) {\n      paneTopH += scrollbarDimensions.height;\n    }\n\n    // The top viewport does not contain the top panel or header row\n    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\n    if (options.autoHeight) {\n      if (hasFrozenColumns()) {\n        $container.height(paneTopH + parseFloat(_jquery2.default.css($headerScrollerL[0], \"height\")));\n      }\n\n      $paneTopL.css('position', 'relative');\n    }\n\n    $paneTopL.css({\n      'top': $paneHeaderL.height(),\n      'height': paneTopH\n    });\n\n    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\n    $viewportTopL.height(viewportTopH);\n\n    if (hasFrozenColumns()) {\n      $paneTopR.css({\n        'top': $paneHeaderL.height(),\n        'height': paneTopH\n      });\n\n      $viewportTopR.height(viewportTopH);\n\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $paneBottomR.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $viewportBottomR.height(paneBottomH);\n      }\n    } else {\n      if (hasFrozenRows) {\n        $paneBottomL.css({\n          'width': '100%',\n          'height': paneBottomH\n        });\n\n        $paneBottomL.css('top', paneBottomTop);\n      }\n    }\n\n    if (hasFrozenRows) {\n      $viewportBottomL.height(paneBottomH);\n\n      if (options.frozenBottom) {\n        $canvasBottomL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.height(frozenRowsHeight);\n        }\n      } else {\n        $canvasTopL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()) {\n          $canvasTopR.height(frozenRowsHeight);\n        }\n      }\n    } else {\n      $viewportTopR.height(viewportTopH);\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = 0;\n    var oldH = hasFrozenRows && !options.frozenBottom ? $canvasBottomL.height() : $canvasTopL.height();\n\n    if (hasFrozenRows) {\n      var numberOfRows = getDataLength() - options.frozenRow;\n    } else {\n      var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    }\n\n    var tempViewportH = $viewportScrollContainerY.height();\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > tempViewportH;\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache) {\n      if (i >= l) {\n        removeRowFromCache(i);\n      }\n    }\n\n    th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\n\n    if (activeCellNode && activeRow > l) {\n      resetActiveCell();\n    }\n\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      if (hasFrozenRows && !options.frozenBottom) {\n        $canvasBottomL.css(\"height\", h);\n\n        if (hasFrozenColumns()) {\n          $canvasBottomR.css(\"height\", h);\n        }\n      } else {\n        $canvasTopL.css(\"height\", h);\n        $canvasTopR.css(\"height\", h);\n      }\n\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - tempViewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - tempViewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var $lastNode = cacheEntry.rowNode.children().last();\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n          $lastNode = $lastNode.prev();\n\n          // Hack to retrieve the frozen columns because\n          if ($lastNode.length == 0) {\n            $lastNode = (0, _jquery2.default)(cacheEntry.rowNode[0]).children().last();\n          }\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    // Ignore frozen rows\n    if (hasFrozenRows && (options.frozenBottom && row > actualFrozenRow || // Frozen bottom rows\n    row <= actualFrozenRow // Frozen top rows\n    )) {\n      return;\n    }\n\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      // Ignore frozen columns\n      if (i <= options.frozenColumn) {\n        continue;\n      }\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove;\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      cacheEntry.cellNodesByColumnIdx[cellToRemove][0].parentElement.removeChild(cacheEntry.cellNodesByColumnIdx[cellToRemove][0]);\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = columnData && columnData.colspan || 1;\n          if (colspan === \"*\") {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n\n    var processedRow;\n    var $node;\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        $node = (0, _jquery2.default)(x).children().last();\n\n        if (hasFrozenColumns() && columnIdx > options.frozenColumn) {\n          (0, _jquery2.default)(cacheEntry.rowNode[1]).append($node);\n        } else {\n          (0, _jquery2.default)(cacheEntry.rowNode[0]).append($node);\n        }\n\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var stringArrayL = [],\n        stringArrayR = [],\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (rowsCache[i] || hasFrozenRows && options.frozenBottom && i == getDataLength()) {\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        \"rowNode\": null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        \"cellColSpans\": [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        \"cellNodesByColumnIdx\": [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        \"cellRenderQueue\": []\n      };\n\n      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement(\"div\"),\n        xRight = document.createElement(\"div\");\n\n    x.innerHTML = stringArrayL.join(\"\");\n    xRight.innerHTML = stringArrayR.join(\"\");\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      if (hasFrozenRows && rows[i] >= actualFrozenRow) {\n        if (hasFrozenColumns()) {\n          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasBottomR));\n        } else {\n          rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasBottomL));\n        }\n      } else if (hasFrozenColumns()) {\n        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL)).add((0, _jquery2.default)(xRight.firstChild).appendTo($canvasTopR));\n      } else {\n        rowsCache[rows[i]].rowNode = (0, _jquery2.default)().add((0, _jquery2.default)(x.firstChild).appendTo($canvasTopL));\n      }\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function invalidatePostProcessingResults(row) {\n    delete postProcessedRows[row];\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.css('top', getRowTop(row) + \"px\");\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft) {\n\n      if (hasFrozenRows) {\n\n        var renderedFrozenRows = _jquery2.default.extend(true, {}, rendered);\n\n        if (options.frozenBottom) {\n\n          renderedFrozenRows.top = actualFrozenRow;\n          renderedFrozenRows.bottom = getDataLength();\n        } else {\n\n          renderedFrozenRows.top = 0;\n          renderedFrozenRows.bottom = options.frozenRow;\n        }\n\n        cleanUpAndRenderCells(renderedFrozenRows);\n      }\n\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    // Render frozen rows\n    if (hasFrozenRows) {\n      if (options.frozenBottom) {\n        renderRows({\n          top: actualFrozenRow,\n          bottom: getDataLength() - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      } else {\n        renderRows({\n          top: 0,\n          bottom: options.frozenRow - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      }\n    }\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll() {\n    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll() {\n    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft) {\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleMouseWheel(e, delta, deltaX, deltaY) {\n    var $rowNode = (0, _jquery2.default)(e.target).closest(\".slick-row\");\n    var rowNode = $rowNode[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n\n      var $gridCanvas = $rowNode.parents('.grid-canvas');\n      var left = $gridCanvas.hasClass('grid-canvas-left');\n\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode) {\n        var zombieRow = zombieRowNodeFromLastMouseWheelEvent[left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1];\n        zombieRow.parentElement.removeChild(zombieRow);\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n\n    scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - deltaY * options.rowHeight);\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft + deltaX * 10;\n    var handled = _handleScroll(true);\n    if (handled) e.preventDefault();\n  }\n\n  function handleScroll() {\n    scrollTop = $viewportScrollContainerY[0].scrollTop;\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n    return _handleScroll(false);\n  }\n\n  function _handleScroll(isMouseWheel) {\n    var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\n    var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\n    var hasFrozenCols = hasFrozenColumns();\n\n    // Ceiling the max scroll values\n    if (scrollTop > maxScrollDistanceY) {\n      scrollTop = maxScrollDistanceY;\n    }\n    if (scrollLeft > maxScrollDistanceX) {\n      scrollLeft = maxScrollDistanceX;\n    }\n\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n      $headerScrollContainer[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows) {\n          $viewportTopR[0].scrollLeft = scrollLeft;\n        }\n      } else {\n        if (hasFrozenRows) {\n          $viewportTopL[0].scrollLeft = scrollLeft;\n        }\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      if (isMouseWheel) {\n        $viewportScrollContainerY[0].scrollTop = scrollTop;\n      }\n\n      if (hasFrozenCols) {\n        if (hasFrozenRows && !options.frozenBottom) {\n          $viewportBottomL[0].scrollTop = scrollTop;\n        } else {\n          $viewportTopL[0].scrollTop = scrollTop;\n        }\n      }\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      if (h_render) {\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n        if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (hScrollDist || vScrollDist) return true;\n    return false;\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]) {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m);\n          }\n          postProcessedRows[row][columnIdx] = true;\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": null\n    });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n    if (rowsCache[row]) {\n      var toggleCellClass = function toggleCellClass(times) {\n        if (!times) {\n          return;\n        }\n        setTimeout(function () {\n          $cell.queue(function () {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      };\n\n      var $cell = (0, _jquery2.default)(getCellNode(row, cell));\n\n      toggleCellClass(4);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleDragInit(e, dd) {\n    var cell = getCellFromEvent(e);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n    if (e.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n    return false;\n  }\n\n  function handleDragStart(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent) {\n    trigger(self.onDragEnd, interactEvent, _jquery2.default.Event('mousedown'));\n  }\n\n  function handleKeyDown(e) {\n    trigger(self.onKeyDown, {\n      row: activeRow,\n      cell: activeCell\n    }, e);\n    var handled = e.isImmediatePropagationStopped();\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        if (e.which == 27) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == 34) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == 33) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == 37) {\n          handled = navigateLeft();\n        } else if (e.which == 39) {\n          handled = navigateRight();\n        } else if (e.which == 38) {\n          handled = navigateUp();\n        } else if (e.which == 40) {\n          handled = navigateDown();\n        } else if (e.which == 9) {\n          handled = navigateNext();\n        } else if (e.which == 13) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n      // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n      // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {}\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || (0, _jquery2.default)(e.target).hasClass(\"slick-cell\")) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest(\".slick-cell\", $canvas);\n    if ($cell.length === 0) {\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onDblClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(self.onHeaderMouseEnter, {\n      \"column\": (0, _jquery2.default)(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(self.onHeaderMouseLeave, {\n      \"column\": (0, _jquery2.default)(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = (0, _jquery2.default)(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    trigger(self.onHeaderContextMenu, {\n      column: column\n    }, e);\n  }\n\n  function handleHeaderClick(e) {\n    var $header = (0, _jquery2.default)(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    if (column) {\n      trigger(self.onHeaderClick, {\n        column: column\n      }, e);\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls) {\n      throw \"getCellFromNode: cannot get cell - \" + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache) {\n      for (var i in rowsCache[row].rowNode) {\n        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n      }\n    }return null;\n  }\n\n  function getFrozenRowOffset(row) {\n    var offset = hasFrozenRows ? options.frozenBottom ? row >= actualFrozenRow ? h < viewportTopH ? actualFrozenRow * options.rowHeight : h : 0 : row >= actualFrozenRow ? frozenRowsHeight : 0 : 0;\n\n    return offset;\n  }\n\n  function getCellFromEvent(e) {\n    var row, cell;\n    var $cell = (0, _jquery2.default)(e.target).closest(\".slick-cell\", $canvas);\n    if (!$cell.length) {\n      return null;\n    }\n\n    row = getRowFromNode($cell[0].parentNode);\n\n    if (hasFrozenRows) {\n\n      var c = $cell.parents('.grid-canvas').offset();\n\n      var rowOffset = 0;\n      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\n      if (isBottom) {\n        rowOffset = options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + (0, _jquery2.default)(document).scrollTop()).row;\n    }\n\n    cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        \"row\": row,\n        \"cell\": cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var y1 = getRowTop(row) - frozenRowOffset;\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n\n      if (options.frozenColumn == i) {\n        x1 = 0;\n      }\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    // Don't scroll to frozen cells\n    if (cell <= options.frozenColumn) {\n      return;\n    }\n\n    if (row < actualFrozenRow) {\n      scrollRowIntoView(row, doPaging);\n    }\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n        right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n        scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\n    if (left < scrollLeft) {\n      $viewportScrollContainerX.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      (0, _jquery2.default)(activeCellNode).removeClass(\"active\");\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).removeClass(\"active\");\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      var $activeCellNode = (0, _jquery2.default)(activeCellNode);\n      var $activeCellOffset = $activeCellNode.offset();\n\n      var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\n      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\n      if (hasFrozenRows && isBottom) {\n        rowOffset -= options.frozenBottom ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\n\n      activeRow = cell.row;\n      activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode[0]);\n\n      $activeCellNode.addClass(\"active\");\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).addClass('active');\n      }\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function () {\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged) {\n      setTimeout(scrollActiveCellIntoView, 50);\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      (0, _jquery2.default)(activeCellNode).removeClass(\"editable invalid\");\n      if (d) {\n        var column = columns[activeCell];\n        activeCellNode[0].innerHTML = callFormatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor) {\n    if (!activeCellNode) {\n      return;\n    }\n    if (!options.editable) {\n      throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef\n    }) === false) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    (0, _jquery2.default)(activeCellNode).addClass(\"editable\");\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor) {\n      activeCellNode[0].innerHTML = \"\";\n    }\n\n    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode[0]),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: (0, _jquery2.default)(elem).outerWidth(),\n      height: (0, _jquery2.default)(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body) {\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && (0, _jquery2.default)(elem).css(\"overflowY\") != \"visible\") {\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && (0, _jquery2.default)(elem).css(\"overflowX\") != \"visible\") {\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode[0]);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollActiveCellIntoView() {\n    if (activeRow != null && activeCell != null) {\n      scrollCellIntoView(activeRow, activeCell);\n    }\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n\n    if (!hasFrozenRows || !options.frozenBottom && row > actualFrozenRow - 1 || options.frozenBottom && row < actualFrozenRow - 1) {\n\n      var viewportScrollH = $viewportScrollContainerY.height();\n\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom = (row + 1) * options.rowHeight - viewportScrollH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportScrollH + offset) {\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset) {\n          scrollTo(doPaging ? rowAtBottom : rowAtTop);\n          render();\n        }\n    }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData = columns[cell] && (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n    var colspan = columnData && columnData.colspan;\n    if (colspan === \"*\") {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        \"row\": row,\n        \"cell\": cell,\n        \"posX\": cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      \"row\": row,\n      \"cell\": firstFocusableCell,\n      \"posX\": firstFocusableCell\n    };\n    var pos;\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos) {\n        return null;\n      }\n      if (pos.cell >= cell) {\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null) {\n        return {\n          \"row\": row,\n          \"cell\": firstFocusableCell,\n          \"posX\": firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)) {\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n      if (pos) {\n        break;\n      }\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null) {\n        pos = {\n          \"row\": row,\n          \"cell\": lastSelectableCell,\n          \"posX\": lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight() {\n    return navigate(\"right\");\n  }\n\n  function navigateLeft() {\n    return navigate(\"left\");\n  }\n\n  function navigateDown() {\n    return navigate(\"down\");\n  }\n\n  function navigateUp() {\n    return navigate(\"up\");\n  }\n\n  function navigateNext() {\n    return navigate(\"next\");\n  }\n\n  function navigatePrev() {\n    return navigate(\"prev\");\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != \"prev\" && dir != \"next\") {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      \"up\": -1,\n      \"down\": 1,\n      \"left\": -1,\n      \"right\": 1,\n      \"prev\": -1,\n      \"next\": 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      \"up\": gotoUp,\n      \"down\": gotoDown,\n      \"left\": gotoLeft,\n      \"right\": gotoRight,\n      \"prev\": gotoPrev,\n      \"next\": gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos) {\n      if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()) {\n        return;\n      }\n\n      var isAddNewRow = pos.row == getDataLength();\n\n      if (!options.frozenBottom && pos.row >= actualFrozenRow || options.frozenBottom && pos.row < actualFrozenRow) {\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      }\n\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell) {\n    if (!initialized) {\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === \"boolean\") {\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columns[cell] && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === \"boolean\") {\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\") {\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell] && columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === \"boolean\") {\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === \"boolean\") {\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit) {\n    if (!initialized) {\n      return;\n    }\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor) {\n      setFocus();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function execute() {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              },\n              undo: function undo() {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          (0, _jquery2.default)(activeCellNode).removeClass(\"invalid\");\n          (0, _jquery2.default)(activeCellNode).width(); // force layout\n          (0, _jquery2.default)(activeCellNode).addClass(\"invalid\");\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw \"Selection model is not set\";\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw \"Selection model is not set\";\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function () {\n    var s = \"\";\n\n    s += \"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered;\n    s += \"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed;\n    s += \"\\n\" + \"renderedRows:  \" + renderedRows;\n    s += \"\\n\" + \"numVisibleRows:  \" + numVisibleRows;\n    s += \"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight;\n    s += \"\\n\" + \"n(umber of pages):  \" + n;\n    s += \"\\n\" + \"(current) page:  \" + page;\n    s += \"\\n\" + \"page height (ph):  \" + ph;\n    s += \"\\n\" + \"vScrollDir:  \" + vScrollDir;\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function (expr) {\n    return eval(expr);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  _jquery2.default.extend(this, {\n    \"slickGridVersion\": \"2.1\",\n\n    // Events\n    \"onScroll\": new _slick2.default.Event(),\n    \"onSort\": new _slick2.default.Event(),\n    \"onHeaderMouseEnter\": new _slick2.default.Event(),\n    \"onHeaderMouseLeave\": new _slick2.default.Event(),\n    \"onHeaderContextMenu\": new _slick2.default.Event(),\n    \"onHeaderClick\": new _slick2.default.Event(),\n    \"onHeaderCellRendered\": new _slick2.default.Event(),\n    \"onBeforeHeaderCellDestroy\": new _slick2.default.Event(),\n    \"onHeaderRowCellRendered\": new _slick2.default.Event(),\n    \"onFooterRowCellRendered\": new _slick2.default.Event(),\n    \"onBeforeHeaderRowCellDestroy\": new _slick2.default.Event(),\n    \"onBeforeFooterRowCellDestroy\": new _slick2.default.Event(),\n    \"onMouseEnter\": new _slick2.default.Event(),\n    \"onMouseLeave\": new _slick2.default.Event(),\n    \"onClick\": new _slick2.default.Event(),\n    \"onDblClick\": new _slick2.default.Event(),\n    \"onContextMenu\": new _slick2.default.Event(),\n    \"onKeyDown\": new _slick2.default.Event(),\n    \"onAddNewRow\": new _slick2.default.Event(),\n    \"onValidationError\": new _slick2.default.Event(),\n    \"onViewportChanged\": new _slick2.default.Event(),\n    \"onColumnsReordered\": new _slick2.default.Event(),\n    \"onColumnsResized\": new _slick2.default.Event(),\n    \"onCellChange\": new _slick2.default.Event(),\n    \"onBeforeEditCell\": new _slick2.default.Event(),\n    \"onBeforeCellEditorDestroy\": new _slick2.default.Event(),\n    \"onBeforeDestroy\": new _slick2.default.Event(),\n    \"onActiveCellChanged\": new _slick2.default.Event(),\n    \"onActiveCellPositionChanged\": new _slick2.default.Event(),\n    \"onDragInit\": new _slick2.default.Event(),\n    \"onDragStart\": new _slick2.default.Event(),\n    \"onDrag\": new _slick2.default.Event(),\n    \"onDragEnd\": new _slick2.default.Event(),\n    \"onSelectedRowsChanged\": new _slick2.default.Event(),\n    \"onCellCssStylesChanged\": new _slick2.default.Event(),\n\n    // Methods\n    \"registerPlugin\": registerPlugin,\n    \"unregisterPlugin\": unregisterPlugin,\n    \"getColumns\": getColumns,\n    \"setColumns\": setColumns,\n    \"getColumnIndex\": getColumnIndex,\n    \"updateColumnHeader\": updateColumnHeader,\n    \"setSortColumn\": setSortColumn,\n    \"setSortColumns\": setSortColumns,\n    \"getSortColumns\": getSortColumns,\n    \"autosizeColumns\": autosizeColumns,\n    \"getOptions\": getOptions,\n    \"setOptions\": setOptions,\n    \"getData\": getData,\n    \"getDataLength\": getDataLength,\n    \"getDataItem\": getDataItem,\n    \"setData\": setData,\n    \"getSelectionModel\": getSelectionModel,\n    \"setSelectionModel\": setSelectionModel,\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getContainerNode\": getContainerNode,\n\n    \"render\": render,\n    \"invalidate\": invalidate,\n    \"invalidateRow\": invalidateRow,\n    \"invalidateRows\": invalidateRows,\n    \"invalidateAllRows\": invalidateAllRows,\n    \"updateCell\": updateCell,\n    \"updateRow\": updateRow,\n    \"getViewport\": getVisibleRange,\n    \"getRenderedRange\": getRenderedRange,\n    \"resizeCanvas\": resizeCanvas,\n    \"updateRowCount\": updateRowCount,\n    \"scrollRowIntoView\": scrollRowIntoView,\n    \"scrollRowToTop\": scrollRowToTop,\n    \"scrollCellIntoView\": scrollCellIntoView,\n    \"getCanvasNode\": getCanvasNode,\n    \"getCanvases\": getCanvases,\n    \"getActiveCanvasNode\": getActiveCanvasNode,\n    \"setActiveCanvasNode\": setActiveCanvasNode,\n    \"getViewportNode\": getViewportNode,\n    \"getActiveViewportNode\": getActiveViewportNode,\n    \"setActiveViewportNode\": setActiveViewportNode,\n    \"focus\": setFocus,\n\n    \"getCellFromPoint\": getCellFromPoint,\n    \"getCellFromEvent\": getCellFromEvent,\n    \"getActiveCell\": getActiveCell,\n    \"setActiveCell\": setActiveCell,\n    \"getActiveCellNode\": getActiveCellNode,\n    \"getActiveCellPosition\": getActiveCellPosition,\n    \"resetActiveCell\": resetActiveCell,\n    \"editActiveCell\": makeActiveCellEditable,\n    \"getCellEditor\": getCellEditor,\n    \"getCellNode\": getCellNode,\n    \"getCellNodeBox\": getCellNodeBox,\n    \"canCellBeSelected\": canCellBeSelected,\n    \"canCellBeActive\": canCellBeActive,\n    \"navigatePrev\": navigatePrev,\n    \"navigateNext\": navigateNext,\n    \"navigateUp\": navigateUp,\n    \"navigateDown\": navigateDown,\n    \"navigateLeft\": navigateLeft,\n    \"navigateRight\": navigateRight,\n    \"navigatePageUp\": navigatePageUp,\n    \"navigatePageDown\": navigatePageDown,\n    \"gotoCell\": gotoCell,\n    \"getTopPanel\": getTopPanel,\n    \"setTopPanelVisibility\": setTopPanelVisibility,\n    \"setHeaderRowVisibility\": setHeaderRowVisibility,\n    \"getHeaderRow\": getHeaderRow,\n    \"getHeaderRowColumn\": getHeaderRowColumn,\n    \"setFooterRowVisibility\": setFooterRowVisibility,\n    \"getFooterRow\": getFooterRow,\n    \"getFooterRowColumn\": getFooterRowColumn,\n    \"getGridPosition\": getGridPosition,\n    \"flashCell\": flashCell,\n    \"addCellCssStyles\": addCellCssStyles,\n    \"setCellCssStyles\": setCellCssStyles,\n    \"removeCellCssStyles\": removeCellCssStyles,\n    \"getCellCssStyles\": getCellCssStyles,\n    \"getFrozenRowOffset\": getFrozenRowOffset,\n\n    \"init\": finishInitialization,\n    \"destroy\": destroy,\n\n    // IEditor implementation\n    \"getEditorLock\": getEditorLock,\n    \"getEditController\": getEditController\n  });\n\n  init();\n}\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar Aggregators = {\n  Avg: AvgAggregator,\n  Min: MinAggregator,\n  Max: MaxAggregator,\n  Sum: SumAggregator\n};\n\nvar Data = {\n  DataView: DataView,\n  Aggregators: Aggregators\n};\n\nexports.default = Data;\n\n/** *\n * A sample Model implementation.\n * Provides a filtered view of the underlying data.\n *\n * Relies on the data item having an \"id\" property uniquely identifying it.\n */\n\nfunction DataView(options) {\n  var self = this;\n\n  var defaults = {\n    groupItemMetadataProvider: null,\n    inlineFilters: false\n  };\n\n  // private\n  var idProperty = 'id'; // property holding a unique row id\n  var items = []; // data by index\n  var rows = []; // data by row\n  var idxById = {}; // indexes by id\n  var rowsById = null; // rows by id; lazy-calculated\n  var filter = null; // filter function\n  var updated = null; // updated item ids\n  var suspend = false; // suspends the recalculation\n  var sortAsc = true;\n  var fastSortField;\n  var sortComparer;\n  var refreshHints = {};\n  var prevRefreshHints = {};\n  var filterArgs;\n  var filteredItems = [];\n  var compiledFilter;\n  var compiledFilterWithCaching;\n  var filterCache = [];\n\n  // grouping\n  var groupingInfoDefaults = {\n    getter: null,\n    formatter: null,\n    comparer: function comparer(a, b) {\n      return a.value === b.value ? 0 : a.value > b.value ? 1 : -1;\n    },\n    predefinedValues: [],\n    aggregators: [],\n    aggregateEmpty: false,\n    aggregateCollapsed: false,\n    aggregateChildGroups: false,\n    collapsed: false,\n    displayTotalsRow: true,\n    lazyTotalsCalculation: false\n  };\n  var groupingInfos = [];\n  var groups = [];\n  var toggledGroupsByLevel = [];\n  var groupingDelimiter = ':|:';\n\n  var pagesize = 0;\n  var pagenum = 0;\n  var totalRows = 0;\n\n  // events\n  var onRowCountChanged = new _slick2.default.Event();\n  var onRowsChanged = new _slick2.default.Event();\n  var onPagingInfoChanged = new _slick2.default.Event();\n\n  options = _jquery2.default.extend(true, {}, defaults, options);\n\n  function beginUpdate() {\n    suspend = true;\n  }\n\n  function endUpdate() {\n    suspend = false;\n    refresh();\n  }\n\n  function setRefreshHints(hints) {\n    refreshHints = hints;\n  }\n\n  function setFilterArgs(args) {\n    filterArgs = args;\n  }\n\n  function updateIdxById(startingIndex) {\n    startingIndex = startingIndex || 0;\n    var id;\n    for (var i = startingIndex, l = items.length; i < l; i++) {\n      id = items[i][idProperty];\n      if (id === undefined) {\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n      idxById[id] = i;\n    }\n  }\n\n  function ensureIdUniqueness() {\n    var id;\n    for (var i = 0, l = items.length; i < l; i++) {\n      id = items[i][idProperty];\n      if (id === undefined || idxById[id] !== i) {\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n    }\n  }\n\n  function getItems() {\n    return items;\n  }\n\n  function setItems(data, objectIdProperty) {\n    if (objectIdProperty !== undefined) {\n      idProperty = objectIdProperty;\n    }\n    items = filteredItems = data;\n    idxById = {};\n    updateIdxById();\n    ensureIdUniqueness();\n    refresh();\n  }\n\n  function setPagingOptions(args) {\n    if (args.pageSize != undefined) {\n      pagesize = args.pageSize;\n      pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\n    }\n\n    if (args.pageNum != undefined) {\n      pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\n    }\n\n    onPagingInfoChanged.notify(getPagingInfo(), null, self);\n\n    refresh();\n  }\n\n  function getPagingInfo() {\n    var totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\n    return { pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages, dataView: self };\n  }\n\n  function sort(comparer, ascending) {\n    sortAsc = ascending;\n    sortComparer = comparer;\n    fastSortField = null;\n    if (ascending === false) {\n      items.reverse();\n    }\n    items.sort(comparer);\n    if (ascending === false) {\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  /** *\n   * Provides a workaround for the extremely slow sorting in IE.\n   * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\n   * to return the value of that field and then doing a native Array.sort().\n   */\n  function fastSort(field, ascending) {\n    sortAsc = ascending;\n    fastSortField = field;\n    sortComparer = null;\n    var oldToString = Object.prototype.toString;\n    Object.prototype.toString = typeof field == 'function' ? field : function () {\n      return this[field];\n    };\n    // an extra reversal for descending sort keeps the sort stable\n    // (assuming a stable native sort implementation, which isn't true in some cases)\n    if (ascending === false) {\n      items.reverse();\n    }\n    items.sort();\n    Object.prototype.toString = oldToString;\n    if (ascending === false) {\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  function reSort() {\n    if (sortComparer) {\n      sort(sortComparer, sortAsc);\n    } else if (fastSortField) {\n      fastSort(fastSortField, sortAsc);\n    }\n  }\n\n  function setFilter(filterFn) {\n    filter = filterFn;\n    if (options.inlineFilters) {\n      compiledFilter = compileFilter();\n      compiledFilterWithCaching = compileFilterWithCaching();\n    }\n    refresh();\n  }\n\n  function getGrouping() {\n    return groupingInfos;\n  }\n\n  function setGrouping(groupingInfo) {\n    if (!options.groupItemMetadataProvider) {\n      options.groupItemMetadataProvider = new Data.GroupItemMetadataProvider();\n    }\n\n    groups = [];\n    toggledGroupsByLevel = [];\n    groupingInfo = groupingInfo || [];\n    groupingInfos = groupingInfo instanceof Array ? groupingInfo : [groupingInfo];\n\n    for (var i = 0; i < groupingInfos.length; i++) {\n      var gi = groupingInfos[i] = _jquery2.default.extend(true, {}, groupingInfoDefaults, groupingInfos[i]);\n      gi.getterIsAFn = typeof gi.getter === 'function';\n\n      // pre-compile accumulator loops\n      gi.compiledAccumulators = [];\n      var idx = gi.aggregators.length;\n      while (idx--) {\n        gi.compiledAccumulators[idx] = compileAccumulatorLoop(gi.aggregators[idx]);\n      }\n\n      toggledGroupsByLevel[i] = {};\n    }\n\n    refresh();\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function groupBy(valueGetter, valueFormatter, sortComparer) {\n    if (valueGetter == null) {\n      setGrouping([]);\n      return;\n    }\n\n    setGrouping({\n      getter: valueGetter,\n      formatter: valueFormatter,\n      comparer: sortComparer\n    });\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function setAggregators(groupAggregators, includeCollapsed) {\n    if (!groupingInfos.length) {\n      throw new Error('At least one grouping must be specified before calling setAggregators().');\n    }\n\n    groupingInfos[0].aggregators = groupAggregators;\n    groupingInfos[0].aggregateCollapsed = includeCollapsed;\n\n    setGrouping(groupingInfos);\n  }\n\n  function getItemByIdx(i) {\n    return items[i];\n  }\n\n  function getIdxById(id) {\n    return idxById[id];\n  }\n\n  function ensureRowsByIdCache() {\n    if (!rowsById) {\n      rowsById = {};\n      for (var i = 0, l = rows.length; i < l; i++) {\n        rowsById[rows[i][idProperty]] = i;\n      }\n    }\n  }\n\n  function getRowById(id) {\n    ensureRowsByIdCache();\n    return rowsById[id];\n  }\n\n  function getItemById(id) {\n    return items[idxById[id]];\n  }\n\n  function mapIdsToRows(idArray) {\n    var rows = [];\n    ensureRowsByIdCache();\n    for (var i = 0, l = idArray.length; i < l; i++) {\n      var row = rowsById[idArray[i]];\n      if (row != null) {\n        rows[rows.length] = row;\n      }\n    }\n    return rows;\n  }\n\n  function mapRowsToIds(rowArray) {\n    var ids = [];\n    for (var i = 0, l = rowArray.length; i < l; i++) {\n      if (rowArray[i] < rows.length) {\n        ids[ids.length] = rows[rowArray[i]][idProperty];\n      }\n    }\n    return ids;\n  }\n\n  function updateItem(id, item) {\n    if (idxById[id] === undefined || id !== item[idProperty]) {\n      throw 'Invalid or non-matching id';\n    }\n    items[idxById[id]] = item;\n    if (!updated) {\n      updated = {};\n    }\n    updated[id] = true;\n    refresh();\n  }\n\n  function insertItem(insertBefore, item) {\n    items.splice(insertBefore, 0, item);\n    updateIdxById(insertBefore);\n    refresh();\n  }\n\n  function addItem(item) {\n    items.push(item);\n    updateIdxById(items.length - 1);\n    refresh();\n  }\n\n  function deleteItem(id) {\n    var idx = idxById[id];\n    if (idx === undefined) {\n      throw 'Invalid id';\n    }\n    delete idxById[id];\n    items.splice(idx, 1);\n    updateIdxById(idx);\n    refresh();\n  }\n\n  function getLength() {\n    return rows.length;\n  }\n\n  function getItem(i) {\n    var item = rows[i];\n\n    // if this is a group row, make sure totals are calculated and update the title\n    if (item && item.__group && item.totals && !item.totals.initialized) {\n      var gi = groupingInfos[item.level];\n      if (!gi.displayTotalsRow) {\n        calculateTotals(item.totals);\n        item.title = gi.formatter ? gi.formatter(item) : item.value;\n      }\n    }\n    // if this is a totals row, make sure it's calculated\n    else if (item && item.__groupTotals && !item.initialized) {\n        calculateTotals(item);\n      }\n\n    return item;\n  }\n\n  function getItemMetadata(i) {\n    var item = rows[i];\n    if (item === undefined) {\n      return null;\n    }\n\n    // overrides for grouping rows\n    if (item.__group) {\n      return options.groupItemMetadataProvider.getGroupRowMetadata(item);\n    }\n\n    // overrides for totals rows\n    if (item.__groupTotals) {\n      return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\n    }\n\n    return null;\n  }\n\n  function expandCollapseAllGroups(level, collapse) {\n    if (level == null) {\n      for (var i = 0; i < groupingInfos.length; i++) {\n        toggledGroupsByLevel[i] = {};\n        groupingInfos[i].collapsed = collapse;\n      }\n    } else {\n      toggledGroupsByLevel[level] = {};\n      groupingInfos[level].collapsed = collapse;\n    }\n    refresh();\n  }\n\n  /**\n   * @param level {Number} Optional level to collapse.  If not specified, applies to all levels.\n   */\n  function collapseAllGroups(level) {\n    expandCollapseAllGroups(level, true);\n  }\n\n  /**\n   * @param level {Number} Optional level to expand.  If not specified, applies to all levels.\n   */\n  function expandAllGroups(level) {\n    expandCollapseAllGroups(level, false);\n  }\n\n  function expandCollapseGroup(level, groupingKey, collapse) {\n    toggledGroupsByLevel[level][groupingKey] = groupingInfos[level].collapsed ^ collapse;\n    refresh();\n  }\n\n  /**\n   * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     variable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function collapseGroup(varArgs) {\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1) {\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, true);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), true);\n    }\n  }\n\n  /**\n   * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     variable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling expandGroup('high', '10%') will expand the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function expandGroup(varArgs) {\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1) {\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, false);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), false);\n    }\n  }\n\n  function getGroups() {\n    return groups;\n  }\n\n  function extractGroups(rows, parentGroup) {\n    var group;\n    var val;\n    var groups = [];\n    var groupsByVal = {};\n    var r;\n    var level = parentGroup ? parentGroup.level + 1 : 0;\n    var gi = groupingInfos[level];\n\n    for (var i = 0, l = gi.predefinedValues.length; i < l; i++) {\n      val = gi.predefinedValues[i];\n      group = groupsByVal[val];\n      if (!group) {\n        group = new _slick2.default.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n    }\n\n    for (var i = 0, l = rows.length; i < l; i++) {\n      r = rows[i];\n      val = gi.getterIsAFn ? gi.getter(r) : r[gi.getter];\n      group = groupsByVal[val];\n      if (!group) {\n        group = new _slick2.default.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n\n      group.rows[group.count++] = r;\n    }\n\n    if (level < groupingInfos.length - 1) {\n      for (var i = 0; i < groups.length; i++) {\n        group = groups[i];\n        group.groups = extractGroups(group.rows, group);\n      }\n    }\n\n    groups.sort(groupingInfos[level].comparer);\n\n    return groups;\n  }\n\n  function calculateTotals(totals) {\n    var group = totals.group;\n    var gi = groupingInfos[group.level];\n    var isLeafLevel = group.level == groupingInfos.length;\n    var agg,\n        idx = gi.aggregators.length;\n\n    if (!isLeafLevel && gi.aggregateChildGroups) {\n      // make sure all the subgroups are calculated\n      var i = group.groups.length;\n      while (i--) {\n        if (!group.groups[i].totals.initialized) {\n          calculateTotals(group.groups[i].totals);\n        }\n      }\n    }\n\n    while (idx--) {\n      agg = gi.aggregators[idx];\n      agg.init();\n      if (!isLeafLevel && gi.aggregateChildGroups) {\n        gi.compiledAccumulators[idx].call(agg, group.groups);\n      } else {\n        gi.compiledAccumulators[idx].call(agg, group.rows);\n      }\n      agg.storeResult(totals);\n    }\n    totals.initialized = true;\n  }\n\n  function addGroupTotals(group) {\n    var gi = groupingInfos[group.level];\n    var totals = new _slick2.default.GroupTotals();\n    totals.group = group;\n    group.totals = totals;\n    if (!gi.lazyTotalsCalculation) {\n      calculateTotals(totals);\n    }\n  }\n\n  function addTotals(groups, level) {\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupCollapsed = gi.collapsed;\n    var toggledGroups = toggledGroupsByLevel[level];\n    var idx = groups.length,\n        g;\n    while (idx--) {\n      g = groups[idx];\n\n      if (g.collapsed && !gi.aggregateCollapsed) {\n        continue;\n      }\n\n      // Do a depth-first aggregation so that parent group aggregators can access subgroup totals.\n      if (g.groups) {\n        addTotals(g.groups, level + 1);\n      }\n\n      if (gi.aggregators.length && (gi.aggregateEmpty || g.rows.length || g.groups && g.groups.length)) {\n        addGroupTotals(g);\n      }\n\n      g.collapsed = groupCollapsed ^ toggledGroups[g.groupingKey];\n      g.title = gi.formatter ? gi.formatter(g) : g.value;\n    }\n  }\n\n  function flattenGroupedRows(groups, level) {\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupedRows = [],\n        rows,\n        gl = 0,\n        g;\n    for (var i = 0, l = groups.length; i < l; i++) {\n      g = groups[i];\n      groupedRows[gl++] = g;\n\n      if (!g.collapsed) {\n        rows = g.groups ? flattenGroupedRows(g.groups, level + 1) : g.rows;\n        for (var j = 0, jj = rows.length; j < jj; j++) {\n          groupedRows[gl++] = rows[j];\n        }\n      }\n\n      if (g.totals && gi.displayTotalsRow && (!g.collapsed || gi.aggregateCollapsed)) {\n        groupedRows[gl++] = g.totals;\n      }\n    }\n    return groupedRows;\n  }\n\n  function getFunctionInfo(fn) {\n    var fnRegex = /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\n    var matches = fn.toString().match(fnRegex);\n    return {\n      params: matches[1].split(','),\n      body: matches[2]\n    };\n  }\n\n  function compileAccumulatorLoop(aggregator) {\n    var accumulatorInfo = getFunctionInfo(aggregator.accumulate);\n    var fn = new Function('_items', 'for (var ' + accumulatorInfo.params[0] + ', _i=0, _il=_items.length; _i<_il; _i++) {' + accumulatorInfo.params[0] + ' = _items[_i]; ' + accumulatorInfo.body + '}');\n    fn.displayName = 'compiledAccumulatorLoop';\n    return fn;\n  }\n\n  function compileFilter() {\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body.replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1).replace(/return!1([;}]|\\}|$)/gi, filterPath1).replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2).replace(/return!0([;}]|\\}|$)/gi, filterPath2).replace(/return ([^;}]+?)\\s*([;}]|$)/gi, '{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n    // \"function(_items, _args) { \",\n    'var _retval = [], _idx = 0; ', 'var $item$, $args$ = _args; ', '_coreloop: ', 'for (var _i = 0, _il = _items.length; _i < _il; _i++) { ', '$item$ = _items[_i]; ', '$filter$; ', '} ', 'return _retval; '\n    // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args', tpl);\n    fn.displayName = 'compiledFilter';\n\n    return fn;\n  }\n\n  function compileFilterWithCaching() {\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body.replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1).replace(/return!1([;}]|\\}|$)/gi, filterPath1).replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2).replace(/return!0([;}]|\\}|$)/gi, filterPath2).replace(/return ([^;}]+?)\\s*([;}]|$)/gi, '{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n    // \"function(_items, _args, _cache) { \",\n    'var _retval = [], _idx = 0; ', 'var $item$, $args$ = _args; ', '_coreloop: ', 'for (var _i = 0, _il = _items.length; _i < _il; _i++) { ', '$item$ = _items[_i]; ', 'if (_cache[_i]) { ', '_retval[_idx++] = $item$; ', 'continue _coreloop; ', '} ', '$filter$; ', '} ', 'return _retval; '\n    // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args,_cache', tpl);\n    fn.displayName = 'compiledFilterWithCaching';\n    return fn;\n  }\n\n  function uncompiledFilter(items, args) {\n    var retval = [],\n        idx = 0;\n\n    for (var i = 0, ii = items.length; i < ii; i++) {\n      if (filter(items[i], args)) {\n        retval[idx++] = items[i];\n      }\n    }\n\n    return retval;\n  }\n\n  function uncompiledFilterWithCaching(items, args, cache) {\n    var retval = [],\n        idx = 0,\n        item;\n\n    for (var i = 0, ii = items.length; i < ii; i++) {\n      item = items[i];\n      if (cache[i]) {\n        retval[idx++] = item;\n      } else if (filter(item, args)) {\n        retval[idx++] = item;\n        cache[i] = true;\n      }\n    }\n\n    return retval;\n  }\n\n  function getFilteredAndPagedItems(items) {\n    if (filter) {\n      var batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\n      var batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\n\n      if (refreshHints.isFilterNarrowing) {\n        filteredItems = batchFilter(filteredItems, filterArgs);\n      } else if (refreshHints.isFilterExpanding) {\n        filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\n      } else if (!refreshHints.isFilterUnchanged) {\n        filteredItems = batchFilter(items, filterArgs);\n      }\n    } else {\n      // special case:  if not filtering and not paging, the resulting\n      // rows collection needs to be a copy so that changes due to sort\n      // can be caught\n      filteredItems = pagesize ? items : items.concat();\n    }\n\n    // get the current page\n    var paged;\n    if (pagesize) {\n      if (filteredItems.length < pagenum * pagesize) {\n        pagenum = Math.floor(filteredItems.length / pagesize);\n      }\n      paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\n    } else {\n      paged = filteredItems;\n    }\n\n    return { totalRows: filteredItems.length, rows: paged };\n  }\n\n  function getRowDiffs(rows, newRows) {\n    var item,\n        r,\n        eitherIsNonData,\n        diff = [];\n    var from = 0,\n        to = newRows.length;\n\n    if (refreshHints && refreshHints.ignoreDiffsBefore) {\n      from = Math.max(0, Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\n    }\n\n    if (refreshHints && refreshHints.ignoreDiffsAfter) {\n      to = Math.min(newRows.length, Math.max(0, refreshHints.ignoreDiffsAfter));\n    }\n\n    for (var i = from, rl = rows.length; i < to; i++) {\n      if (i >= rl) {\n        diff[diff.length] = i;\n      } else {\n        item = newRows[i];\n        r = rows[i];\n\n        if (groupingInfos.length && (eitherIsNonData = item.__nonDataRow || r.__nonDataRow) && item.__group !== r.__group || item.__group && !item.equals(r) || eitherIsNonData && (\n        // no good way to compare totals since they are arbitrary DTOs\n        // deep object comparison is pretty expensive\n        // always considering them 'dirty' seems easier for the time being\n        item.__groupTotals || r.__groupTotals) || item[idProperty] != r[idProperty] || updated && updated[item[idProperty]]) {\n          diff[diff.length] = i;\n        }\n      }\n    }\n    return diff;\n  }\n\n  function recalc(_items) {\n    rowsById = null;\n\n    if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing || refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding) {\n      filterCache = [];\n    }\n\n    var filteredItems = getFilteredAndPagedItems(_items);\n    totalRows = filteredItems.totalRows;\n    var newRows = filteredItems.rows;\n\n    groups = [];\n    if (groupingInfos.length) {\n      groups = extractGroups(newRows);\n      if (groups.length) {\n        addTotals(groups);\n        newRows = flattenGroupedRows(groups);\n      }\n    }\n\n    var diff = getRowDiffs(rows, newRows);\n\n    rows = newRows;\n\n    return diff;\n  }\n\n  function refresh() {\n    if (suspend) {\n      return;\n    }\n\n    var countBefore = rows.length;\n    var totalRowsBefore = totalRows;\n\n    var diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\n\n    // if the current page is no longer valid, go to last page and recalc\n    // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\n    if (pagesize && totalRows < pagenum * pagesize) {\n      pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\n      diff = recalc(items, filter);\n    }\n\n    updated = null;\n    prevRefreshHints = refreshHints;\n    refreshHints = {};\n\n    if (totalRowsBefore !== totalRows) {\n      onPagingInfoChanged.notify(getPagingInfo(), null, self);\n    }\n    if (countBefore !== rows.length) {\n      onRowCountChanged.notify({ previous: countBefore, current: rows.length, dataView: self }, null, self);\n    }\n    if (diff.length > 0) {\n      onRowsChanged.notify({ rows: diff, dataView: self }, null, self);\n    }\n  }\n\n  /** *\n   * Wires the grid and the DataView together to keep row selection tied to item ids.\n   * This is useful since, without it, the grid only knows about rows, so if the items\n   * move around, the same rows stay selected instead of the selection moving along\n   * with the items.\n   *\n   * NOTE:  This doesn't work with cell selection model.\n   *\n   * @param grid {Slick.Grid} The grid to sync selection with.\n   * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\n   *     view due to them getting filtered out.\n   * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\n   *     that are currently out of the view (see preserveHidden) as selected when selection\n   *     changes.\n   * @return {Slick.Event} An event that notifies when an internal list of selected row ids\n   *     changes.  This is useful since, in combination with the above two options, it allows\n   *     access to the full list selected row ids, and not just the ones visible to the grid.\n   * @method syncGridSelection\n   */\n  function syncGridSelection(grid, preserveHidden, preserveHiddenOnSelectionChange) {\n    var self = this;\n    var inHandler;\n    var selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n    var onSelectedRowIdsChanged = new _slick2.default.Event();\n\n    function setSelectedRowIds(rowIds) {\n      if (selectedRowIds.join(',') == rowIds.join(',')) {\n        return;\n      }\n\n      selectedRowIds = rowIds;\n\n      onSelectedRowIdsChanged.notify({\n        'grid': grid,\n        'ids': selectedRowIds,\n        'dataView': self\n      }, new _slick2.default.EventData(), self);\n    }\n\n    function update() {\n      if (selectedRowIds.length > 0) {\n        inHandler = true;\n        var selectedRows = self.mapIdsToRows(selectedRowIds);\n        if (!preserveHidden) {\n          setSelectedRowIds(self.mapRowsToIds(selectedRows));\n        }\n        grid.setSelectedRows(selectedRows);\n        inHandler = false;\n      }\n    }\n\n    grid.onSelectedRowsChanged.subscribe(function (e, args) {\n      if (inHandler) {\n        return;\n      }\n      var newSelectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n      if (!preserveHiddenOnSelectionChange || !grid.getOptions().multiSelect) {\n        setSelectedRowIds(newSelectedRowIds);\n      } else {\n        // keep the ones that are hidden\n        var existing = _jquery2.default.grep(selectedRowIds, function (id) {\n          return self.getRowById(id) === undefined;\n        });\n        // add the newly selected ones\n        setSelectedRowIds(existing.concat(newSelectedRowIds));\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n\n    return onSelectedRowIdsChanged;\n  }\n\n  function syncGridCellCssStyles(grid, key) {\n    var hashById;\n    var inHandler;\n\n    // since this method can be called after the cell styles have been set,\n    // get the existing ones right away\n    storeCellCssStyles(grid.getCellCssStyles(key));\n\n    function storeCellCssStyles(hash) {\n      hashById = {};\n      for (var row in hash) {\n        var id = rows[row][idProperty];\n        hashById[id] = hash[row];\n      }\n    }\n\n    function update() {\n      if (hashById) {\n        inHandler = true;\n        ensureRowsByIdCache();\n        var newHash = {};\n        for (var id in hashById) {\n          var row = rowsById[id];\n          if (row != undefined) {\n            newHash[row] = hashById[id];\n          }\n        }\n        grid.setCellCssStyles(key, newHash);\n        inHandler = false;\n      }\n    }\n\n    grid.onCellCssStylesChanged.subscribe(function (e, args) {\n      if (inHandler) {\n        return;\n      }\n      if (key != args.key) {\n        return;\n      }\n      if (args.hash) {\n        storeCellCssStyles(args.hash);\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n  }\n\n  _jquery2.default.extend(this, {\n    // methods\n    'beginUpdate': beginUpdate,\n    'endUpdate': endUpdate,\n    'setPagingOptions': setPagingOptions,\n    'getPagingInfo': getPagingInfo,\n    'getItems': getItems,\n    'setItems': setItems,\n    'setFilter': setFilter,\n    'sort': sort,\n    'fastSort': fastSort,\n    'reSort': reSort,\n    'setGrouping': setGrouping,\n    'getGrouping': getGrouping,\n    'groupBy': groupBy,\n    'setAggregators': setAggregators,\n    'collapseAllGroups': collapseAllGroups,\n    'expandAllGroups': expandAllGroups,\n    'collapseGroup': collapseGroup,\n    'expandGroup': expandGroup,\n    'getGroups': getGroups,\n    'getIdxById': getIdxById,\n    'getRowById': getRowById,\n    'getItemById': getItemById,\n    'getItemByIdx': getItemByIdx,\n    'mapRowsToIds': mapRowsToIds,\n    'mapIdsToRows': mapIdsToRows,\n    'setRefreshHints': setRefreshHints,\n    'setFilterArgs': setFilterArgs,\n    'refresh': refresh,\n    'updateItem': updateItem,\n    'insertItem': insertItem,\n    'addItem': addItem,\n    'deleteItem': deleteItem,\n    'syncGridSelection': syncGridSelection,\n    'syncGridCellCssStyles': syncGridCellCssStyles,\n\n    // data provider methods\n    'getLength': getLength,\n    'getItem': getItem,\n    'getItemMetadata': getItemMetadata,\n\n    // events\n    'onRowCountChanged': onRowCountChanged,\n    'onRowsChanged': onRowsChanged,\n    'onPagingInfoChanged': onPagingInfoChanged\n  });\n}\n\nfunction AvgAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.count_ = 0;\n    this.nonNullCount_ = 0;\n    this.sum_ = 0;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    this.count_++;\n    if (val != null && val !== '' && !isNaN(val)) {\n      this.nonNullCount_++;\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.avg) {\n      groupTotals.avg = {};\n    }\n    if (this.nonNullCount_ != 0) {\n      groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\n    }\n  };\n}\n\nfunction MinAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.min_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      if (this.min_ == null || val < this.min_) {\n        this.min_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.min) {\n      groupTotals.min = {};\n    }\n    groupTotals.min[this.field_] = this.min_;\n  };\n}\n\nfunction MaxAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.max_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      if (this.max_ == null || val > this.max_) {\n        this.max_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.max) {\n      groupTotals.max = {};\n    }\n    groupTotals.max[this.field_] = this.max_;\n  };\n}\n\nfunction SumAggregator(field) {\n  this.field_ = field;\n\n  this.init = function () {\n    this.sum_ = null;\n  };\n\n  this.accumulate = function (item) {\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)) {\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function (groupTotals) {\n    if (!groupTotals.sum) {\n      groupTotals.sum = {};\n    }\n    groupTotals.sum[this.field_] = this.sum_;\n  };\n}\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nvar _flatpickr = __webpack_require__(30);\n\nvar _flatpickr2 = _interopRequireDefault(_flatpickr);\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar keyCode = _slick2.default.keyCode;\n\n/** *\n * Contains basic SlickGrid editors.\n * @module Editors\n * @namespace Slick\n */\n\n//import 'flatpickr/dist/flatpickr.min.css';\n\nvar Editors = {\n  Text: TextEditor,\n  Integer: IntegerEditor,\n  Float: FloatEditor,\n  Date: DateEditor,\n  YesNoSelect: YesNoSelectEditor,\n  Checkbox: CheckboxEditor,\n  LongText: LongTextEditor\n};\n\n_slick2.default.Editors = Editors;\nexports.default = Editors;\n\n\nfunction TextEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\\'editor-text\\' />').appendTo(args.container).bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    }).focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.getValue = function () {\n    return $input.val();\n  };\n\n  this.setValue = function (val) {\n    $input.val(val);\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field] || '';\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction IntegerEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\\'editor-text\\' />');\n\n    $input.bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field];\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return parseInt($input.val(), 10) || 0;\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    if (isNaN($input.val())) {\n      return {\n        valid: false,\n        msg: 'Please enter a valid integer'\n      };\n    }\n\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val());\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction FloatEditor(args) {\n  var $input = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $input = (0, _jquery2.default)('<INPUT type=text class=\\'editor-text\\' />');\n\n    $input.bind('keydown.nav', function (e) {\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT) {\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function () {\n    $input.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  function getDecimalPlaces() {\n    // returns the number of fixed decimal places or null\n    var rtn = args.column.editorFixedDecimalPlaces;\n    if (typeof rtn == 'undefined') {\n      rtn = FloatEditor.DefaultDecimalPlaces;\n    }\n    return !rtn && rtn !== 0 ? null : rtn;\n  }\n\n  this.loadValue = function (item) {\n    defaultValue = item[args.column.field];\n\n    var decPlaces = getDecimalPlaces();\n    if (decPlaces !== null && (defaultValue || defaultValue === 0) && defaultValue.toFixed) {\n      defaultValue = defaultValue.toFixed(decPlaces);\n    }\n\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    var rtn = parseFloat($input.val()) || 0;\n\n    var decPlaces = getDecimalPlaces();\n    if (decPlaces !== null && (rtn || rtn === 0) && rtn.toFixed) {\n      rtn = parseFloat(rtn.toFixed(decPlaces));\n    }\n\n    return rtn;\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    if (isNaN($input.val())) {\n      return {\n        valid: false,\n        msg: 'Please enter a valid number'\n      };\n    }\n\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nFloatEditor.DefaultDecimalPlaces = null;\n\n/**\n * see https://chmln.github.io/flatpickr/#options - pass as column.options.date = {}\n * @param args\n * @constructor\n */\nfunction DateEditor(args) {\n  var $input = void 0,\n      flatInstance = void 0,\n      defaultDate = void 0,\n      options = args.column.options && args.column.options.date ? args.column.options.date : {};\n\n  this.init = function () {\n    defaultDate = options.defaultDate = args.item[args.column.field];\n\n    $input = (0, _jquery2.default)('<input type=text data-default-date=\"' + defaultDate + '\" class=\"editor-text\" />');\n    $input.appendTo(args.container);\n    $input.focus().val(defaultDate).select();\n    flatInstance = (0, _flatpickr2.default)($input[0], options);\n  };\n\n  this.destroy = function () {\n    flatInstance.destroy();\n    $input.remove();\n  };\n\n  this.show = function () {\n    flatInstance.open();\n    flatInstance.positionCalendar();\n  };\n\n  this.hide = function () {\n    flatInstance.close();\n  };\n\n  this.position = function (position) {\n    //todo: fix how scrolling is affected\n    flatInstance.positionCalendar();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultDate = item[args.column.field];\n    $input.val(defaultDate);\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultDate == null) && $input.val() != defaultDate;\n  };\n\n  this.validate = function () {\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid) {\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction YesNoSelectEditor(args) {\n  var $select = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $select = (0, _jquery2.default)('<select tabIndex=\\'0\\' class=\\'editor-yesno\\'><option value=\\'yes\\'>Yes</option><option value=\\'no\\'>No</option></select>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function () {\n    $select.remove();\n  };\n\n  this.focus = function () {\n    $select.focus();\n  };\n\n  this.loadValue = function (item) {\n    $select.val((defaultValue = item[args.column.field]) ? 'yes' : 'no');\n    $select.select();\n  };\n\n  this.serializeValue = function () {\n    return $select.val() == 'yes';\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return $select.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction CheckboxEditor(args) {\n  var $select = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    $select = (0, _jquery2.default)('<INPUT type=checkbox value=\\'true\\' class=\\'editor-checkbox\\' hideFocus>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function () {\n    $select.remove();\n  };\n\n  this.focus = function () {\n    $select.focus();\n  };\n\n  this.loadValue = function (item) {\n    defaultValue = !!item[args.column.field];\n    if (defaultValue) {\n      $select.prop('checked', true);\n    } else {\n      $select.prop('checked', false);\n    }\n  };\n\n  this.serializeValue = function () {\n    return $select.prop('checked');\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return this.serializeValue() !== defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction PercentCompleteEditor(args) {\n  console.error('PercentCompleteEditor is derecated');\n}\n\n/*\n * An example of a \"detached\" editor.\n * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n */\nfunction LongTextEditor(args) {\n  var $input = void 0,\n      $wrapper = void 0;\n  var defaultValue = void 0;\n  var scope = this;\n\n  this.init = function () {\n    var $container = (0, _jquery2.default)('body');\n\n    $wrapper = (0, _jquery2.default)('<div class=\\'slick-large-editor-text\\' />').appendTo($container);\n    $input = (0, _jquery2.default)('<textarea hidefocus rows=5 />').appendTo($wrapper);\n\n    (0, _jquery2.default)('<div><button>Save</button> <button>Cancel</button></div>').appendTo($wrapper);\n\n    $wrapper.find('button:first').bind('click', this.save);\n    $wrapper.find('button:last').bind('click', this.cancel);\n    $input.bind('keydown', this.handleKeyDown);\n\n    scope.position(args.position);\n    $input.focus().select();\n  };\n\n  this.handleKeyDown = function (e) {\n    if (e.which == keyCode.ENTER && e.ctrlKey) {\n      scope.save();\n    } else if (e.which == keyCode.ESCAPE) {\n      e.preventDefault();\n      scope.cancel();\n    } else if (e.which == keyCode.TAB && e.shiftKey) {\n      e.preventDefault();\n      args.grid.navigatePrev();\n    } else if (e.which == keyCode.TAB) {\n      e.preventDefault();\n      args.grid.navigateNext();\n    }\n  };\n\n  this.save = function () {\n    args.commitChanges();\n  };\n\n  this.cancel = function () {\n    $input.val(defaultValue);\n    args.cancelChanges();\n  };\n\n  this.hide = function () {\n    $wrapper.hide();\n  };\n\n  this.show = function () {\n    $wrapper.show();\n  };\n\n  this.position = function (position) {\n    $wrapper.css('top', position.top - 5).css('left', position.left - 5);\n  };\n\n  this.destroy = function () {\n    $wrapper.remove();\n  };\n\n  this.focus = function () {\n    $input.focus();\n  };\n\n  this.loadValue = function (item) {\n    $input.val(defaultValue = item[args.column.field]);\n    $input.select();\n  };\n\n  this.serializeValue = function () {\n    return $input.val();\n  };\n\n  this.applyValue = function (item, state) {\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function () {\n    return !($input.val() == '' && defaultValue == null) && $input.val() != defaultValue;\n  };\n\n  this.validate = function () {\n    var valid = true;\n    var msg = null;\n    if (args.column.validator) {\n      var validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nfunction PercentCompleteFormatter(row, cell, value, columnDef, dataContext) {\n  if (value == null || value === '') {\n    return '-';\n  } else if (value < 50) {\n    return '<span style=\\'color:red;font-weight:bold;\\'>' + value + '%</span>';\n  } else {\n    return '<span style=\\'color:green\\'>' + value + '%</span>';\n  }\n}\n\nfunction PercentCompleteBarFormatter(row, cell, value, columnDef, dataContext) {\n  if (value == null || value === '') {\n    return '';\n  }\n\n  var color = void 0;\n\n  if (value < 30) {\n    color = 'red';\n  } else if (value < 70) {\n    color = 'silver';\n  } else {\n    color = 'green';\n  }\n\n  return '<span class=\\'percent-complete-bar\\' style=\\'background:' + color + ';width:' + value + '%\\'></span>';\n}\n\nfunction YesNoFormatter(row, cell, value, columnDef, dataContext) {\n  return value ? 'Yes' : 'No';\n}\n\nfunction CheckmarkFormatter(row, cell, value, columnDef, dataContext) {\n  return value ? '✔' : '';\n}\n\nexports.default = {\n  PercentComplete: PercentCompleteFormatter,\n  PercentCompleteBar: PercentCompleteBarFormatter,\n  YesNo: YesNoFormatter,\n  Checkmark: CheckmarkFormatter\n};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _jquery = __webpack_require__(1);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _interactjs = __webpack_require__(4);\n\nvar _interactjs2 = _interopRequireDefault(_interactjs);\n\nvar _slick = __webpack_require__(0);\n\nvar _slick2 = _interopRequireDefault(_slick);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Slick.Grid globals pretense\n_slick2.default.Grid = SlickGrid; /**\n                                   * @license\n                                   * (c) 2009-2013 Michael Leibman\n                                   * michael{dot}leibman{at}gmail{dot}com\n                                   * http://github.com/mleibman/slickgrid\n                                   *\n                                   * Distributed under MIT license.\n                                   * All rights reserved.\n                                   *\n                                   * SlickGrid v2.2\n                                   *\n                                   * NOTES:\n                                   *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n                                   *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n                                   *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n                                   *     and do proper cleanup.\n                                   */\n\nexports.default = SlickGrid;\n\n// shared across all grids on the page\n\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n// ////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options) {\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    enableAsyncPostRenderCleanup: false,\n    asyncPostRenderCleanupDelay: 40,\n    autoHeight: false,\n    editorLock: _slick2.default.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    createFooterRow: false,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: 'flashing',\n    selectedCellCssClass: 'selected',\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: 'new-row'\n  };\n\n  var columnDefaults = {\n    name: '',\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacer;\n  var $footerRow, $footerRowScroller, $footerRowSpacer;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n      headerColumnHeightDiff = 0,\n      // border+padding\n  cellWidthDiff = 0,\n      cellHeightDiff = 0,\n      jQueryNewWidthBehaviour = false;\n  var absoluteColumnMinWidth;\n\n  var tabbingDirection = 1;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var h_postrenderCleanup = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n  var postProcessedCleanupQueue = [];\n  var postProcessgroupId = 0;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n  var zombieRowCacheFromLastMouseWheelEvent; // row cache for above node\n  var zombieRowPostProcessedFromLastMouseWheelEvent; // post processing references for above node\n\n  // store css attributes if display:none is active in container or parent\n  var cssShow = { position: 'absolute', visibility: 'hidden', display: 'block' };\n  var $hiddenParents;\n  var oldProps = [];\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init() {\n    $container = (0, _jquery2.default)(container);\n    if ($container.length < 1) {\n      throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n    }\n\n    cacheCssForHiddenInit();\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = _jquery2.default.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      'commitCurrentEdit': commitCurrentEdit,\n      'cancelCurrentEdit': cancelCurrentEdit\n    };\n\n    $container.empty().css('overflow', 'hidden').css('outline', 0).addClass(uid).addClass('ui-widget');\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css('position'))) {\n      $container.css('position', 'relative');\n    }\n\n    $focusSink = (0, _jquery2.default)(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    $headerScroller = (0, _jquery2.default)(\"<div class='slick-header ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headers = (0, _jquery2.default)(\"<div class='slick-header-columns' />\").appendTo($headerScroller);\n    $headers.width(getHeadersWidth());\n\n    $headerRowScroller = (0, _jquery2.default)(\"<div class='slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headerRow = (0, _jquery2.default)(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n    $headerRowSpacer = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($headerRowScroller);\n\n    $topPanelScroller = (0, _jquery2.default)(\"<div class='slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $topPanel = (0, _jquery2.default)(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n    if (!options.showTopPanel) {\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow) {\n      $headerRowScroller.hide();\n    }\n\n    $viewport = (0, _jquery2.default)(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n\n    $canvas = (0, _jquery2.default)(\"<div class='grid-canvas' />\").appendTo($viewport);\n\n    if (options.createFooterRow) {\n      $footerRowScroller = (0, _jquery2.default)(\"<div class='slick-footerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n      $footerRow = (0, _jquery2.default)(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n      $footerRowSpacer = (0, _jquery2.default)(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\").css('width', getCanvasWidth() + scrollbarDimensions.width + 'px').appendTo($footerRowScroller);\n\n      if (!options.showFooterRow) {\n        $footerRowScroller.hide();\n      }\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization) {\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization() {\n    if (!initialized) {\n      initialized = true;\n\n      viewportW = parseFloat(_jquery2.default.css($container[0], 'width', true));\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells) {\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind('selectstart.ui', function (event) {\n          return (0, _jquery2.default)(event.target).is('input,textarea');\n        });\n      }\n\n      updateColumnCaches();\n      createColumnHeaders();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind('resize.slickgrid', resizeCanvas);\n      $viewport\n      // .bind(\"click\", handleClick)\n      .bind('scroll', handleScroll);\n      $headerScroller.bind('contextmenu', handleHeaderContextMenu).bind('click', handleHeaderClick).delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter).delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n      $headerRowScroller.bind('scroll', handleHeaderRowScroll);\n\n      if (options.createFooterRow) {\n        $footerRowScroller.bind('scroll', handleFooterRowScroll);\n      }\n\n      $focusSink.add($focusSink2).bind('keydown', handleKeyDown);\n      $canvas.bind('keydown', handleKeyDown).bind('click', handleClick).bind('dblclick', handleDblClick).bind('contextmenu', handleContextMenu).delegate('.slick-cell', 'mouseenter', handleMouseEnter).delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\n      // legacy support for drag events\n      (0, _interactjs2.default)($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      });\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)) {\n        $canvas.bind('mousewheel', handleMouseWheel);\n      }\n      restoreCssFromHiddenInit();\n    }\n  }\n\n  function cacheCssForHiddenInit() {\n    // handle display:none on container or container parents\n    $hiddenParents = $container.parents().addBack().not(':visible');\n    $hiddenParents.each(function () {\n      var old = {};\n      for (var name in cssShow) {\n        old[name] = this.style[name];\n        this.style[name] = cssShow[name];\n      }\n      oldProps.push(old);\n    });\n  }\n\n  function restoreCssFromHiddenInit() {\n    // finish handle display:none on container or container parents\n    // - put values back the way they were\n    $hiddenParents.each(function (i) {\n      var old = oldProps[i];\n      for (var name in cssShow) {\n        this.style[name] = old[name];\n      }\n    });\n  }\n\n  function registerPlugin(plugin) {\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin) {\n    for (var i = plugins.length; i >= 0; i--) {\n      if (plugins[i] === plugin) {\n        if (plugins[i].destroy) {\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model) {\n    if (selectionModel) {\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy) {\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel) {\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel() {\n    return selectionModel;\n  }\n\n  function getCanvasNode() {\n    return $canvas[0];\n  }\n\n  function measureScrollbar() {\n    var $c = (0, _jquery2.default)(\"<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo('body');\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth() {\n    var headersWidth = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      var width = columns[i].width;\n      headersWidth += width;\n    }\n    headersWidth += scrollbarDimensions.width;\n    return Math.max(headersWidth, viewportW) + 1000;\n  }\n\n  function getCanvasWidth() {\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n    var rowWidth = 0;\n    var i = columns.length;\n    while (i--) {\n      rowWidth += columns[i].width;\n    }\n    return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate) {\n    var oldCanvasWidth = canvasWidth;\n    canvasWidth = getCanvasWidth();\n\n    if (canvasWidth != oldCanvasWidth) {\n      $canvas.width(canvasWidth);\n      $headerRow.width(canvasWidth);\n      if (options.createFooterRow) {\n        $footerRow.width(canvasWidth);\n      }\n      $headers.width(getHeadersWidth());\n      viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n    }\n\n    var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n    $headerRowSpacer.width(w);\n    if (options.createFooterRow) {\n      $footerRowSpacer.width(w);\n    }\n\n    if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate) {\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target) {\n    if ($target && $target.jquery) {\n      $target.attr('unselectable', 'on').css('MozUserSelect', 'none').bind('selectstart.ui', function () {\n        return false;\n      }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight() {\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = (0, _jquery2.default)(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true) {\n      var test = supportedHeight * 2;\n      div.css('height', test);\n      if (test > testUpTo || div.height() !== test) {\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents() {\n    var elem = $canvas[0];\n    while ((elem = elem.parentNode) != document.body && elem != null) {\n      // bind to scroll containers only\n      if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight) {\n        var $elem = (0, _jquery2.default)(elem);\n        if (!$boundAncestors) {\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents() {\n    if (!$boundAncestors) {\n      return;\n    }\n    $boundAncestors.unbind('scroll.' + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip) {\n    if (!initialized) {\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null) {\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header) {\n      if (title !== undefined) {\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined) {\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n\n      $header.attr('title', toolTip || '').children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n    }\n  }\n\n  function getHeaderRow() {\n    return $headerRow[0];\n  }\n\n  function getFooterRow() {\n    return $footerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n    var $header = $headerRow.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRowColumn(columnId) {\n    var idx = getColumnIndex(columnId);\n    var $footer = $footerRow.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnHeaders() {\n    function onMouseEnter() {\n      (0, _jquery2.default)(this).addClass('ui-state-hover');\n    }\n\n    function onMouseLeave() {\n      (0, _jquery2.default)(this).removeClass('ui-state-hover');\n    }\n\n    $headers.find('.slick-header-column').each(function () {\n      var columnDef = (0, _jquery2.default)(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderCellDestroy, {\n          'node': this,\n          'column': columnDef,\n          'grid': self\n        });\n      }\n    });\n    $headers.empty();\n    $headers.width(getHeadersWidth());\n\n    $headerRow.find('.slick-headerrow-column').each(function () {\n      var columnDef = (0, _jquery2.default)(this).data('column');\n      if (columnDef) {\n        trigger(self.onBeforeHeaderRowCellDestroy, {\n          'node': this,\n          'column': columnDef,\n          'grid': self\n        });\n      }\n    });\n    $headerRow.empty();\n\n    if (options.createFooterRow) {\n      $footerRow.find('.slick-footerrow-column').each(function () {\n        var columnDef = (0, _jquery2.default)(this).data('column');\n        if (columnDef) {\n          trigger(self.onBeforeFooterRowCellDestroy, {\n            'node': this,\n            'column': columnDef\n          });\n        }\n      });\n      $footerRow.empty();\n    }\n\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i];\n\n      var header = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' />\").html(\"<span class='slick-column-name'>\" + m.name + '</span>').width(m.width - headerColumnWidthDiff).attr('id', '' + uid + m.id).attr('title', m.toolTip || '').data('column', m).addClass(m.headerCssClass || '').appendTo($headers);\n\n      if (options.enableColumnReorder || m.sortable) {\n        header.on('mouseenter', onMouseEnter).on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable) {\n        header.addClass('slick-header-sortable');\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        'node': header[0],\n        'column': m,\n        'grid': self\n      });\n\n      if (options.showHeaderRow) {\n        var headerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-headerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).appendTo($headerRow);\n\n        trigger(self.onHeaderRowCellRendered, {\n          'node': headerRowCell[0],\n          'column': m,\n          'grid': self\n        });\n      }\n      if (options.createFooterRow && options.showFooterRow) {\n        var footerRowCell = (0, _jquery2.default)(\"<div class='ui-state-default slick-footerrow-column l\" + i + ' r' + i + \"'></div>\").data('column', m).appendTo($footerRow);\n\n        trigger(self.onFooterRowCellRendered, {\n          'node': footerRowCell[0],\n          'column': m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder) {\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort() {\n    $headers.click(function (e) {\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ((0, _jquery2.default)(e.target).hasClass('slick-resizable-handle')) {\n        return;\n      }\n\n      var $col = (0, _jquery2.default)(e.target).closest('.slick-header-column');\n      if (!$col.length) {\n        return;\n      }\n\n      var column = $col.data('column');\n      if (column.sortable) {\n        if (!getEditorLock().commitCurrentEdit()) {\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++) {\n          if (sortColumns[i].columnId == column.id) {\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort) {\n          if (sortOpts) {\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if (!e.shiftKey && !e.metaKey || !options.multiColumnSort) {\n            sortColumns = [];\n          }\n\n          if (!sortOpts) {\n            sortOpts = { columnId: column.id, sortAsc: column.defaultSortAsc };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0) {\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort) {\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc,\n            grid: self\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: _jquery2.default.map(sortColumns, function (col) {\n              return { sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc };\n            }),\n            grid: self\n          }, e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Refactored to use interactjs\n   */\n  function setupColumnReorder() {\n    var x = 0;\n    var delta = 0;\n    var placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    (0, _interactjs2.default)('.slick-header-column').ignoreFrom('.slick-resizable-handle').draggable({\n      inertia: true,\n      // keep the element within the area of it's parent\n      restrict: {\n        restriction: 'parent',\n        endOnly: true,\n        elementRect: { top: 0, left: 0, bottom: 0, right: 0 }\n      },\n      // enable autoScroll\n      autoScroll: true,\n      axis: 'x',\n      onstart: function onstart(event) {\n        x = 0;\n        delta = event.target.offsetWidth;\n\n        // get old order\n        $headers.find('.slick-header-column').each(function (index) {\n          (0, _jquery2.default)(this).data('index', index);\n        });\n\n        placeholder.style.height = event.target.offsetHeight + 'px';\n        placeholder.style.width = delta + 'px';\n\n        (0, _jquery2.default)(event.target).after(placeholder).css({\n          position: 'absolute',\n          zIndex: 1000,\n          marginLeft: (0, _jquery2.default)(event.target).position().left\n        });\n      },\n\n      onmove: function onmove(event) {\n        x += event.dx;\n        event.target.style.transform = 'translate3d(' + x + 'px, -3px, 100px)';\n        // event.target.style.marginLeft = x + 'px';\n      },\n\n      onend: function onend(event) {\n        x = 0;\n        delta = 0;\n        (0, _jquery2.default)(event.target).css({\n          position: 'relative',\n          zIndex: '',\n          marginLeft: 0,\n          transform: 'none'\n        });\n\n        placeholder.parentNode.removeChild(placeholder);\n        var newColumns = [];\n\n        $headers.find('.slick-header-column').each(function (index) {\n          newColumns.push(columns[(0, _jquery2.default)(this).data('index')]);\n          (0, _jquery2.default)(this).removeData('index');\n        });\n\n        setColumns(newColumns);\n        trigger(self.onColumnsReordered, { grid: self });\n        setupColumnResize();\n      }\n    }).dropzone({\n      accept: '.slick-header-column',\n\n      ondragenter: function ondragenter(event) {\n        event.target.classList.add('interact-drop-active');\n        event.relatedTarget.classList.add('interact-can-drop');\n      },\n\n      ondragleave: function ondragleave(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n      },\n\n      ondrop: function ondrop(event) {\n        event.target.classList.remove('interact-drop-active');\n        event.relatedTarget.classList.remove('interact-can-drop');\n        (0, _jquery2.default)(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n      }\n    });\n  }\n\n  function setupColumnResize() {\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function (i, e) {\n      if (columns[i].resizable) {\n        if (firstResizable === undefined) {\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined) {\n      return;\n    }\n    columnElements.each(function (i, element) {\n      if (i < firstResizable || options.forceFitColumns && i >= lastResizable) {\n        return;\n      }\n      $col = (0, _jquery2.default)(element);\n\n      var $handle = (0, _jquery2.default)(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable')) return;\n\n      var activeColumn = columns[i];\n      if (activeColumn.resizable) {\n        $col.data('resizable', true);\n        (0, _interactjs2.default)(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function (event) {\n          if (!getEditorLock().commitCurrentEdit()) {\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function (event) {\n          var x = event.dx;\n          var width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width) width = activeColumn.minWidth;else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width) width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns) {\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize) {\n            applyColumnWidths();\n          }\n        }).on('resizeend', function (event) {\n          event.target.classList.remove('slick-header-column-active');\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, { grid: self });\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el) {\n    var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n    var delta = 0;\n    _jquery2.default.each(p, function (n, val) {\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function measureCellPaddingAndBorder() {\n    var el;\n    var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight'];\n    var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\n    // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n    // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n    // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n    var verArray = _jquery2.default.fn.jquery.split('.');\n    jQueryNewWidthBehaviour = verArray[0] == 1 && verArray[1] >= 8 || verArray[0] >= 2;\n\n    el = (0, _jquery2.default)(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n      _jquery2.default.each(h, function (n, val) {\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = (0, _jquery2.default)(\"<div class='slick-row' />\").appendTo($canvas);\n    el = (0, _jquery2.default)(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box') {\n      _jquery2.default.each(h, function (n, val) {\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      _jquery2.default.each(v, function (n, val) {\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules() {\n    $style = (0, _jquery2.default)(\"<style type='text/css' rel='stylesheet' />\").appendTo((0, _jquery2.default)('head'));\n    var rowHeight = options.rowHeight - cellHeightDiff;\n    var rules = ['.' + uid + ' .slick-header-column { left: 0; }', '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }', '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }', '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }', '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }', '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'];\n\n    for (var i = 0; i < columns.length; i++) {\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet) {\n      // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx) {\n    if (!stylesheet) {\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++) {\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]) {\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet) {\n        throw new Error('Cannot find stylesheet.');\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = stylesheet.cssRules || stylesheet.rules;\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++) {\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)) {\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      'left': columnCssRulesL[idx],\n      'right': columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules() {\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy() {\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, { grid: self });\n\n    var i = plugins.length;\n    while (i--) {\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind('.slickgrid');\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e) {\n    e = e || new _slick2.default.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock() {\n    return options.editorLock;\n  }\n\n  function getEditController() {\n    return editController;\n  }\n\n  function getColumnIndex(id) {\n    return columnsById[id];\n  }\n\n  function autosizeColumns() {\n    var i,\n        c,\n        widths = [],\n        shrinkLeeway = 0,\n        total = 0,\n        prevTotal,\n        availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++) {\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable) {\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway) {\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++) {\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth) {\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth) {\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++) {\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth) {\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, c.maxWidth - currentWidth || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += total <= availWidth ? growSize : 0;\n      }\n      if (prevTotal >= total) {\n        // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++) {\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]) {\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender) {\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnHeaderWidths() {\n    if (!initialized) {\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children('[id]'), ii = headers.length; i < ii; i++) {\n      h = (0, _jquery2.default)(headers[i]);\n      if (jQueryNewWidthBehaviour) {\n        if (h.outerWidth() !== columns[i].width) {\n          h.outerWidth(columns[i].width);\n        }\n      } else {\n        if (h.width() !== columns[i].width - headerColumnWidthDiff) {\n          h.width(columns[i].width - headerColumnWidthDiff);\n        }\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths() {\n    var x = 0,\n        w,\n        rule;\n    for (var i = 0; i < columns.length; i++) {\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + 'px';\n      rule.right.style.right = canvasWidth - x - w + 'px';\n\n      x += columns[i].width;\n    }\n  }\n\n  function setSortColumn(columnId, ascending) {\n    setSortColumns([{ columnId: columnId, sortAsc: ascending }]);\n  }\n\n  function setSortColumns(cols) {\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass('slick-header-column-sorted').find('.slick-sort-indicator').removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\n    _jquery2.default.each(sortColumns, function (i, col) {\n      if (col.sortAsc == null) {\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null) {\n        headerColumnEls.eq(columnIndex).addClass('slick-header-column-sorted').find('.slick-sort-indicator').addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n      }\n    });\n  }\n\n  function getSortColumns() {\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges) {\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++) {\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++) {\n        if (!hash[j]) {\n          // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++) {\n          if (canCellBeSelected(j, k)) {\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, { rows: getSelectedRows(), grid: self }, e);\n  }\n\n  function getColumns() {\n    return columns;\n  }\n\n  function updateColumnCaches() {\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n      x += columns[i].width;\n    }\n  }\n\n  function setColumns(columnDefinitions) {\n    columns = columnDefinitions;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++) {\n      var m = columns[i] = _jquery2.default.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth) {\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth) {\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized) {\n      invalidateAllRows();\n      createColumnHeaders();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions() {\n    return options;\n  }\n\n  function setOptions(args) {\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow) {\n      invalidateRow(getDataLength());\n    }\n\n    options = _jquery2.default.extend(options, args);\n    validateAndEnforceOptions();\n\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n    render();\n  }\n\n  function validateAndEnforceOptions() {\n    if (options.autoHeight) {\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop) {\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop) {\n      scrollTo(0);\n    }\n  }\n\n  function getData() {\n    return data;\n  }\n\n  function getDataLength() {\n    if (data.getLength) {\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew() {\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i) {\n    if (data.getItem) {\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel() {\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible) {\n    if (options.showTopPanel != visible) {\n      options.showTopPanel = visible;\n      if (visible) {\n        $topPanelScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible) {\n    if (options.showHeaderRow != visible) {\n      options.showHeaderRow = visible;\n      if (visible) {\n        $headerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible) {\n    if (options.showFooterRow != visible) {\n      options.showFooterRow = visible;\n      if (visible) {\n        $footerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $footerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode() {\n    return $container.get(0);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row) {\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y) {\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y) {\n    y = Math.max(y, 0);\n    y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset) {\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop) {\n      vScrollDir = prevScrollTop + oldOffset < newScrollTop + offset ? 1 : -1;\n      $viewport[0].scrollTop = lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, { grid: self });\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext) {\n    if (value == null) {\n      return '';\n    } else {\n      return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n  }\n\n  function getFormatter(row, column) {\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return columnOverrides && columnOverrides.formatter || rowMetadata && rowMetadata.formatter || column.formatter || options.formatterFactory && options.formatterFactory.getFormatter(column) || options.defaultFormatter;\n  }\n\n  function getEditor(row, cell) {\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined) {\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined) {\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || options.editorFactory && options.editorFactory.getEditor(column);\n  }\n\n  function getDataItemValueForColumn(item, columnDef) {\n    if (options.dataItemColumnValueExtractor) {\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArray, row, range, dataLength) {\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = 'slick-row' + (dataLoading ? ' loading' : '') + (row === activeRow ? ' active' : '') + (row % 2 == 1 ? ' odd' : ' even');\n\n    if (!d) {\n      rowCss += ' ' + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses) {\n      rowCss += ' ' + metadata.cssClasses;\n    }\n\n    stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++) {\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns) {\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = columnData && columnData.colspan || 1;\n        if (colspan === '*') {\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n        if (columnPosLeft[i] > range.rightPx) {\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        appendCellHtml(stringArray, row, i, colspan, d);\n      }\n\n      if (colspan > 1) {\n        i += colspan - 1;\n      }\n    }\n\n    stringArray.push('</div>');\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item) {\n    // stringArray: stringBuilder containing the HTML parts\n    // row, cell: row and column index\n    // colspan: HTML colspan\n    // item: grid data for row\n\n    var m = columns[cell];\n    var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? ' ' + m.cssClass : '');\n    if (row === activeRow && cell === activeCell) {\n      cellCss += ' active';\n    }\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses) {\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]) {\n        cellCss += ' ' + cellCssClasses[key][row][m.id];\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item) {\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(getFormatter(row, m)(row, cell, value, m, item));\n    }\n\n    stringArray.push('</div>');\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep) {\n    for (var i in rowsCache) {\n      if ((i = parseInt(i, 10)) !== activeRow && (i < rangeToKeep.top || i > rangeToKeep.bottom)) {\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidate() {\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows() {\n    if (currentEditor) {\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache) {\n      removeRowFromCache(row);\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx) {\n    postProcessgroupId++;\n\n    // store and detach node for later async cleanup\n    for (var columnIdx in postProcessedRow) {\n      if (postProcessedRow.hasOwnProperty(columnIdx)) {\n        postProcessedCleanupQueue.push({\n          actionType: 'C',\n          groupId: postProcessgroupId,\n          node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n          columnIdx: columnIdx | 0,\n          rowIdx: rowIdx\n        });\n      }\n    }\n    postProcessedCleanupQueue.push({\n      actionType: 'R',\n      groupId: postProcessgroupId,\n      node: cacheEntry.rowNode\n    });\n    (0, _jquery2.default)(cacheEntry.rowNode).detach();\n  }\n\n  function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx) {\n    postProcessedCleanupQueue.push({\n      actionType: 'C',\n      groupId: postProcessgroupId,\n      node: cellnode,\n      columnIdx: columnIdx,\n      rowIdx: rowIdx\n    });\n    (0, _jquery2.default)(cellnode).detach();\n  }\n\n  function removeRowFromCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode) {\n      cacheEntry.rowNode.style.display = 'none';\n      zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n      zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n      zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];\n      // ignore post processing cleanup in this case - it will be dealt with later\n    } else {\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]) {\n        queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n      } else {\n        $canvas[0].removeChild(cacheEntry.rowNode);\n      }\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows) {\n    var i, rl;\n    if (!rows || !rows.length) {\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++) {\n      if (currentEditor && activeRow === rows[i]) {\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]) {\n        removeRowFromCache(rows[i]);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidateRow(row) {\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell) {\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode) {\n      return;\n    }\n\n    var m = columns[cell],\n        d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell) {\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row) {\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry) {\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n          node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor) {\n        currentEditor.loadValue(d);\n      } else if (d) {\n        node.innerHTML = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = '';\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight() {\n    return parseFloat(_jquery2.default.css($container[0], 'height', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingTop', true)) - parseFloat(_jquery2.default.css($container[0], 'paddingBottom', true)) - parseFloat(_jquery2.default.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) - (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) - (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) - (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0);\n  }\n\n  function resizeCanvas() {\n    if (!initialized) {\n      return;\n    }\n    if (options.autoHeight) {\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n    } else {\n      viewportH = getViewportHeight();\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n    viewportW = parseFloat(_jquery2.default.css($container[0], 'width', true));\n    if (!options.autoHeight) {\n      $viewport.height(viewportH);\n    }\n\n    if (options.forceFitColumns) {\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount() {\n    if (!initialized) {\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && numberOfRows * options.rowHeight > viewportH;\n    viewportHasHScroll = canvasWidth > viewportW - scrollbarDimensions.width;\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache) {\n      if (i > l) {\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup) {\n      startPostProcessingCleanup();\n    }\n\n    if (activeCellNode && activeRow > l) {\n      resetActiveCell();\n    }\n\n    var oldH = h;\n    th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n    if (th < maxSupportedCssHeight) {\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH) {\n      $canvas.css('height', h);\n      scrollTop = $viewport[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = scrollTop + offset <= th - viewportH;\n\n    if (th == 0 || scrollTop == 0) {\n      page = offset = 0;\n    } else if (oldScrollTopInRange) {\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - viewportH);\n    }\n\n    if (h != oldH && options.autoHeight) {\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll) {\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft) {\n    if (viewportTop == null) {\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null) {\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft) {\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1) {\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1) {\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row) {\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry) {\n      if (cacheEntry.cellRenderQueue.length) {\n        var lastChild = cacheEntry.rowNode.lastChild;\n        while (cacheEntry.cellRenderQueue.length) {\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n          lastChild = lastChild.previousSibling;\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row) {\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx) {\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)) {\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx) {\n        if (!(row == activeRow && i == activeCell)) {\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove, node;\n    postProcessgroupId++;\n    while ((cellToRemove = cellsToRemove.pop()) != null) {\n      node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]) {\n        queuePostProcessedCellForCleanup(node, cellToRemove, row);\n      } else {\n        cacheEntry.rowNode.removeChild(node);\n      }\n\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]) {\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range) {\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++) {\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry) {\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++) {\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx) {\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null) {\n          i += colspan > 1 ? colspan - 1 : 0;\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata) {\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = columnData && columnData.colspan || 1;\n          if (colspan === '*') {\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx) {\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += colspan > 1 ? colspan - 1 : 0;\n      }\n\n      if (cellsAdded) {\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length) {\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    var processedRow;\n    var node;\n    while ((processedRow = processedRows.pop()) != null) {\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null) {\n        node = x.lastChild;\n        cacheEntry.rowNode.appendChild(node);\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n      }\n    }\n  }\n\n  function renderRows(range) {\n    var parentNode = $canvas[0],\n        stringArray = [],\n        rows = [],\n        needToReselectCell = false,\n        dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++) {\n      if (rowsCache[i]) {\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        'rowNode': null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        'cellColSpans': [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        'cellNodesByColumnIdx': [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        'cellRenderQueue': []\n      };\n\n      appendRowHtml(stringArray, i, range, dataLength);\n      if (activeCellNode && activeRow === i) {\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length) {\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    for (var i = 0, ii = rows.length; i < ii; i++) {\n      rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n    }\n\n    if (needToReselectCell) {\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing() {\n    if (!options.enableAsyncPostRender) {\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function startPostProcessingCleanup() {\n    if (!options.enableAsyncPostRenderCleanup) {\n      return;\n    }\n    clearTimeout(h_postrenderCleanup);\n    h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n  }\n\n  function invalidatePostProcessingResults(row) {\n    // change status of columns to be re-rendered\n    for (var columnIdx in postProcessedRows[row]) {\n      if (postProcessedRows[row].hasOwnProperty(columnIdx)) {\n        postProcessedRows[row][columnIdx] = 'C';\n      }\n    }\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions() {\n    for (var row in rowsCache) {\n      rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n    }\n  }\n\n  function render() {\n    if (!initialized) {\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft) {\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll() {\n    var scrollLeft = $headerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft) {\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll() {\n    var scrollLeft = $footerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft) {\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleScroll() {\n    scrollTop = $viewport[0].scrollTop;\n    scrollLeft = $viewport[0].scrollLeft;\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist) {\n      prevScrollLeft = scrollLeft;\n      $headerScroller[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScroller[0].scrollLeft = scrollLeft;\n      if (options.createFooterRow) {\n        $footerRowScroller[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    if (vScrollDist) {\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH) {\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH) {\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset) {\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist) {\n      if (h_render) {\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20) {\n        if (options.forceSyncScrolling || Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW) {\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, { grid: self });\n      }\n    }\n\n    trigger(self.onScroll, { scrollLeft: scrollLeft, scrollTop: scrollTop, grid: self });\n  }\n\n  function asyncPostProcessRows() {\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow) {\n      var row = vScrollDir >= 0 ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength) {\n        continue;\n      }\n\n      if (!postProcessedRows[row]) {\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx) {\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)) {\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n        if (m.asyncPostRender && processedStatus !== 'R') {\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node) {\n            m.asyncPostRender(node, row, getDataItem(row), m, processedStatus === 'C');\n          }\n          postProcessedRows[row][columnIdx] = 'R';\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function asyncPostProcessCleanupRows() {\n    if (postProcessedCleanupQueue.length > 0) {\n      var groupId = postProcessedCleanupQueue[0].groupId;\n\n      // loop through all queue members with this groupID\n      while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId) {\n        var entry = postProcessedCleanupQueue.shift();\n        if (entry.actionType == 'R') {\n          (0, _jquery2.default)(entry.node).remove();\n        }\n        if (entry.actionType == 'C') {\n          var column = columns[entry.columnIdx];\n          if (column.asyncPostRenderCleanup && entry.node) {\n            // cleanup must also remove element\n            column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n          }\n        }\n      }\n\n      // call this function again after the specified delay\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash) {\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache) {\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash) {\n        for (columnId in removedRowHash) {\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash) {\n        for (columnId in addedRowHash) {\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]) {\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node) {\n              (0, _jquery2.default)(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash) {\n    if (cellCssClasses[key]) {\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': hash, 'grid': self });\n  }\n\n  function removeCellCssStyles(key) {\n    if (!cellCssClasses[key]) {\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': null, 'grid': self });\n  }\n\n  function setCellCssStyles(key, hash) {\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, { 'key': key, 'hash': hash, 'grid': self });\n  }\n\n  function getCellCssStyles(key) {\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed) {\n    speed = speed || 100;\n    if (rowsCache[row]) {\n      var toggleCellClass = function toggleCellClass(times) {\n        if (!times) {\n          return;\n        }\n        setTimeout(function () {\n          $cell.queue(function () {\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        }, speed);\n      };\n\n      var $cell = (0, _jquery2.default)(getCellNode(row, cell));\n\n      toggleCellClass(4);\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleMouseWheel(e) {\n    var rowNode = (0, _jquery2.default)(e.target).closest('.slick-row')[0];\n    if (rowNode != rowNodeFromLastMouseWheelEvent) {\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode) {\n        if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent) {\n          queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent, zombieRowPostProcessedFromLastMouseWheelEvent);\n        } else {\n          $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n        }\n        zombieRowNodeFromLastMouseWheelEvent = null;\n        zombieRowCacheFromLastMouseWheelEvent = null;\n        zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n        if (options.enableAsyncPostRenderCleanup) {\n          startPostProcessingCleanup();\n        }\n      }\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n  }\n\n  function handleDragStart(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)) {\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()) {\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent) {\n    var event = _jquery2.default.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent) {\n    trigger(self.onDragEnd, interactEvent, _jquery2.default.Event('mousedown'));\n  }\n\n  function handleKeyDown(e) {\n    trigger(self.onKeyDown, { row: activeRow, cell: activeCell, grid: self }, e);\n    var handled = e.isImmediatePropagationStopped();\n    var keyCode = _slick2.default.keyCode;\n\n    if (!handled) {\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey) {\n        // editor may specify an array of keys to bubble\n        if (options.editable && currentEditor && currentEditor.keyCaptureList) {\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1) {\n            return;\n          }\n        }\n        if (e.which == keyCode.ESCAPE) {\n          if (!getEditorLock().isActive()) {\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == keyCode.PAGE_DOWN) {\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == keyCode.PAGE_UP) {\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == keyCode.LEFT) {\n          handled = navigateLeft();\n        } else if (e.which == keyCode.RIGHT) {\n          handled = navigateRight();\n        } else if (e.which == keyCode.UP) {\n          handled = navigateUp();\n        } else if (e.which == keyCode.DOWN) {\n          handled = navigateDown();\n        } else if (e.which == keyCode.TAB) {\n          handled = navigateNext();\n        } else if (e.which == keyCode.ENTER) {\n          if (options.editable) {\n            if (currentEditor) {\n              // adding new row\n              if (activeRow === getDataLength()) {\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()) {\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey) {\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled) {\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n      // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n      // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {}\n    }\n  }\n\n  function handleClick(e) {\n    if (!currentEditor) {\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || (0, _jquery2.default)(e.target).hasClass('slick-cell')) {\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onClick, { row: cell.row, cell: cell.cell, grid: self }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)) {\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()) {\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n    if ($cell.length === 0) {\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null) {\n      return;\n    }\n\n    trigger(self.onContextMenu, { grid: self }, e);\n  }\n\n  function handleDblClick(e) {\n    var cell = getCellFromEvent(e);\n    if (!cell || currentEditor !== null && activeRow == cell.row && activeCell == cell.cell) {\n      return;\n    }\n\n    trigger(self.onDblClick, { row: cell.row, cell: cell.cell, grid: self }, e);\n    if (e.isImmediatePropagationStopped()) {\n      return;\n    }\n\n    if (options.editable) {\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e) {\n    trigger(self.onHeaderMouseEnter, {\n      'column': (0, _jquery2.default)(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e) {\n    trigger(self.onHeaderMouseLeave, {\n      'column': (0, _jquery2.default)(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e) {\n    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    trigger(self.onHeaderContextMenu, { column: column, grid: self }, e);\n  }\n\n  function handleHeaderClick(e) {\n    var $header = (0, _jquery2.default)(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    if (column) {\n      trigger(self.onHeaderClick, { column: column, grid: self }, e);\n    }\n  }\n\n  function handleMouseEnter(e) {\n    trigger(self.onMouseEnter, { grid: self }, e);\n  }\n\n  function handleMouseLeave(e) {\n    trigger(self.onMouseLeave, { grid: self }, e);\n  }\n\n  function cellExists(row, cell) {\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y) {\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++) {\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0) {\n      cell = 0;\n    }\n\n    return { row: row, cell: cell - 1 };\n  }\n\n  function getCellFromNode(cellNode) {\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls) {\n      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode) {\n    for (var row in rowsCache) {\n      if (rowsCache[row].rowNode === rowNode) {\n        return row | 0;\n      }\n    }\n\n    return null;\n  }\n\n  function getCellFromEvent(e) {\n    var $cell = (0, _jquery2.default)(e.target).closest('.slick-cell', $canvas);\n    if (!$cell.length) {\n      return null;\n    }\n\n    var row = getRowFromNode($cell[0].parentNode);\n    var cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null) {\n      return null;\n    } else {\n      return {\n        'row': row,\n        'cell': cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell) {\n    if (!cellExists(row, cell)) {\n      return null;\n    }\n\n    var y1 = getRowTop(row);\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++) {\n      x1 += columns[i].width;\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell() {\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus() {\n    if (tabbingDirection == -1) {\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging) {\n    scrollRowIntoView(row, doPaging);\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n        right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n        scrollRight = scrollLeft + viewportW;\n\n    if (left < scrollLeft) {\n      $viewport.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight) {\n      $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode) {\n    if (activeCellNode !== null) {\n      makeActiveCellNormal();\n      (0, _jquery2.default)(activeCellNode).removeClass('active');\n      if (rowsCache[activeRow]) {\n        (0, _jquery2.default)(rowsCache[activeRow].rowNode).removeClass('active');\n      }\n    }\n\n    var activeCellChanged = activeCellNode !== newCell;\n    activeCellNode = newCell;\n\n    if (activeCellNode != null) {\n      activeRow = getRowFromNode(activeCellNode.parentNode);\n      activeCell = activePosX = getCellFromNode(activeCellNode);\n\n      if (opt_editMode == null) {\n        opt_editMode = activeRow == getDataLength() || options.autoEdit;\n      }\n\n      (0, _jquery2.default)(activeCellNode).addClass('active');\n      (0, _jquery2.default)(rowsCache[activeRow].rowNode).addClass('active');\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)) {\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading) {\n          h_editorLoader = setTimeout(function () {\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged) {\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection() {\n    if (document.selection && document.selection.empty) {\n      try {\n        // IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {}\n    } else if (window.getSelection) {\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges) {\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell) {\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)) {\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength) {\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)) {\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal() {\n    if (!currentEditor) {\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, { editor: currentEditor, grid: self });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode) {\n      var d = getDataItem(activeRow);\n      (0, _jquery2.default)(activeCellNode).removeClass('editable invalid');\n      if (d) {\n        var column = columns[activeCell];\n        var formatter = getFormatter(activeRow, column);\n        activeCellNode.innerHTML = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)) {\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor) {\n    if (!activeCellNode) {\n      return;\n    }\n    if (!options.editable) {\n      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)) {\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef,\n      grid: self\n    }) === false) {\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    (0, _jquery2.default)(activeCellNode).addClass('editable');\n\n    var useEditor = editor || getEditor(activeRow, activeCell);\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor && !useEditor.suppressClearOnEdit) {\n      activeCellNode.innerHTML = '';\n    }\n\n    currentEditor = new useEditor({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item) {\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position) {\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus() {\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()) {\n      setFocus();\n      if (options.autoEdit) {\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus() {\n    if (getEditorLock().cancelCurrentEdit()) {\n      setFocus();\n    }\n  }\n\n  function absBox(elem) {\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: (0, _jquery2.default)(elem).outerWidth(),\n      height: (0, _jquery2.default)(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body) {\n      if (elem == null) break;\n\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && (0, _jquery2.default)(elem).css('overflowY') != 'visible') {\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && (0, _jquery2.default)(elem).css('overflowX') != 'visible') {\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent) {\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition() {\n    return absBox(activeCellNode);\n  }\n\n  function getGridPosition() {\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange() {\n    if (!activeCellNode) {\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, { grid: self });\n\n    if (currentEditor) {\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide) {\n        if (!cellBox.visible) {\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position) {\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor() {\n    return currentEditor;\n  }\n\n  function getActiveCell() {\n    if (!activeCellNode) {\n      return null;\n    } else {\n      return { row: activeRow, cell: activeCell, grid: self };\n    }\n  }\n\n  function getActiveCellNode() {\n    return activeCellNode;\n  }\n\n  function scrollRowIntoView(row, doPaging) {\n    var rowAtTop = row * options.rowHeight;\n    var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n    // need to page down?\n    if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset) {\n      scrollTo(doPaging ? rowAtTop : rowAtBottom);\n      render();\n    }\n    // or page up?\n    else if (row * options.rowHeight < scrollTop + offset) {\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n  }\n\n  function scrollRowToTop(row) {\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir) {\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null) {\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew) {\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0) {\n        row = 0;\n      }\n\n      var cell = 0,\n          prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX) {\n        if (canCellBeActive(row, cell)) {\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null) {\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown() {\n    scrollPage(1);\n  }\n\n  function navigatePageUp() {\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell) {\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns) {\n      return 1;\n    }\n\n    var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n    var colspan = columnData && columnData.colspan;\n    if (colspan === '*') {\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row) {\n    var cell = 0;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row) {\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length) {\n      if (canCellBeActive(row, cell)) {\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX) {\n    if (cell >= columns.length) {\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    } while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length) {\n      return {\n        'row': row,\n        'cell': cell,\n        'posX': cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX) {\n    if (cell <= 0) {\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell) {\n      return null;\n    }\n\n    var prev = {\n      'row': row,\n      'cell': firstFocusableCell,\n      'posX': firstFocusableCell\n    };\n    var pos;\n    while (true) {\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos) {\n        return null;\n      }\n      if (pos.cell >= cell) {\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX) {\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true) {\n      if (++row >= dataLengthIncludingAddNew) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX) {\n    var prevCell;\n    while (true) {\n      if (--row < 0) {\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX) {\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)) {\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)) {\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos) {\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew) {\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null) {\n        return {\n          'row': row,\n          'cell': firstFocusableCell,\n          'posX': firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX) {\n    if (row == null && cell == null) {\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)) {\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos) {\n      pos = gotoLeft(row, cell, posX);\n      if (pos) {\n        break;\n      }\n      if (--row < 0) {\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null) {\n        pos = {\n          'row': row,\n          'cell': lastSelectableCell,\n          'posX': lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight() {\n    return navigate('right');\n  }\n\n  function navigateLeft() {\n    return navigate('left');\n  }\n\n  function navigateDown() {\n    return navigate('down');\n  }\n\n  function navigateUp() {\n    return navigate('up');\n  }\n\n  function navigateNext() {\n    return navigate('next');\n  }\n\n  function navigatePrev() {\n    return navigate('prev');\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir) {\n    if (!options.enableCellNavigation) {\n      return false;\n    }\n\n    if (!activeCellNode && dir != 'prev' && dir != 'next') {\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      'up': -1,\n      'down': 1,\n      'left': -1,\n      'right': 1,\n      'prev': -1,\n      'next': 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      'up': gotoUp,\n      'down': gotoDown,\n      'left': gotoLeft,\n      'right': gotoRight,\n      'prev': gotoPrev,\n      'next': gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos) {\n      var isAddNewRow = pos.row == getDataLength();\n      scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell) {\n    if (rowsCache[row]) {\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell) {\n    if (!initialized) {\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return;\n    }\n\n    if (!options.enableCellNavigation) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell) {\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === 'boolean') {\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean') {\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean') {\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell) {\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0) {\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === 'boolean') {\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === 'boolean') {\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit) {\n    if (!initialized) {\n      return;\n    }\n    if (!canCellBeActive(row, cell)) {\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()) {\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || row === getDataLength() || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor) {\n      setFocus();\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit() {\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor) {\n      if (currentEditor.isValueChanged()) {\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid) {\n          if (activeRow < getDataLength()) {\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function execute() {\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              },\n              undo: function undo() {\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              }\n            };\n\n            if (options.editCommandHandler) {\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, { item: newItem, column: column, grid: self });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          (0, _jquery2.default)(activeCellNode).removeClass('invalid');\n          (0, _jquery2.default)(activeCellNode).width(); // force layout\n          (0, _jquery2.default)(activeCellNode).addClass('invalid');\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column,\n            grid: self\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit() {\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows) {\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++) {\n      ranges.push(new _slick2.default.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows() {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows) {\n    if (!selectionModel) {\n      throw 'Selection model is not set';\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function () {\n    var s = '';\n\n    s += '\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered;\n    s += '\\n' + 'counter_rows_removed:  ' + counter_rows_removed;\n    s += '\\n' + 'renderedRows:  ' + renderedRows;\n    s += '\\n' + 'numVisibleRows:  ' + numVisibleRows;\n    s += '\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight;\n    s += '\\n' + 'n(umber of pages):  ' + n;\n    s += '\\n' + '(current) page:  ' + page;\n    s += '\\n' + 'page height (ph):  ' + ph;\n    s += '\\n' + 'vScrollDir:  ' + vScrollDir;\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function (expr) {\n    return eval(expr);\n  };\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  _jquery2.default.extend(this, {\n    'slickGridVersion': '2.2.4',\n\n    // Events\n    'onScroll': new _slick2.default.Event(),\n    'onSort': new _slick2.default.Event(),\n    'onHeaderMouseEnter': new _slick2.default.Event(),\n    'onHeaderMouseLeave': new _slick2.default.Event(),\n    'onHeaderContextMenu': new _slick2.default.Event(),\n    'onHeaderClick': new _slick2.default.Event(),\n    'onHeaderCellRendered': new _slick2.default.Event(),\n    'onBeforeHeaderCellDestroy': new _slick2.default.Event(),\n    'onHeaderRowCellRendered': new _slick2.default.Event(),\n    'onFooterRowCellRendered': new _slick2.default.Event(),\n    'onBeforeHeaderRowCellDestroy': new _slick2.default.Event(),\n    'onBeforeFooterRowCellDestroy': new _slick2.default.Event(),\n    'onMouseEnter': new _slick2.default.Event(),\n    'onMouseLeave': new _slick2.default.Event(),\n    'onClick': new _slick2.default.Event(),\n    'onDblClick': new _slick2.default.Event(),\n    'onContextMenu': new _slick2.default.Event(),\n    'onKeyDown': new _slick2.default.Event(),\n    'onAddNewRow': new _slick2.default.Event(),\n    'onValidationError': new _slick2.default.Event(),\n    'onViewportChanged': new _slick2.default.Event(),\n    'onColumnsReordered': new _slick2.default.Event(),\n    'onColumnsResized': new _slick2.default.Event(),\n    'onCellChange': new _slick2.default.Event(),\n    'onBeforeEditCell': new _slick2.default.Event(),\n    'onBeforeCellEditorDestroy': new _slick2.default.Event(),\n    'onBeforeDestroy': new _slick2.default.Event(),\n    'onActiveCellChanged': new _slick2.default.Event(),\n    'onActiveCellPositionChanged': new _slick2.default.Event(),\n    'onDragInit': new _slick2.default.Event(),\n    'onDragStart': new _slick2.default.Event(),\n    'onDrag': new _slick2.default.Event(),\n    'onDragEnd': new _slick2.default.Event(),\n    'onSelectedRowsChanged': new _slick2.default.Event(),\n    'onCellCssStylesChanged': new _slick2.default.Event(),\n\n    // Methods\n    'registerPlugin': registerPlugin,\n    'unregisterPlugin': unregisterPlugin,\n    'getColumns': getColumns,\n    'setColumns': setColumns,\n    'getColumnIndex': getColumnIndex,\n    'updateColumnHeader': updateColumnHeader,\n    'setSortColumn': setSortColumn,\n    'setSortColumns': setSortColumns,\n    'getSortColumns': getSortColumns,\n    'autosizeColumns': autosizeColumns,\n    'getOptions': getOptions,\n    'setOptions': setOptions,\n    'getData': getData,\n    'getDataLength': getDataLength,\n    'getDataItem': getDataItem,\n    'setData': setData,\n    'getSelectionModel': getSelectionModel,\n    'setSelectionModel': setSelectionModel,\n    'getSelectedRows': getSelectedRows,\n    'setSelectedRows': setSelectedRows,\n    'getContainerNode': getContainerNode,\n\n    'render': render,\n    'invalidate': invalidate,\n    'invalidateRow': invalidateRow,\n    'invalidateRows': invalidateRows,\n    'invalidateAllRows': invalidateAllRows,\n    'updateCell': updateCell,\n    'updateRow': updateRow,\n    'getViewport': getVisibleRange,\n    'getRenderedRange': getRenderedRange,\n    'resizeCanvas': resizeCanvas,\n    'updateRowCount': updateRowCount,\n    'scrollRowIntoView': scrollRowIntoView,\n    'scrollRowToTop': scrollRowToTop,\n    'scrollCellIntoView': scrollCellIntoView,\n    'getCanvasNode': getCanvasNode,\n    'focus': setFocus,\n\n    'getCellFromPoint': getCellFromPoint,\n    'getCellFromEvent': getCellFromEvent,\n    'getActiveCell': getActiveCell,\n    'setActiveCell': setActiveCell,\n    'getActiveCellNode': getActiveCellNode,\n    'getActiveCellPosition': getActiveCellPosition,\n    'resetActiveCell': resetActiveCell,\n    'editActiveCell': makeActiveCellEditable,\n    'getCellEditor': getCellEditor,\n    'getCellNode': getCellNode,\n    'getCellNodeBox': getCellNodeBox,\n    'canCellBeSelected': canCellBeSelected,\n    'canCellBeActive': canCellBeActive,\n    'navigatePrev': navigatePrev,\n    'navigateNext': navigateNext,\n    'navigateUp': navigateUp,\n    'navigateDown': navigateDown,\n    'navigateLeft': navigateLeft,\n    'navigateRight': navigateRight,\n    'navigatePageUp': navigatePageUp,\n    'navigatePageDown': navigatePageDown,\n    'gotoCell': gotoCell,\n    'getTopPanel': getTopPanel,\n    'setTopPanelVisibility': setTopPanelVisibility,\n    'setHeaderRowVisibility': setHeaderRowVisibility,\n    'getHeaderRow': getHeaderRow,\n    'getHeaderRowColumn': getHeaderRowColumn,\n    'setFooterRowVisibility': setFooterRowVisibility,\n    'getFooterRow': getFooterRow,\n    'getFooterRowColumn': getFooterRowColumn,\n    'getGridPosition': getGridPosition,\n    'flashCell': flashCell,\n    'addCellCssStyles': addCellCssStyles,\n    'setCellCssStyles': setCellCssStyles,\n    'removeCellCssStyles': removeCellCssStyles,\n    'getCellCssStyles': getCellCssStyles,\n\n    'init': finishInitialization,\n    'destroy': destroy,\n\n    // IEditor implementation\n    'getEditorLock': getEditorLock,\n    'getEditController': getEditController\n  });\n\n  init();\n}\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\nmodule.exports = require(\"flatpickr\");\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__(5);\n\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// slick.es6.min.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 31);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap a9fe02102c53c51f9d34","import $ from 'jquery';\n\n/** *\n * Contains core SlickGrid classes.\n * @module Core\n * @namespace Slick\n */\nconst Slick = {\n  Event: Event,\n  EventData: EventData,\n  EventHandler: EventHandler,\n  Range: Range,\n  NonDataRow: NonDataItem,\n  Group: Group,\n  GroupTotals: GroupTotals,\n  EditorLock: EditorLock,\n  /** *\n   * A global singleton editor lock.\n   * @class GlobalEditorLock\n   * @static\n   * @constructor\n   */\n  GlobalEditorLock: new EditorLock(),\n  TreeColumns: TreeColumns,\n\n  keyCode: {\n    BACKSPACE: 8,\n    DELETE: 46,\n    DOWN: 40,\n    END: 35,\n    ENTER: 13,\n    ESCAPE: 27,\n    HOME: 36,\n    INSERT: 45,\n    LEFT: 37,\n    PAGE_DOWN: 34,\n    PAGE_UP: 33,\n    RIGHT: 39,\n    TAB: 9,\n    UP: 38\n  }\n};\n\nexport default Slick;\n\n/***\n * An event object for passing data to event handlers and letting them control propagation.\n * <p>This is pretty much identical to how W3C and jQuery implement events.</p>\n * @class EventData\n * @constructor\n */\nfunction EventData(){\n  var isPropagationStopped = false;\n  var isImmediatePropagationStopped = false;\n\n  /***\n   * Stops event from propagating up the DOM tree.\n   * @method stopPropagation\n   */\n  this.stopPropagation = function(){\n    isPropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopPropagation was called on this event object.\n   * @method isPropagationStopped\n   * @return {Boolean}\n   */\n  this.isPropagationStopped = function(){\n    return isPropagationStopped;\n  };\n\n  /***\n   * Prevents the rest of the handlers from being executed.\n   * @method stopImmediatePropagation\n   */\n  this.stopImmediatePropagation = function(){\n    isImmediatePropagationStopped = true;\n  };\n\n  /***\n   * Returns whether stopImmediatePropagation was called on this event object.\\\n   * @method isImmediatePropagationStopped\n   * @return {Boolean}\n   */\n  this.isImmediatePropagationStopped = function(){\n    return isImmediatePropagationStopped;\n  };\n}\n\n/***\n * A simple publisher-subscriber implementation.\n * @class Event\n * @constructor\n */\nfunction Event(){\n  var handlers = [];\n\n  /***\n   * Adds an event handler to be called when the event is fired.\n   * <p>Event handler will receive two arguments - an <code>EventData</code> and the <code>data</code>\n   * object the event was fired with.<p>\n   * @method subscribe\n   * @param fn {Function} Event handler.\n   */\n  this.subscribe = function(fn){\n    handlers.push(fn);\n  };\n\n  /***\n   * Removes an event handler added with <code>subscribe(fn)</code>.\n   * @method unsubscribe\n   * @param fn {Function} Event handler to be removed.\n   */\n  this.unsubscribe = function(fn){\n    for (var i = handlers.length - 1; i >= 0; i--){\n      if (handlers[i] === fn){\n        handlers.splice(i, 1);\n      }\n    }\n  };\n\n  /***\n   * Fires an event notifying all subscribers.\n   * @method notify\n   * @param args {Object} Additional data object to be passed to all handlers.\n   * @param e {EventData}\n   *      Optional.\n   *      An <code>EventData</code> object to be passed to all handlers.\n   *      For DOM events, an existing W3C/jQuery event object can be passed in.\n   * @param scope {Object}\n   *      Optional.\n   *      The scope (\"this\") within which the handler will be executed.\n   *      If not specified, the scope will be set to the <code>Event</code> instance.\n   */\n  this.notify = function(args, e, scope){\n    e = e || new EventData();\n    scope = scope || this;\n\n    var returnValue;\n    for (var i = 0; i < handlers.length && !(e.isPropagationStopped() || e.isImmediatePropagationStopped()); i++){\n      returnValue = handlers[i].call(scope, e, args);\n    }\n\n    return returnValue;\n  };\n}\n\nfunction EventHandler(){\n  var handlers = [];\n\n  this.subscribe = function(event, handler){\n    handlers.push({\n      event: event,\n      handler: handler\n    });\n    event.subscribe(handler);\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribe = function(event, handler){\n    var i = handlers.length;\n    while (i--){\n      if (handlers[i].event === event && handlers[i].handler === handler){\n        handlers.splice(i, 1);\n        event.unsubscribe(handler);\n        return;\n      }\n    }\n\n    return this; // allow chaining\n  };\n\n  this.unsubscribeAll = function(){\n    var i = handlers.length;\n    while (i--){\n      handlers[i].event.unsubscribe(handlers[i].handler);\n    }\n    handlers = [];\n\n    return this; // allow chaining\n  };\n}\n\n/***\n * A structure containing a range of cells.\n * @class Range\n * @constructor\n * @param fromRow {Integer} Starting row.\n * @param fromCell {Integer} Starting cell.\n * @param toRow {Integer} Optional. Ending row. Defaults to <code>fromRow</code>.\n * @param toCell {Integer} Optional. Ending cell. Defaults to <code>fromCell</code>.\n */\nfunction Range(fromRow, fromCell, toRow, toCell){\n  if (toRow === undefined && toCell === undefined){\n    toRow = fromRow;\n    toCell = fromCell;\n  }\n\n  /***\n   * @property fromRow\n   * @type {Integer}\n   */\n  this.fromRow = Math.min(fromRow, toRow);\n\n  /***\n   * @property fromCell\n   * @type {Integer}\n   */\n  this.fromCell = Math.min(fromCell, toCell);\n\n  /***\n   * @property toRow\n   * @type {Integer}\n   */\n  this.toRow = Math.max(fromRow, toRow);\n\n  /***\n   * @property toCell\n   * @type {Integer}\n   */\n  this.toCell = Math.max(fromCell, toCell);\n\n  /***\n   * Returns whether a range represents a single row.\n   * @method isSingleRow\n   * @return {Boolean}\n   */\n  this.isSingleRow = function(){\n    return this.fromRow == this.toRow;\n  };\n\n  /***\n   * Returns whether a range represents a single cell.\n   * @method isSingleCell\n   * @return {Boolean}\n   */\n  this.isSingleCell = function(){\n    return this.fromRow == this.toRow && this.fromCell == this.toCell;\n  };\n\n  /***\n   * Returns whether a range contains a given cell.\n   * @method contains\n   * @param row {Integer}\n   * @param cell {Integer}\n   * @return {Boolean}\n   */\n  this.contains = function(row, cell){\n    return row >= this.fromRow && row <= this.toRow && cell >= this.fromCell && cell <= this.toCell;\n  };\n\n  /***\n   * Returns a readable representation of a range.\n   * @method toString\n   * @return {String}\n   */\n  this.toString = function(){\n    if (this.isSingleCell()){\n      return '(' + this.fromRow + ':' + this.fromCell + ')';\n    } else {\n      return '(' + this.fromRow + ':' + this.fromCell + ' - ' + this.toRow + ':' + this.toCell + ')';\n    }\n  };\n}\n\n/***\n * A base class that all special / non-data rows (like Group and GroupTotals) derive from.\n * @class NonDataItem\n * @constructor\n */\nfunction NonDataItem(){\n  this.__nonDataRow = true;\n}\n\n/***\n * Information about a group of rows.\n * @class Group\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction Group(){\n  this.__group = true;\n\n  /**\n   * Grouping level, starting with 0.\n   * @property level\n   * @type {Number}\n   */\n  this.level = 0;\n\n  /***\n   * Number of rows in the group.\n   * @property count\n   * @type {Integer}\n   */\n  this.count = 0;\n\n  /***\n   * Grouping value.\n   * @property value\n   * @type {Object}\n   */\n  this.value = null;\n\n  /***\n   * Formatted display value of the group.\n   * @property title\n   * @type {String}\n   */\n  this.title = null;\n\n  /***\n   * Whether a group is collapsed.\n   * @property collapsed\n   * @type {Boolean}\n   */\n  this.collapsed = false;\n\n  /***\n   * GroupTotals, if any.\n   * @property totals\n   * @type {GroupTotals}\n   */\n  this.totals = null;\n\n  /**\n   * Rows that are part of the group.\n   * @property rows\n   * @type {Array}\n   */\n  this.rows = [];\n\n  /**\n   * Sub-groups that are part of the group.\n   * @property groups\n   * @type {Array}\n   */\n  this.groups = null;\n\n  /**\n   * A unique key used to identify the group.  This key can be used in calls to DataView\n   * collapseGroup() or expandGroup().\n   * @property groupingKey\n   * @type {Object}\n   */\n  this.groupingKey = null;\n}\n\nGroup.prototype = new NonDataItem();\n\n/***\n * Compares two Group instances.\n * @method equals\n * @return {Boolean}\n * @param group {Group} Group instance to compare to.\n */\nGroup.prototype.equals = function(group){\n  return this.value === group.value && this.count === group.count && this.collapsed === group.collapsed && this.title === group.title;\n};\n\n/***\n * Information about group totals.\n * An instance of GroupTotals will be created for each totals row and passed to the aggregators\n * so that they can store arbitrary data in it.  That data can later be accessed by group totals\n * formatters during the display.\n * @class GroupTotals\n * @extends Slick.NonDataItem\n * @constructor\n */\nfunction GroupTotals(){\n  this.__groupTotals = true;\n\n  /***\n   * Parent Group.\n   * @param group\n   * @type {Group}\n   */\n  this.group = null;\n\n  /***\n   * Whether the totals have been fully initialized / calculated.\n   * Will be set to false for lazy-calculated group totals.\n   * @param initialized\n   * @type {Boolean}\n   */\n  this.initialized = false;\n}\n\nGroupTotals.prototype = new NonDataItem();\n\n/***\n * A locking helper to track the active edit controller and ensure that only a single controller\n * can be active at a time.  This prevents a whole class of state and validation synchronization\n * issues.  An edit controller (such as SlickGrid) can query if an active edit is in progress\n * and attempt a commit or cancel before proceeding.\n * @class EditorLock\n * @constructor\n */\nfunction EditorLock(){\n  var activeEditController = null;\n\n  /***\n   * Returns true if a specified edit controller is active (has the edit lock).\n   * If the parameter is not specified, returns true if any edit controller is active.\n   * @method isActive\n   * @param editController {EditController}\n   * @return {Boolean}\n   */\n  this.isActive = function(editController){\n    return (editController ? activeEditController === editController : activeEditController !== null);\n  };\n\n  /***\n   * Sets the specified edit controller as the active edit controller (acquire edit lock).\n   * If another edit controller is already active, and exception will be thrown.\n   * @method activate\n   * @param editController {EditController} edit controller acquiring the lock\n   */\n  this.activate = function(editController){\n    if (editController === activeEditController){ // already activated?\n      return;\n    }\n    if (activeEditController !== null){\n      throw 'SlickGrid.EditorLock.activate: an editController is still active, can\\'t activate another editController';\n    }\n    if (!editController.commitCurrentEdit){\n      throw 'SlickGrid.EditorLock.activate: editController must implement .commitCurrentEdit()';\n    }\n    if (!editController.cancelCurrentEdit){\n      throw 'SlickGrid.EditorLock.activate: editController must implement .cancelCurrentEdit()';\n    }\n    activeEditController = editController;\n  };\n\n  /***\n   * Unsets the specified edit controller as the active edit controller (release edit lock).\n   * If the specified edit controller is not the active one, an exception will be thrown.\n   * @method deactivate\n   * @param editController {EditController} edit controller releasing the lock\n   */\n  this.deactivate = function(editController){\n    if (activeEditController !== editController){\n      throw 'SlickGrid.EditorLock.deactivate: specified editController is not the currently active one';\n    }\n    activeEditController = null;\n  };\n\n  /***\n   * Attempts to commit the current edit by calling \"commitCurrentEdit\" method on the active edit\n   * controller and returns whether the commit attempt was successful (commit may fail due to validation\n   * errors, etc.).  Edit controller's \"commitCurrentEdit\" must return true if the commit has succeeded\n   * and false otherwise.  If no edit controller is active, returns true.\n   * @method commitCurrentEdit\n   * @return {Boolean}\n   */\n  this.commitCurrentEdit = function(){\n    return (activeEditController ? activeEditController.commitCurrentEdit() : true);\n  };\n\n  /***\n   * Attempts to cancel the current edit by calling \"cancelCurrentEdit\" method on the active edit\n   * controller and returns whether the edit was successfully cancelled.  If no edit controller is\n   * active, returns true.\n   * @method cancelCurrentEdit\n   * @return {Boolean}\n   */\n  this.cancelCurrentEdit = function cancelCurrentEdit(){\n    return (activeEditController ? activeEditController.cancelCurrentEdit() : true);\n  };\n}\n\n/**\n *\n * @param {Array} treeColumns Array com levels of columns\n * @returns {{hasDepth: 'hasDepth', getTreeColumns: 'getTreeColumns', extractColumns: 'extractColumns', getDepth: 'getDepth', getColumnsInDepth: 'getColumnsInDepth', getColumnsInGroup: 'getColumnsInGroup', visibleColumns: 'visibleColumns', filter: 'filter', reOrder: reOrder}}\n * @constructor\n */\nfunction TreeColumns(treeColumns){\n\n  var columnsById = {};\n\n  function init(){\n    mapToId(treeColumns);\n  }\n\n  function mapToId(columns){\n    columns.forEach(function(column){\n      columnsById[column.id] = column;\n\n      if (column.columns) mapToId(column.columns);\n    });\n  }\n\n  function filter(node, condition){\n\n    return node.filter(function(column){\n\n      var valid = condition.call(column);\n\n      if (valid && column.columns) column.columns = filter(column.columns, condition);\n\n      return valid && (!column.columns || column.columns.length);\n    });\n\n  }\n\n  function sort(columns, grid){\n    columns.sort(function(a, b){\n      var indexA = getOrDefault(grid.getColumnIndex(a.id)),\n        indexB = getOrDefault(grid.getColumnIndex(b.id));\n\n      return indexA - indexB;\n    })\n      .forEach(function(column){\n        if (column.columns) sort(column.columns, grid);\n      });\n  }\n\n  function getOrDefault(value){\n    return typeof value === 'undefined' ? -1 : value;\n  }\n\n  function getDepth(node){\n    if (node.length) for (var i in node)\n      return getDepth(node[i]);\n    else if (node.columns) return 1 + getDepth(node.columns);\n    else return 1;\n  }\n\n  function getColumnsInDepth(node, depth, current){\n    var columns = [];\n    current = current || 0;\n\n    if (depth == current){\n\n      if (node.length) node.forEach(function(n){\n        if (n.columns) n.extractColumns = function(){\n          return extractColumns(n);\n        };\n      });\n\n      return node;\n    } else for (var i in node)\n      if (node[i].columns){\n        columns = columns.concat(getColumnsInDepth(node[i].columns, depth, current + 1));\n      }\n\n    return columns;\n  }\n\n  function extractColumns(node){\n    var result = [];\n\n    if (node.hasOwnProperty('length')){\n\n      for (var i = 0; i < node.length; i++)\n        result = result.concat(extractColumns(node[i]));\n\n    } else {\n\n      if (node.hasOwnProperty('columns'))\n\n        result = result.concat(extractColumns(node.columns));\n\n      else return node;\n\n    }\n\n    return result;\n  }\n\n  function cloneTreeColumns(){\n    return $.extend(true, [], treeColumns);\n  }\n\n  init();\n\n  this.hasDepth = function(){\n\n    for (var i in treeColumns)\n      if (treeColumns[i].hasOwnProperty('columns')) return true;\n\n    return false;\n  };\n\n  this.getTreeColumns = function(){\n    return treeColumns;\n  };\n\n  this.extractColumns = function(){\n    return this.hasDepth() ? extractColumns(treeColumns) : treeColumns;\n  };\n\n  this.getDepth = function(){\n    return getDepth(treeColumns);\n  };\n\n  this.getColumnsInDepth = function(depth){\n    return getColumnsInDepth(treeColumns, depth);\n  };\n\n  this.getColumnsInGroup = function(groups){\n    return extractColumns(groups);\n  };\n\n  this.visibleColumns = function(){\n    return filter(cloneTreeColumns(), function(){\n      return this.visible;\n    });\n  };\n\n  this.filter = function(condition){\n    return filter(cloneTreeColumns(), condition);\n  };\n\n  this.reOrder = function(grid){\n    return sort(treeColumns, grid);\n  };\n\n  this.getById = function(id){\n    return columnsById[id];\n  };\n\n  this.getInIds = function(ids){\n    return ids.map(function(id){\n      return columnsById[id];\n    });\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.core.js","module.exports = require(\"jquery\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"jquery\"\n// module id = 1\n// module chunks = 0","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default CellRangeDecorator;\n\n/** *\n * Displays an overlay on top of a given cell range.\n *\n * TODO:\n * Currently, it blocks mouse events to DOM nodes behind it.\n * Use FF and WebKit-specific 'pointer-events' CSS style, or some kind of event forwarding.\n * Could also construct the borders separately using 4 individual DIVs.\n *\n * @param {Grid} grid\n * @param {Object} options\n */\nfunction CellRangeDecorator(grid, options){\n  let _elem;\n  const _defaults = {\n    selectionCssClass: 'slick-range-decorator',\n    selectionCss: {\n      zIndex: '9999',\n      border: '2px dashed red'\n    }\n  };\n\n  options = Object.assign({}, _defaults, options);\n\n  function show(range){\n    if (!_elem){\n      _elem = $('<div></div>', {css: options.selectionCss})\n        .addClass(options.selectionCssClass)\n        .css('position', 'absolute')\n        .appendTo(grid.getCanvasNode());\n    }\n\n    const from = grid.getCellNodeBox(range.fromRow, range.fromCell);\n    const to = grid.getCellNodeBox(range.toRow, range.toCell);\n\n    _elem.css({\n      top: from.top - 1,\n      left: from.left - 1,\n      height: to.bottom - from.top - 2,\n      width: to.right - from.left - 2\n    });\n\n    return _elem;\n  }\n\n  function hide(){\n    if (_elem){\n      _elem.remove();\n      _elem = null;\n    }\n  }\n\n  Object.assign(this, {\n    show,\n    hide\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangedecorator/slick.cellrangedecorator.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\nimport CellRangeDecorator from '../slick.cellrangedecorator/slick.cellrangedecorator';\n\nexport default CellRangeSelector;\n\nfunction CellRangeSelector(options){\n  let _grid;\n  let _canvas;\n  let _dragging;\n  let _decorator;\n  let _range = {};\n\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    selectionCss: {\n      // 'border': '2px dashed blue'\n    }\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _decorator = new CellRangeDecorator(grid, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler\n      .subscribe(_grid.onDragInit, handleDragInit)\n      .subscribe(_grid.onDragStart, handleDragStart)\n      .subscribe(_grid.onDrag, handleDrag)\n      .subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd){\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(jqueryEvent, interactEvent){\n    const cell = _grid.getCellFromEvent(interactEvent.originalEvent);\n    if (_self.onBeforeCellRangeSelected.notify(cell) !== false){\n      if (_grid.canCellBeSelected(cell.row, cell.cell)){\n        _dragging = true;\n        // jqueryEvent.stopImmediatePropagation();\n      }\n    }\n    if (!_dragging){\n      return;\n    }\n\n    _grid.focus();\n\n    const start = _grid.getCellFromPoint(\n      interactEvent.x0 - $(_canvas).offset().left,\n      interactEvent.y0 - $(_canvas).offset().top\n    );\n\n    _range = {\n      start,\n      end: {}\n    };\n\n    return _decorator.show(new Slick.Range(start.row, start.cell));\n  }\n\n  function handleDrag(e, interactEvent){\n    if (!_dragging){\n      return;\n    }\n    // e.stopImmediatePropagation();\n\n    const end = _grid.getCellFromPoint(\n      interactEvent.pageX - $(_canvas).offset().left,\n      interactEvent.pageY - $(_canvas).offset().top);\n\n    if (!_grid.canCellBeSelected(end.row, end.cell)){\n      return;\n    }\n\n    _range.end = end;\n    _decorator.show(new Slick.Range(_range.start.row, _range.start.cell, end.row, end.cell));\n  }\n\n  function handleDragEnd(e){\n    if (!_dragging){\n      return;\n    }\n\n    _dragging = false;\n    // e.stopImmediatePropagation();\n\n    _decorator.hide();\n    _self.onCellRangeSelected.notify({\n      range: new Slick.Range(\n        _range.start.row,\n        _range.start.cell,\n        _range.end.row,\n        _range.end.cell\n      )\n    });\n    _range = {};\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    onBeforeCellRangeSelected: new Slick.Event(),\n    onCellRangeSelected: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangeselector/slick.cellrangeselector.js","module.exports = require(\"interactjs\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"interactjs\"\n// module id = 4\n// module chunks = 0","import Slick from './slick.core';\nimport Editors from './slick.editors';\nimport Data from './slick.dataview';\nimport Grid from './slick.grid';\nimport FrozenGrid from './slick-frozen.grid';\nimport Formatters from './slick.formatters';\nimport * as Plugins from '../plugins';\n\nexport {\n  Slick,\n  Editors,\n  Formatters,\n  Data,\n  Grid,\n  FrozenGrid,\n  Plugins\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/index.js","export AutoTooltips from './slick.autotooltips';\nexport CellCopyManager from './slick.cellcopymanager';\nexport CellRangeDecorator from './slick.cellrangedecorator';\nexport CellRangeSelector from './slick.cellrangeselector';\nexport CellSelectionModel from './slick.cellselectionmodel';\nexport CheckboxSelectColumn from './slick.checkboxselectcolumn';\nexport HeaderButtons from './slick.headerbuttons';\nexport HeaderMenu from './slick.headermenu';\nexport RowMoveManager from './slick.rowmovemanager';\nexport RowSelectionModel from './slick.rowselectionmodel';\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/index.js","import AutoTooltips from './slick.autotooltips';\nexport default AutoTooltips;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.autotooltips/index.js","import $ from 'jquery';\n\nexport default AutoTooltips;\n\n  /**\n   * AutoTooltips plugin to show/hide tooltips when columns are too narrow to fit content.\n   * @constructor\n   * @param {boolean} [options.enableForCells=true]        - Enable tooltip for grid cells\n   * @param {boolean} [options.enableForHeaderCells=false] - Enable tooltip for header cells\n   * @param {number}  [options.maxToolTipLength=null]      - The maximum length for a tooltip\n   */\nfunction AutoTooltips(options){\n  let _grid;\n  const _self = this;\n  const _defaults = {\n    enableForCells: true,\n    enableForHeaderCells: false,\n    maxToolTipLength: null\n  };\n\n    /**\n     * Initialize plugin.\n     */\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    if (options.enableForCells) _grid.onMouseEnter.subscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.subscribe(handleHeaderMouseEnter);\n  }\n\n    /**\n     * Destroy plugin.\n     */\n  function destroy(){\n    if (options.enableForCells) _grid.onMouseEnter.unsubscribe(handleMouseEnter);\n    if (options.enableForHeaderCells) _grid.onHeaderMouseEnter.unsubscribe(handleHeaderMouseEnter);\n  }\n\n    /**\n     * Handle mouse entering grid cell to add/remove tooltip.\n     * @param {jQuery.Event} e - The event\n     */\n  function handleMouseEnter(e){\n    const cell = _grid.getCellFromEvent(e);\n    if (cell){\n      let $node = $(_grid.getCellNode(cell.row, cell.cell));\n      let text;\n      if ($node.innerWidth() < $node[0].scrollWidth){\n        text = $.trim($node.text());\n        if (options.maxToolTipLength && text.length > options.maxToolTipLength){\n          text = text.substr(0, options.maxToolTipLength - 3) + '...';\n        }\n      } else {\n        text = '';\n      }\n      $node.attr('title', text);\n    }\n  }\n\n    /**\n     * Handle mouse entering header cell to add/remove tooltip.\n     * @param {jQuery.Event} e     - The event\n     * @param {object} args.column - The column definition\n     */\n  function handleHeaderMouseEnter(e, args){\n    const column = args.column,\n      $node = $(e.target).closest('.slick-header-column');\n    if (column && !column.toolTip){\n      $node.attr('title', ($node.innerWidth() < $node[0].scrollWidth) ? column.name : '');\n    }\n  }\n\n    // Public API\n  Object.assign(this, {\n    init,\n    destroy\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.autotooltips/slick.autotooltips.js","import CellCopyManager from './slick.cellcopymanager';\nexport default CellCopyManager;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellcopymanager/index.js","import Slick from '../../src/slick.core';\nconst { keyCode } = Slick;\n\nexport default CellCopyManager;\n\nfunction CellCopyManager(){\n  var _grid;\n  var _self = this;\n  var _copiedRanges;\n\n  function init(grid){\n    _grid = grid;\n    _grid.onKeyDown.subscribe(handleKeyDown);\n  }\n\n  function destroy(){\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n  }\n\n  function handleKeyDown(e, args){\n    var ranges;\n    if (!_grid.getEditorLock().isActive()){\n      if (e.which == keyCode.ESCAPE){\n        if (_copiedRanges){\n          e.preventDefault();\n          clearCopySelection();\n          _self.onCopyCancelled.notify({ranges: _copiedRanges});\n          _copiedRanges = null;\n        }\n      }\n\n      if (e.which == 67 && (e.ctrlKey || e.metaKey)){\n        ranges = _grid.getSelectionModel().getSelectedRanges();\n        if (ranges.length != 0){\n          e.preventDefault();\n          _copiedRanges = ranges;\n          markCopySelection(ranges);\n          _self.onCopyCells.notify({ranges: ranges});\n        }\n      }\n\n      if (e.which == 86 && (e.ctrlKey || e.metaKey)){\n        if (_copiedRanges){\n          e.preventDefault();\n          clearCopySelection();\n          ranges = _grid.getSelectionModel().getSelectedRanges();\n          _self.onPasteCells.notify({from: _copiedRanges, to: ranges});\n          _copiedRanges = null;\n        }\n      }\n    }\n  }\n\n  function markCopySelection(ranges){\n    var columns = _grid.getColumns();\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        hash[j] = {};\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          hash[j][columns[k].id] = 'copied';\n        }\n      }\n    }\n    _grid.setCellCssStyles('copy-manager', hash);\n  }\n\n  function clearCopySelection(){\n    _grid.removeCellCssStyles('copy-manager');\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n    clearCopySelection,\n\n    onCopyCells: new Slick.Event(),\n    onCopyCancelled: new Slick.Event(),\n    onPasteCells: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellcopymanager/slick.cellcopymanager.js","import CellRangeDecorator from './slick.cellrangedecorator';\nexport default CellRangeDecorator;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangedecorator/index.js","import CellRangeDecorator from './slick.cellrangeselector';\nexport default CellRangeDecorator;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellrangeselector/index.js","import CellSelectionModel from './slick.cellselectionmodel';\nexport default CellSelectionModel;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellselectionmodel/index.js","import Slick from '../../src/slick.core';\nimport CellRangeSelector from '../slick.cellrangeselector/slick.cellrangeselector';\n\nexport default CellSelectionModel;\n\nfunction CellSelectionModel(options = {\n  selectActiveCell: true\n}){\n  let _grid;\n  let _canvas;\n  let _ranges = [];\n  const _self = this;\n  const _selector = new CellRangeSelector({\n    selectionCss: {\n      border: '2px solid black'\n    }\n  });\n  let _options;\n  const _defaults = {\n    selectActiveCell: true\n  };\n\n  function init(grid){\n    _options = Object.assign({}, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _grid.onActiveCellChanged.subscribe(handleActiveCellChange);\n    _grid.onKeyDown.subscribe(handleKeyDown);\n    grid.registerPlugin(_selector);\n    _selector.onCellRangeSelected.subscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.subscribe(handleBeforeCellRangeSelected);\n  }\n\n  function destroy(){\n    _grid.onActiveCellChanged.unsubscribe(handleActiveCellChange);\n    _grid.onKeyDown.unsubscribe(handleKeyDown);\n    _selector.onCellRangeSelected.unsubscribe(handleCellRangeSelected);\n    _selector.onBeforeCellRangeSelected.unsubscribe(handleBeforeCellRangeSelected);\n    _grid.unregisterPlugin(_selector);\n  }\n\n  function removeInvalidRanges(ranges){\n    const result = [];\n\n    for (let i = 0; i < ranges.length; i++){\n      const r = ranges[i];\n      if (_grid.canCellBeSelected(r.fromRow, r.fromCell) && _grid.canCellBeSelected(r.toRow, r.toCell)){\n        result.push(r);\n      }\n    }\n\n    return result;\n  }\n\n  function setSelectedRanges(ranges){\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)){\n      return;\n    }\n\n    _ranges = removeInvalidRanges(ranges);\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges(){\n    return _ranges;\n  }\n\n  function handleBeforeCellRangeSelected(e, args){\n    if (_grid.getEditorLock().isActive()){\n      e.stopPropagation();\n      return false;\n    }\n  }\n\n  function handleCellRangeSelected(e, args){\n    setSelectedRanges([args.range]);\n  }\n\n  function handleActiveCellChange(e, args){\n    if (_options.selectActiveCell && args.row != null && args.cell != null){\n      setSelectedRanges([new Slick.Range(args.row, args.cell)]);\n    }\n  }\n\n  function handleKeyDown(e){\n    /** *\n     * Кey codes\n     * 37 left\n     * 38 up\n     * 39 right\n     * 40 down\n     */\n    let ranges, last;\n    const active = _grid.getActiveCell();\n\n    if (active && e.shiftKey && !e.ctrlKey && !e.altKey &&\n      (e.which == 37 || e.which == 39 || e.which == 38 || e.which == 40)){\n      ranges = getSelectedRanges();\n      if (!ranges.length)\n        ranges.push(new Slick.Range(active.row, active.cell));\n\n      // keyboard can work with last range only\n      last = ranges.pop();\n\n      // can't handle selection out of active cell\n      if (!last.contains(active.row, active.cell))\n        last = new Slick.Range(active.row, active.cell);\n\n      let dRow = last.toRow - last.fromRow,\n        dCell = last.toCell - last.fromCell,\n        // walking direction\n        dirRow = active.row == last.fromRow ? 1 : -1,\n        dirCell = active.cell == last.fromCell ? 1 : -1;\n\n      if (e.which == 37){\n        dCell -= dirCell;\n      } else if (e.which == 39){\n        dCell += dirCell;\n      } else if (e.which == 38){\n        dRow -= dirRow;\n      } else if (e.which == 40){\n        dRow += dirRow;\n      }\n\n      // define new selection range\n      const new_last = new Slick.Range(active.row, active.cell, active.row + dirRow * dRow, active.cell + dirCell * dCell);\n      if (removeInvalidRanges([new_last]).length){\n        ranges.push(new_last);\n        const viewRow = dirRow > 0 ? new_last.toRow : new_last.fromRow;\n        const viewCell = dirCell > 0 ? new_last.toCell : new_last.fromCell;\n        _grid.scrollRowIntoView(viewRow);\n        _grid.scrollCellIntoView(viewRow, viewCell);\n      }\n      else\n        ranges.push(last);\n\n      setSelectedRanges(ranges);\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  Object.assign(this, {\n    getSelectedRanges,\n    setSelectedRanges,\n\n    init,\n    destroy,\n\n    onSelectedRangesChanged: new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.cellselectionmodel/slick.cellselectionmodel.js","import CheckboxSelectColumn from './slick.checkboxselectcolumn';\nexport default CheckboxSelectColumn;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.checkboxselectcolumn/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default CheckboxSelectColumn;\n\nfunction CheckboxSelectColumn(options){\n  let _grid;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  let _selectedRowsLookup = {};\n  const _defaults = {\n    columnId: '_checkbox_selector',\n    cssClass: null,\n    toolTip: 'Select/Deselect All',\n    width: 30\n  };\n\n  const _options = $.extend(true, {}, _defaults, options);\n\n  function init(grid){\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onSelectedRowsChanged, handleSelectedRowsChanged)\n      .subscribe(_grid.onClick, handleClick)\n      .subscribe(_grid.onHeaderClick, handleHeaderClick)\n      .subscribe(_grid.onKeyDown, handleKeyDown);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleSelectedRowsChanged(e, args){\n    let selectedRows = _grid.getSelectedRows();\n    let lookup = {}, row, i;\n    for (i = 0; i < selectedRows.length; i++){\n      row = selectedRows[i];\n      lookup[row] = true;\n      if (lookup[row] !== _selectedRowsLookup[row]){\n        _grid.invalidateRow(row);\n        delete _selectedRowsLookup[row];\n      }\n    }\n    for (i in _selectedRowsLookup){\n      _grid.invalidateRow(i);\n    }\n    _selectedRowsLookup = lookup;\n    _grid.render();\n\n    if (selectedRows.length && selectedRows.length == _grid.getDataLength()){\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox' checked='checked'>\", _options.toolTip);\n    } else {\n      _grid.updateColumnHeader(_options.columnId, \"<input type='checkbox'>\", _options.toolTip);\n    }\n  }\n\n  function handleKeyDown(e, args){\n    if (e.which == 32){\n      if (_grid.getColumns()[args.cell].id === _options.columnId){\n        // if editing, try to commit\n        if (!_grid.getEditorLock().isActive() || _grid.getEditorLock().commitCurrentEdit()){\n          toggleRowSelection(args.row);\n        }\n        e.preventDefault();\n        e.stopImmediatePropagation();\n      }\n    }\n  }\n\n  function handleClick(e, args){\n    // clicking on a row select checkbox\n    if (_grid.getColumns()[args.cell].id === _options.columnId && $(e.target).is(':checkbox')){\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()){\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      toggleRowSelection(args.row);\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function toggleRowSelection(row){\n    if (_selectedRowsLookup[row]){\n      _grid.setSelectedRows($.grep(_grid.getSelectedRows(), function(n){\n        return n != row;\n      }));\n    } else {\n      _grid.setSelectedRows(_grid.getSelectedRows().concat(row));\n    }\n  }\n\n  function handleHeaderClick(e, args){\n    if (args.column.id == _options.columnId && $(e.target).is(':checkbox')){\n      // if editing, try to commit\n      if (_grid.getEditorLock().isActive() && !_grid.getEditorLock().commitCurrentEdit()){\n        e.preventDefault();\n        e.stopImmediatePropagation();\n        return;\n      }\n\n      if ($(e.target).is(':checked')){\n        const rows = [];\n        for (let i = 0; i < _grid.getDataLength(); i++){\n          rows.push(i);\n        }\n        _grid.setSelectedRows(rows);\n      } else {\n        _grid.setSelectedRows([]);\n      }\n      e.stopPropagation();\n      e.stopImmediatePropagation();\n    }\n  }\n\n  function getColumnDefinition(){\n    return {\n      id: _options.columnId,\n      name: \"<input type='checkbox'>\",\n      toolTip: _options.toolTip,\n      field: 'sel',\n      width: _options.width,\n      resizable: false,\n      sortable: false,\n      cssClass: _options.cssClass,\n      formatter: checkboxSelectionFormatter\n    };\n  }\n\n  function checkboxSelectionFormatter(row, cell, value, columnDef, dataContext){\n    if (dataContext){\n      return _selectedRowsLookup[row]\n        ? \"<input type='checkbox' checked='checked'>\"\n        : \"<input type='checkbox'>\";\n    }\n    return null;\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    getColumnDefinition\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.checkboxselectcolumn/slick.checkboxselectcolumn.js","import HeaderButtons from './slick.headerbuttons';\nexport default HeaderButtons;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headerbuttons/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default HeaderButtons;\n/** *\n * A plugin to add custom buttons to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a custom button in a column header, extend the column definition like so:\n *\n *   var columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          buttons: [\n *              {\n *                // button options\n *              },\n *              {\n *                // button options\n *              }\n *          ]\n *       }\n *     }\n *   ];\n *\n * Available button options:\n *    cssClass:     CSS class to add to the button.\n *    image:        Relative button image path.\n *    tooltip:      Button tooltip.\n *    showOnHover:  Only show the button on hover.\n *    handler:      Button click handler.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *\n * The plugin exposes the following events:\n *    onCommand:    Fired on button click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   a CSS class to use for buttons (default 'slick-header-button')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\nfunction HeaderButtons(options){\n  var _grid;\n  var _self = this;\n  var _handler = new Slick.EventHandler();\n  var _defaults = {\n    buttonCssClass: 'slick-header-button'\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered)\n      .subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleHeaderCellRendered(e, args){\n    var column = args.column;\n\n    if (column.header && column.header.buttons){\n      // Append buttons in reverse order since they are floated to the right.\n      var i = column.header.buttons.length;\n      while (i--){\n        var button = column.header.buttons[i];\n        var btn = $('<div></div>')\n          .addClass(options.buttonCssClass)\n          .data('column', column)\n          .data('button', button);\n\n        if (button.showOnHover){\n          btn.addClass('slick-header-button-hidden');\n        }\n\n        if (button.image){\n          btn.css('backgroundImage', 'url(' + button.image + ')');\n        }\n\n        if (button.cssClass){\n          btn.addClass(button.cssClass);\n        }\n\n        if (button.tooltip){\n          btn.attr('title', button.tooltip);\n        }\n\n        if (button.command){\n          btn.data('command', button.command);\n        }\n\n        if (button.handler){\n          btn.bind('click', button.handler);\n        }\n\n        btn\n          .bind('click', handleButtonClick)\n          .appendTo(args.node);\n        args.node.classList.add('has-buttons');\n      }\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args){\n    var column = args.column;\n\n    if (column.header && column.header.buttons){\n      // Removing buttons via jQuery will also clean up any event handlers and data.\n      // NOTE: If you attach event handlers directly or using a different framework,\n      //       you must also clean them up here to avoid memory leaks.\n      $(args.node).find(`.${options.buttonCssClass}`).remove();\n    }\n  }\n\n  function handleButtonClick(e){\n    var command = $(this).data('command');\n    var columnDef = $(this).data('column');\n    var button = $(this).data('button');\n\n    if (command != null){\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'button': button\n      }, e, _self);\n\n      // Update the header in case the user updated the button definition in the handler.\n      _grid.updateColumnHeader(columnDef.id);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    'onCommand': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headerbuttons/slick.headerbuttons.js","import HeaderMenu from './slick.headermenu';\nexport default HeaderMenu;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headermenu/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\n// import './slick.headermenu.css';\n\nexport default HeaderMenu;\n\n/** *\n * A plugin to add drop-down menus to column headers.\n *\n * USAGE:\n *\n * Add the plugin .js & .css files and register it with the grid.\n *\n * To specify a menu in a column header, extend the column definition like so:\n *\n *   const columns = [\n *     {\n *       id: 'myColumn',\n *       name: 'My column',\n *\n *       // This is the relevant part\n *       header: {\n *          menu: {\n *              items: [\n *                {\n *                  // menu item options\n *                },\n *                {\n *                  // menu item options\n *                }\n *              ]\n *          }\n *       }\n *     }\n *   ];\n *\n *\n * Available menu options:\n *    tooltip:      Menu button tooltip.\n *\n *\n * Available menu item options:\n *    title:        Menu item text.\n *    disabled:     Whether the item is disabled.\n *    tooltip:      Item tooltip.\n *    command:      A command identifier to be passed to the onCommand event handlers.\n *    iconCssClass: A CSS class to be added to the menu item icon.\n *    iconImage:    A url to the icon image.\n *\n *\n * The plugin exposes the following events:\n *    onBeforeMenuShow:   Fired before the menu is shown.  You can customize the menu or dismiss it by returning false.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            menu:     Menu options.  Note that you can change the menu items here.\n *\n *    onCommand:    Fired on menu item click for buttons with 'command' specified.\n *        Event args:\n *            grid:     Reference to the grid.\n *            column:   Column definition.\n *            command:  Button command identified.\n *            button:   Button options.  Note that you can change the button options in your\n *                      event handler, and the column header will be automatically updated to\n *                      reflect them.  This is useful if you want to implement something like a\n *                      toggle button.\n *\n *\n * @param options {Object} Options:\n *    buttonCssClass:   an extra CSS class to add to the menu button\n *    buttonImage:      a url to the menu button image (default '../images/down.gif')\n * @class Slick.Plugins.HeaderButtons\n * @constructor\n */\nfunction HeaderMenu(options){\n  let _grid;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    buttonCssClass: null,\n    buttonImage: null\n  };\n\n  let $menu;\n  let $activeHeaderColumn;\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler\n      .subscribe(_grid.onHeaderCellRendered, handleHeaderCellRendered)\n      .subscribe(_grid.onBeforeHeaderCellDestroy, handleBeforeHeaderCellDestroy);\n\n    // Force the grid to re-render the header now that the events are hooked up.\n    _grid.setColumns(_grid.getColumns());\n\n    // Hide the menu on outside click.\n    $(document.body).bind('mousedown', handleBodyMouseDown);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n    $(document.body).unbind('mousedown', handleBodyMouseDown);\n  }\n\n  function handleBodyMouseDown(e){\n    if ($menu && $menu[0] != e.target && !$.contains($menu[0], e.target)){\n      hideMenu();\n    }\n  }\n\n  function hideMenu(){\n    if ($menu){\n      $menu.remove();\n      $menu = null;\n      $activeHeaderColumn\n        .removeClass('slick-header-column-active');\n    }\n  }\n\n  function handleHeaderCellRendered(e, args){\n    const column = args.column;\n    const menu = column.header && column.header.menu;\n\n    if (menu){\n      const $el = $('<div></div>')\n        .addClass('slick-header-menubutton')\n        .data('column', column)\n        .data('menu', menu);\n\n      if (options.buttonCssClass){\n        $el.addClass(options.buttonCssClass);\n      }\n\n      if (options.buttonImage){\n        $el.css('background-image', 'url(' + options.buttonImage + ')');\n      }\n\n      if (menu.tooltip){\n        $el.attr('title', menu.tooltip);\n      }\n\n      $el\n        .bind('click', showMenu)\n        .appendTo(args.node);\n    }\n  }\n\n  function handleBeforeHeaderCellDestroy(e, args){\n    const column = args.column;\n\n    if (column.header && column.header.menu){\n      $(args.node).find('.slick-header-menubutton').remove();\n    }\n  }\n\n  function showMenu(e){\n    const $menuButton = $(this);\n    const menu = $menuButton.data('menu');\n    const columnDef = $menuButton.data('column');\n\n    // Let the user modify the menu or cancel altogether,\n    // or provide alternative menu implementation.\n    if (_self.onBeforeMenuShow.notify({\n      'grid': _grid,\n      'column': columnDef,\n      'menu': menu\n    }, e, _self) == false){\n      return;\n    }\n\n    if (!$menu){\n      $menu = $(\"<div class='slick-header-menu'></div>\")\n        .appendTo(_grid.getContainerNode());\n    }\n    $menu.empty();\n\n    // Construct the menu items.\n    for (let i = 0; i < menu.items.length; i++){\n      const item = menu.items[i];\n\n      const $li = $(\"<div class='slick-header-menuitem'></div>\")\n        .data('command', item.command || '')\n        .data('column', columnDef)\n        .data('item', item)\n        .bind('click', handleMenuItemClick)\n        .appendTo($menu);\n\n      if (item.disabled){\n        $li.addClass('slick-header-menuitem-disabled');\n      }\n\n      if (item.tooltip){\n        $li.attr('title', item.tooltip);\n      }\n\n      const $icon = $(\"<div class='slick-header-menuicon'></div>\")\n        .appendTo($li);\n\n      if (item.iconCssClass){\n        $icon.addClass(item.iconCssClass);\n      }\n\n      if (item.iconImage){\n        $icon.css('background-image', 'url(' + item.iconImage + ')');\n      }\n\n      $(\"<span class='slick-header-menucontent'></span>\")\n        .text(item.title)\n        .appendTo($li);\n    }\n\n    // Position the menu.\n    $menu\n      .offset({ top: $(this).offset().top + $(this).height(), left: $(this).offset().left });\n\n    // Mark the header as active to keep the highlighting.\n    $activeHeaderColumn = $menuButton.closest('.slick-header-column');\n    $activeHeaderColumn\n      .addClass('slick-header-column-active');\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  function handleMenuItemClick(e){\n    const command = $(this).data('command');\n    const columnDef = $(this).data('column');\n    const item = $(this).data('item');\n\n    if (item.disabled){\n      return;\n    }\n\n    hideMenu();\n\n    if (command != null && command != ''){\n      _self.onCommand.notify({\n        'grid': _grid,\n        'column': columnDef,\n        'command': command,\n        'item': item\n      }, e, _self);\n    }\n\n    // Stop propagation so that it doesn't register as a header click event.\n    e.preventDefault();\n    e.stopPropagation();\n  }\n\n  Object.assign(this, {\n    init,\n    destroy,\n\n    'onBeforeMenuShow': new Slick.Event(),\n    'onCommand': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.headermenu/slick.headermenu.js","import RowMoveManager from './slick.rowmovemanager';\nexport default RowMoveManager;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowmovemanager/index.js","import Slick from '../../src/slick.core';\n\nexport default RowMoveManager;\n\nfunction RowMoveManager(options){\n  let _grid;\n  let _canvas;\n  let _dragging;\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  const _defaults = {\n    cancelEditOnDrag: false\n  };\n\n  function init(grid){\n    options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _canvas = _grid.getCanvasNode();\n    _handler\n      .subscribe(_grid.onDragInit, handleDragInit)\n      .subscribe(_grid.onDragStart, handleDragStart)\n      .subscribe(_grid.onDrag, handleDrag)\n      .subscribe(_grid.onDragEnd, handleDragEnd);\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function handleDragInit(e, dd){\n    // prevent the grid from cancelling drag'n'drop by default\n    e.stopImmediatePropagation();\n  }\n\n  function handleDragStart(e, dd){\n    const cell = _grid.getCellFromEvent(e);\n\n    if (options.cancelEditOnDrag && _grid.getEditorLock().isActive()){\n      _grid.getEditorLock().cancelCurrentEdit();\n    }\n\n    if (_grid.getEditorLock().isActive() || !/move|selectAndMove/.test(_grid.getColumns()[cell.cell].behavior)){\n      return false;\n    }\n\n    _dragging = true;\n    e.stopImmediatePropagation();\n\n    let selectedRows = _grid.getSelectedRows();\n\n    if (selectedRows.length == 0 || $.inArray(cell.row, selectedRows) == -1){\n      selectedRows = [cell.row];\n      _grid.setSelectedRows(selectedRows);\n    }\n\n    const rowHeight = _grid.getOptions().rowHeight;\n\n    dd.selectedRows = selectedRows;\n\n    dd.selectionProxy = $(\"<div class='slick-reorder-proxy'/>\")\n      .css('position', 'absolute')\n      .css('zIndex', '99999')\n      .css('width', $(_canvas).innerWidth())\n      .css('height', rowHeight * selectedRows.length)\n      .appendTo(_canvas);\n\n    dd.guide = $(\"<div class='slick-reorder-guide'/>\")\n      .css('position', 'absolute')\n      .css('zIndex', '99998')\n      .css('width', $(_canvas).innerWidth())\n      .css('top', -1000)\n      .appendTo(_canvas);\n\n    dd.insertBefore = -1;\n  }\n\n  function handleDrag(e, dd){\n    if (!_dragging){\n      return;\n    }\n\n    e.stopImmediatePropagation();\n\n    const top = e.pageY - $(_canvas).offset().top;\n    dd.selectionProxy.css('top', top - 5);\n\n    const insertBefore = Math.max(0, Math.min(Math.round(top / _grid.getOptions().rowHeight), _grid.getDataLength()));\n    if (insertBefore !== dd.insertBefore){\n      const eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': insertBefore\n      };\n\n      if (_self.onBeforeMoveRows.notify(eventData) === false){\n        dd.guide.css('top', -1000);\n        dd.canMove = false;\n      } else {\n        dd.guide.css('top', insertBefore * _grid.getOptions().rowHeight);\n        dd.canMove = true;\n      }\n\n      dd.insertBefore = insertBefore;\n    }\n  }\n\n  function handleDragEnd(e, dd){\n    if (!_dragging){\n      return;\n    }\n    _dragging = false;\n    e.stopImmediatePropagation();\n\n    dd.guide.remove();\n    dd.selectionProxy.remove();\n\n    if (dd.canMove){\n      const eventData = {\n        'rows': dd.selectedRows,\n        'insertBefore': dd.insertBefore\n      };\n      // TODO:  _grid.remapCellCssClasses ?\n      _self.onMoveRows.notify(eventData);\n    }\n  }\n\n  Object.assign(this, {\n    'onBeforeMoveRows': new Slick.Event(),\n    'onMoveRows': new Slick.Event(),\n    init,\n    destroy\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowmovemanager/slick.rowmovemanager.js","import RowSelectionModel from './slick.rowselectionmodel';\nexport default RowSelectionModel;\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowselectionmodel/index.js","import $ from 'jquery';\nimport Slick from '../../src/slick.core';\n\nexport default RowSelectionModel;\n\nfunction RowSelectionModel(options){\n  let _grid;\n  let _ranges = [];\n  const _self = this;\n  const _handler = new Slick.EventHandler();\n  let _inHandler;\n  let _options;\n  const _defaults = {\n    selectActiveRow: true\n  };\n\n  function init(grid){\n    _options = Object.assign({}, _defaults, options);\n    _grid = grid;\n    _handler.subscribe(_grid.onActiveCellChanged,\n      wrapHandler(handleActiveCellChange));\n    _handler.subscribe(_grid.onKeyDown,\n      wrapHandler(handleKeyDown));\n    _handler.subscribe(_grid.onClick,\n      wrapHandler(handleClick));\n  }\n\n  function destroy(){\n    _handler.unsubscribeAll();\n  }\n\n  function wrapHandler(handler){\n    return function(){\n      if (!_inHandler){\n        _inHandler = true;\n        handler.apply(this, arguments);\n        _inHandler = false;\n      }\n    };\n  }\n\n  function rangesToRows(ranges){\n    const rows = [];\n    for (let i = 0; i < ranges.length; i++){\n      for (let j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        rows.push(j);\n      }\n    }\n    return rows;\n  }\n\n  function rowsToRanges(rows){\n    const ranges = [];\n    const lastCell = _grid.getColumns().length - 1;\n    for (let i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getRowsRange(from, to){\n    let i;\n    const rows = [];\n    for (i = from; i <= to; i++){\n      rows.push(i);\n    }\n    for (i = to; i < from; i++){\n      rows.push(i);\n    }\n    return rows;\n  }\n\n  function getSelectedRows(){\n    return rangesToRows(_ranges);\n  }\n\n  function setSelectedRows(rows){\n    setSelectedRanges(rowsToRanges(rows));\n  }\n\n  function setSelectedRanges(ranges){\n    // simle check for: empty selection didn't change, prevent firing onSelectedRangesChanged\n    if ((!_ranges || _ranges.length === 0) && (!ranges || ranges.length === 0)){\n      return;\n    }\n    _ranges = ranges;\n    _self.onSelectedRangesChanged.notify(_ranges);\n  }\n\n  function getSelectedRanges(){\n    return _ranges;\n  }\n\n  function handleActiveCellChange(e, data){\n    if (_options.selectActiveRow && data.row != null){\n      setSelectedRanges([new Slick.Range(data.row, 0, data.row, _grid.getColumns().length - 1)]);\n    }\n  }\n\n  function handleKeyDown(e){\n    const activeRow = _grid.getActiveCell();\n    if (activeRow && e.shiftKey && !e.ctrlKey && !e.altKey && !e.metaKey && (e.which == 38 || e.which == 40)){\n      let selectedRows = getSelectedRows();\n      selectedRows.sort(function(x, y){\n        return x - y;\n      });\n\n      if (!selectedRows.length){\n        selectedRows = [activeRow.row];\n      }\n\n      let top = selectedRows[0];\n      let bottom = selectedRows[selectedRows.length - 1];\n      let active;\n\n      if (e.which == 40){\n        active = activeRow.row < bottom || top == bottom ? ++bottom : ++top;\n      } else {\n        active = activeRow.row < bottom ? --bottom : --top;\n      }\n\n      if (active >= 0 && active < _grid.getDataLength()){\n        _grid.scrollRowIntoView(active);\n        _ranges = rowsToRanges(getRowsRange(top, bottom));\n        setSelectedRanges(_ranges);\n      }\n\n      e.preventDefault();\n      e.stopPropagation();\n    }\n  }\n\n  function handleClick(e){\n    const cell = _grid.getCellFromEvent(e);\n    if (!cell || !_grid.canCellBeActive(cell.row, cell.cell)){\n      return false;\n    }\n\n    if (!_grid.getOptions().multiSelect || (\n      !e.ctrlKey && !e.shiftKey && !e.metaKey)){\n      return false;\n    }\n\n    let selection = rangesToRows(_ranges);\n    const idx = $.inArray(cell.row, selection);\n\n    if (idx === -1 && (e.ctrlKey || e.metaKey)){\n      selection.push(cell.row);\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (idx !== -1 && (e.ctrlKey || e.metaKey)){\n      selection = $.grep(selection, function(o, i){\n        return (o !== cell.row);\n      });\n      _grid.setActiveCell(cell.row, cell.cell);\n    } else if (selection.length && e.shiftKey){\n      const last = selection.pop();\n      const from = Math.min(cell.row, last);\n      const to = Math.max(cell.row, last);\n      selection = [];\n      for (let i = from; i <= to; i++){\n        if (i !== last){\n          selection.push(i);\n        }\n      }\n      selection.push(last);\n      _grid.setActiveCell(cell.row, cell.cell);\n    }\n\n    _ranges = rowsToRanges(selection);\n    setSelectedRanges(_ranges);\n    e.stopImmediatePropagation();\n\n    return true;\n  }\n\n  Object.assign(this, {\n    getSelectedRows,\n    setSelectedRows,\n\n    getSelectedRanges,\n    setSelectedRanges,\n\n    init,\n    destroy,\n\n    'onSelectedRangesChanged': new Slick.Event()\n  });\n}\n\n\n\n// WEBPACK FOOTER //\n// ../plugins/slick.rowselectionmodel/slick.rowselectionmodel.js","/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nimport $ from 'jquery';\nimport interact from 'interactjs';\n\nimport Slick from './slick.core';\n\n// Slick.Grid globals pretense\nSlick.FrozenGrid = SlickGrid;\n\nexport default SlickGrid;\n\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight; // browser's breaking point\n\n//////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options){\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: \"flashing\",\n    selectedCellCssClass: \"selected\",\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    frozenBottom: false,\n    frozenColumn: -1,\n    frozenRow: -1,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: \"new-row\"\n  };\n\n  var columnDefaults = {\n    name: \"\",\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th; // virtual height\n  var h; // real scrollable height\n  var ph; // page height\n  var n; // number of pages\n  var cj; // \"jumpiness\" coefficient\n\n  var page = 0; // current page\n  var offset = 0; // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = \"slickgrid_\" + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $groupHeaders = $();\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacerL, $headerRowSpacerR;\n  var $footerRow, $footerRowScroller, $footerRowSpacerL, $footerRowSpacerR;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var treeColumns;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth, canvasWidthL, canvasWidthR;\n  var headersWidth, headersWidthL, headersWidthR;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0,\n    headerColumnHeightDiff = 0, // border+padding\n    cellWidthDiff = 0,\n    cellHeightDiff = 0;\n  var absoluteColumnMinWidth;\n  var hasFrozenRows = false;\n  var frozenRowsHeight = 0;\n  var actualFrozenRow = -1;\n  var paneTopH = 0;\n  var paneBottomH = 0;\n  var viewportTopH = 0;\n  var viewportBottomH = 0;\n  var topPanelH = 0;\n  var headerRowH = 0;\n  var footerRowH = 0;\n\n  var tabbingDirection = 1;\n  var $activeCanvasNode;\n  var $activeViewportNode;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows = 0;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent; // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent; // node that was hidden instead of getting deleted\n\n  var $paneHeaderL;\n  var $paneHeaderR;\n  var $paneTopL;\n  var $paneTopR;\n  var $paneBottomL;\n  var $paneBottomR;\n\n  var $headerScrollerL;\n  var $headerScrollerR;\n\n  var $headerL;\n  var $headerR;\n\n  var $groupHeadersL;\n  var $groupHeadersR;\n\n  var $headerRowScrollerL;\n  var $headerRowScrollerR;\n\n  var $footerRowScrollerL;\n  var $footerRowScrollerR;\n\n  var $headerRowL;\n  var $headerRowR;\n\n  var $footerRowL;\n  var $footerRowR;\n\n  var $topPanelScrollerL;\n  var $topPanelScrollerR;\n\n  var $topPanelL;\n  var $topPanelR;\n\n  var $viewportTopL;\n  var $viewportTopR;\n  var $viewportBottomL;\n  var $viewportBottomR;\n\n  var $canvasTopL;\n  var $canvasTopR;\n  var $canvasBottomL;\n  var $canvasBottomR;\n\n  var $viewportScrollContainerX;\n  var $viewportScrollContainerY;\n  var $headerScrollContainer;\n  var $headerRowScrollContainer;\n  var $footerRowScrollContainer;\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init(){\n    $container = $(container);\n    if ($container.length < 1){\n      throw new Error(\"SlickGrid requires a valid container, \" + container + \" does not exist in the DOM.\");\n    }\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    treeColumns = new Slick.TreeColumns(columns);\n    columns = treeColumns.extractColumns();\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      \"commitCurrentEdit\": commitCurrentEdit,\n      \"cancelCurrentEdit\": cancelCurrentEdit\n    };\n\n    $container.empty()\n      .css(\"overflow\", \"hidden\")\n      .css(\"outline\", 0)\n      .addClass(uid)\n      .addClass(\"ui-widget\");\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css(\"position\"))){\n      $container.css(\"position\", \"relative\");\n    }\n\n    $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    // Containers used for scrolling frozen columns and rows\n    $paneHeaderL = $(\"<div class='slick-pane slick-pane-header slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneHeaderR = $(\"<div class='slick-pane slick-pane-header slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneTopL = $(\"<div class='slick-pane slick-pane-top slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneTopR = $(\"<div class='slick-pane slick-pane-top slick-pane-right' tabIndex='0' />\").appendTo($container);\n    $paneBottomL = $(\"<div class='slick-pane slick-pane-bottom slick-pane-left' tabIndex='0' />\").appendTo($container);\n    $paneBottomR = $(\"<div class='slick-pane slick-pane-bottom slick-pane-right' tabIndex='0' />\").appendTo($container);\n\n    // Append the header scroller containers\n    $headerScrollerL = $(\"<div class='ui-state-default slick-header slick-header-left' />\").appendTo($paneHeaderL);\n    $headerScrollerR = $(\"<div class='ui-state-default slick-header slick-header-right' />\").appendTo($paneHeaderR);\n\n    // Cache the header scroller containers\n    $headerScroller = $().add($headerScrollerL).add($headerScrollerR);\n\n    if (treeColumns.hasDepth()){\n      $groupHeadersL = [], $groupHeadersR = [];\n      for (var index = 0; index < treeColumns.getDepth() - 1; index++){\n        $groupHeadersL[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n        $groupHeadersR[index] = $(\"<div class='slick-group-header-columns slick-group-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n      }\n\n      $groupHeaders = $().add($groupHeadersL).add($groupHeadersR);\n    }\n\n    // Append the columnn containers to the headers\n    $headerL = $(\"<div class='slick-header-columns slick-header-columns-left' style='left:-1000px' />\").appendTo($headerScrollerL);\n    $headerR = $(\"<div class='slick-header-columns slick-header-columns-right' style='left:-1000px' />\").appendTo($headerScrollerR);\n\n    // Cache the header columns\n    $headers = $().add($headerL).add($headerR);\n\n    $headerRowScrollerL = $(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopL);\n    $headerRowScrollerR = $(\"<div class='ui-state-default slick-headerrow' />\").appendTo($paneTopR);\n\n    $headerRowScroller = $().add($headerRowScrollerL).add($headerRowScrollerR);\n\n    $headerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($headerRowScrollerL);\n    $headerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($headerRowScrollerR);\n\n    $headerRowL = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-left' />\").appendTo($headerRowScrollerL);\n    $headerRowR = $(\"<div class='slick-headerrow-columns slick-headerrow-columns-right' />\").appendTo($headerRowScrollerR);\n\n    $headerRow = $().add($headerRowL).add($headerRowR);\n\n    // Append the top panel scroller\n    $topPanelScrollerL = $(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopL);\n    $topPanelScrollerR = $(\"<div class='ui-state-default slick-top-panel-scroller' />\").appendTo($paneTopR);\n\n    $topPanelScroller = $().add($topPanelScrollerL).add($topPanelScrollerR);\n\n    // Append the top panel\n    $topPanelL = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerL);\n    $topPanelR = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScrollerR);\n\n    $topPanel = $().add($topPanelL).add($topPanelR);\n\n    if (!options.showTopPanel){\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow){\n      $headerRowScroller.hide();\n    }\n\n    // Append the viewport containers\n    $viewportTopL = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneTopL);\n    $viewportTopR = $(\"<div class='slick-viewport slick-viewport-top slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneTopR);\n    $viewportBottomL = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-left' tabIndex='0' hideFocus />\").appendTo($paneBottomL);\n    $viewportBottomR = $(\"<div class='slick-viewport slick-viewport-bottom slick-viewport-right' tabIndex='0' hideFocus />\").appendTo($paneBottomR);\n\n    // Cache the viewports\n    $viewport = $().add($viewportTopL).add($viewportTopR).add($viewportBottomL).add($viewportBottomR);\n\n    // Default the active viewport to the top left\n    $activeViewportNode = $viewportTopL;\n\n    // Append the canvas containers\n    $canvasTopL = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportTopL);\n    $canvasTopR = $(\"<div class='grid-canvas grid-canvas-top grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportTopR);\n    $canvasBottomL = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-left' tabIndex='0' hideFocus />\").appendTo($viewportBottomL);\n    $canvasBottomR = $(\"<div class='grid-canvas grid-canvas-bottom grid-canvas-right' tabIndex='0' hideFocus />\").appendTo($viewportBottomR);\n\n    // Cache the canvases\n    $canvas = $().add($canvasTopL).add($canvasTopR).add($canvasBottomL).add($canvasBottomR);\n\n    // Default the active canvas to the top left\n    $activeCanvasNode = $canvasTopL;\n\n    // footer Row\n    $footerRowScrollerR = $(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopR);\n    $footerRowScrollerL = $(\"<div class='ui-state-default slick-footerrow' />\").appendTo($paneTopL);\n\n    $footerRowScroller = $().add($footerRowScrollerL).add($footerRowScrollerR);\n\n    $footerRowSpacerL = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($footerRowScrollerL);\n    $footerRowSpacerR = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css(\"width\", getCanvasWidth() + scrollbarDimensions.width + \"px\")\n      .appendTo($footerRowScrollerR);\n\n    $footerRowL = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-left' />\").appendTo($footerRowScrollerL);\n    $footerRowR = $(\"<div class='slick-footerrow-columns slick-footerrow-columns-right' />\").appendTo($footerRowScrollerR);\n\n    $footerRow = $().add($footerRowL).add($footerRowR);\n\n    if (!options.showFooterRow){\n      $footerRowScroller.hide();\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization){\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization(){\n    if (!initialized){\n      initialized = true;\n\n      getViewportWidth();\n      getViewportHeight();\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells){\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind(\"selectstart.ui\", function(event){\n          return $(event.target).is(\"input,textarea\");\n        });\n      }\n\n      setFrozenOptions();\n      setPaneVisibility();\n      setScroller();\n      setOverflow();\n\n      updateColumnCaches();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container.bind(\"resize.slickgrid\", resizeCanvas);\n      $viewport.on(\"scroll\", handleScroll);\n\n      if ($.fn.mousewheel && (options.frozenColumn > -1 || hasFrozenRows)){\n        $viewport.on(\"mousewheel\", handleMouseWheel);\n      }\n\n      $headerScroller.bind(\"contextmenu\", handleHeaderContextMenu)\n        .bind(\"click\", handleHeaderClick)\n        .delegate(\".slick-header-column\", \"mouseenter\", handleHeaderMouseEnter)\n        .delegate(\".slick-header-column\", \"mouseleave\", handleHeaderMouseLeave);\n      $headerRowScroller.bind(\"scroll\", handleHeaderRowScroll);\n\n      $footerRowScroller.bind(\"scroll\", handleFooterRowScroll);\n\n      $focusSink.add($focusSink2)\n        .bind(\"keydown\", handleKeyDown);\n      $canvas.bind(\"keydown\", handleKeyDown)\n        .bind(\"click\", handleClick)\n        .bind(\"dblclick\", handleDblClick)\n        .bind(\"contextmenu\", handleContextMenu)\n        .delegate(\".slick-cell\", \"mouseenter\", handleMouseEnter)\n        .delegate(\".slick-cell\", \"mouseleave\", handleMouseLeave);\n\n      // legacy support for drag events\n      interact($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      });\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) && navigator.userAgent.toLowerCase().match(/macintosh/)){\n        $canvas.on(\"mousewheel\", handleMouseWheel);\n      }\n    }\n  }\n\n  function hasFrozenColumns(){\n    return options.frozenColumn > -1;\n  }\n\n  function registerPlugin(plugin){\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin){\n    for (var i = plugins.length; i >= 0; i--){\n      if (plugins[i] === plugin){\n        if (plugins[i].destroy){\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model){\n    if (selectionModel){\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy){\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel){\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel(){\n    return selectionModel;\n  }\n\n  function getCanvasNode(){\n    return $canvas[0];\n  }\n\n  function getActiveCanvasNode(element){\n    setActiveCanvasNode(element);\n\n    return $activeCanvasNode[0];\n  }\n\n  function getCanvases(){\n    return $canvas;\n  }\n\n  function setActiveCanvasNode(element){\n    if (element){\n      $activeCanvasNode = $(element.target).closest('.grid-canvas');\n    }\n  }\n\n  function getViewportNode(){\n    return $viewport[0];\n  }\n\n  function getActiveViewportNode(element){\n    setActiveViewPortNode(element);\n\n    return $activeViewportNode[0];\n  }\n\n  function setActiveViewportNode(element){\n    if (element){\n      $activeViewportNode = $(element.target).closest('.slick-viewport');\n    }\n  }\n\n  function measureScrollbar(){\n    var $c = $(\"<div class='scrollbar-fix' style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo(document.body);\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth(){\n    headersWidth = headersWidthL = headersWidthR = 0;\n\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      var width = columns[i].width;\n\n      if ((options.frozenColumn) > -1 && (i > options.frozenColumn)){\n        headersWidthR += width;\n      } else {\n        headersWidthL += width;\n      }\n    }\n\n    if (hasFrozenColumns()){\n      headersWidthL = headersWidthL + 1000;\n\n      headersWidthR = Math.max(headersWidthR, viewportW) + headersWidthL;\n      headersWidthR += scrollbarDimensions.width;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    headersWidth = headersWidthL + headersWidthR;\n  }\n\n  function getHeadersWidthL(){\n    headersWidthL = 0;\n\n    columns.forEach(function(column, i){\n      if (!((options.frozenColumn) > -1 && (i > options.frozenColumn))) headersWidthL += column.width;\n    });\n\n    if (hasFrozenColumns()){\n      headersWidthL += 1000;\n    } else {\n      headersWidthL += scrollbarDimensions.width;\n      headersWidthL = Math.max(headersWidthL, viewportW) + 1000;\n    }\n\n    return headersWidthL;\n  }\n\n  function getHeadersWidthR(){\n    headersWidthR = 0;\n\n    columns.forEach(function(column, i){\n      if ((options.frozenColumn) > -1 && (i > options.frozenColumn)) headersWidthR += column.width;\n    });\n\n    if (hasFrozenColumns()){\n      headersWidthR = Math.max(headersWidthR, viewportW) + getHeadersWidthL();\n      headersWidthR += scrollbarDimensions.width;\n    }\n\n    return headersWidthR;\n  }\n\n  function getCanvasWidth(){\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    var i = columns.length;\n\n    canvasWidthL = canvasWidthR = 0;\n\n    while (i--){\n      if (hasFrozenColumns() && (i > options.frozenColumn)){\n        canvasWidthR += columns[i].width;\n      } else {\n        canvasWidthL += columns[i].width;\n      }\n    }\n\n    var totalRowWidth = canvasWidthL + canvasWidthR;\n\n    return options.fullWidthRows ? Math.max(totalRowWidth, availableWidth) : totalRowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate){\n    var oldCanvasWidth = canvasWidth;\n    var oldCanvasWidthL = canvasWidthL;\n    var oldCanvasWidthR = canvasWidthR;\n    var widthChanged;\n    canvasWidth = getCanvasWidth();\n\n    widthChanged = canvasWidth !== oldCanvasWidth || canvasWidthL !== oldCanvasWidthL || canvasWidthR !== oldCanvasWidthR;\n\n    if (widthChanged || hasFrozenColumns() || hasFrozenRows){\n      $canvasTopL.width(canvasWidthL);\n\n      getHeadersWidth();\n\n      $headerL.width(headersWidthL);\n      $headerR.width(headersWidthR);\n\n      if (hasFrozenColumns()){\n        $canvasTopR.width(canvasWidthR);\n\n        $paneHeaderL.width(canvasWidthL);\n        $paneHeaderR.css('left', canvasWidthL);\n        $paneHeaderR.css('width', viewportW - canvasWidthL);\n\n        $paneTopL.width(canvasWidthL);\n        $paneTopR.css('left', canvasWidthL);\n        $paneTopR.css('width', viewportW - canvasWidthL);\n\n        $headerRowScrollerL.width(canvasWidthL);\n        $headerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $headerRowL.width(canvasWidthL);\n        $headerRowR.width(canvasWidthR);\n\n        $footerRowScrollerL.width(canvasWidthL);\n        $footerRowScrollerR.width(viewportW - canvasWidthL);\n\n        $footerRowL.width(canvasWidthL);\n        $footerRowR.width(canvasWidthR);\n\n        $viewportTopL.width(canvasWidthL);\n        $viewportTopR.width(viewportW - canvasWidthL);\n\n        if (hasFrozenRows){\n          $paneBottomL.width(canvasWidthL);\n          $paneBottomR.css('left', canvasWidthL);\n\n          $viewportBottomL.width(canvasWidthL);\n          $viewportBottomR.width(viewportW - canvasWidthL);\n\n          $canvasBottomL.width(canvasWidthL);\n          $canvasBottomR.width(canvasWidthR);\n        }\n      } else {\n        $paneHeaderL.width('100%');\n\n        $paneTopL.width('100%');\n\n        $headerRowScrollerL.width('100%');\n\n        $headerRowL.width(canvasWidth);\n\n        $footerRowScrollerL.width('100%');\n\n        $footerRowL.width(canvasWidth);\n\n        $viewportTopL.width('100%');\n\n        if (hasFrozenRows){\n          $viewportBottomL.width('100%');\n          $canvasBottomL.width(canvasWidthL);\n        }\n      }\n\n      viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n    }\n\n    $headerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $headerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    $footerRowSpacerL.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n    $footerRowSpacerR.width(canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0));\n\n    if (widthChanged || forceColumnWidthsUpdate){\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target){\n    if ($target && $target.jquery){\n      $target.attr(\"unselectable\", \"on\")\n        .css(\"MozUserSelect\", \"none\")\n        .bind(\"selectstart.ui\", function(){\n          return false;\n        }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight(){\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true){\n      var test = supportedHeight * 2;\n      div.css(\"height\", test);\n      if (test > testUpTo || div.height() !== test){\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents(){\n    var elem = (hasFrozenRows && !options.frozenBottom) ? $canvasBottomL[0] : $canvasTopL[0];\n    while ((elem = elem.parentNode) != document.body && elem != null){\n      // bind to scroll containers only\n      if (elem == $viewportTopL[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight){\n        var $elem = $(elem);\n        if (!$boundAncestors){\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind(\"scroll.\" + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents(){\n    if (!$boundAncestors){\n      return;\n    }\n    $boundAncestors.unbind(\"scroll.\" + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip){\n    if (!initialized){\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null){\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header){\n      if (title !== undefined){\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined){\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n\n      $header.attr(\"title\", toolTip || \"\")\n        .children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": $header[0],\n        \"column\": columnDef\n      });\n    }\n  }\n\n  function getHeaderRow(){\n    return hasFrozenColumns() ? $headerRow : $headerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n\n    var $headerRowTarget;\n\n    if (hasFrozenColumns()){\n      if (idx <= options.frozenColumn){\n        $headerRowTarget = $headerRowL;\n      } else {\n        $headerRowTarget = $headerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $headerRowTarget = $headerRowL;\n    }\n\n    var $header = $headerRowTarget.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRow(){\n    return hasFrozenColumns() ? $footerRow : $footerRow[0];\n  }\n\n  function getFooterRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n\n    var $footerRowTarget;\n\n    if (hasFrozenColumns()){\n      if (idx <= options.frozenColumn){\n        $footerRowTarget = $footerRowL;\n      } else {\n        $footerRowTarget = $footerRowR;\n\n        idx -= options.frozenColumn + 1;\n      }\n    } else {\n      $footerRowTarget = $footerRowL;\n    }\n\n    var $footer = $footerRowTarget.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnFooter(){\n    $footerRow.find(\".slick-footerrow-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeFooterRowCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $footerRowL.empty();\n    $footerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + \" r\" + i + \"'></div>\")\n        .data(\"column\", m)\n        .addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '')\n        .appendTo(hasFrozenColumns() && (i > options.frozenColumn) ? $footerRowR : $footerRowL);\n\n      trigger(self.onFooterRowCellRendered, {\n        \"node\": footerRowCell[0],\n        \"column\": m\n      });\n    }\n  }\n\n  function createColumnGroupHeaders(){\n    var columnsLength = 0;\n    var frozenColumnsValid = false;\n\n    if (!treeColumns.hasDepth()) return;\n\n    for (var index = 0; index < $groupHeadersL.length; index++){\n\n      $groupHeadersL[index].empty();\n      $groupHeadersR[index].empty();\n\n      var groupColumns = treeColumns.getColumnsInDepth(index);\n\n      for (var indexGroup in groupColumns){\n        var m = groupColumns[indexGroup];\n\n        columnsLength += m.extractColumns().length;\n\n        if (hasFrozenColumns() && index == 0 && (columnsLength - 1) === options.frozenColumn) frozenColumnsValid = true;\n\n        $(\"<div class='ui-state-default slick-group-header-column' />\")\n          .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\n          .attr(\"id\", \"\" + uid + m.id)\n          .attr(\"title\", m.toolTip || \"\")\n          .data(\"column\", m)\n          .addClass(m.headerCssClass || \"\")\n          .addClass(hasFrozenColumns() && (columnsLength - 1) <= options.frozenColumn ? 'frozen' : '')\n          .appendTo(hasFrozenColumns() && (columnsLength - 1) > options.frozenColumn ? $groupHeadersR[index] : $groupHeadersL[index]);\n      }\n\n      if (hasFrozenColumns() && index == 0 && !frozenColumnsValid){\n        $groupHeadersL[index].empty();\n        $groupHeadersR[index].empty();\n        alert(\"All columns of group should to be grouped!\");\n        break;\n      }\n    }\n\n    applyColumnGroupHeaderWidths();\n  }\n\n  function createColumnHeaders(){\n    function onMouseEnter(){\n      $(this).addClass(\"ui-state-hover\");\n    }\n\n    function onMouseLeave(){\n      $(this).removeClass(\"ui-state-hover\");\n    }\n\n    $headers.find(\".slick-header-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeHeaderCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $headerL.empty();\n    $headerR.empty();\n\n    getHeadersWidth();\n\n    $headerL.width(headersWidthL);\n    $headerR.width(headersWidthR);\n\n    $headerRow.find(\".slick-headerrow-column\")\n      .each(function(){\n        var columnDef = $(this).data(\"column\");\n        if (columnDef){\n          trigger(self.onBeforeHeaderRowCellDestroy, {\n            \"node\": this,\n            \"column\": columnDef\n          });\n        }\n      });\n\n    $headerRowL.empty();\n    $headerRowR.empty();\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var $headerTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerL : $headerR) : $headerL;\n      var $headerRowTarget = hasFrozenColumns() ? ((i <= options.frozenColumn) ? $headerRowL : $headerRowR) : $headerRowL;\n\n      var header = $(\"<div class='ui-state-default slick-header-column' />\")\n        .html(\"<span class='slick-column-name'>\" + m.name + \"</span>\")\n        .width(m.width)\n        .attr(\"id\", \"\" + uid + m.id)\n        .attr(\"title\", m.toolTip || \"\")\n        .data(\"column\", m)\n        .addClass(m.headerCssClass || \"\")\n        .addClass(hasFrozenColumns() && i <= options.frozenColumn ? 'frozen' : '')\n        .appendTo($headerTarget);\n\n      if (options.enableColumnReorder || m.sortable){\n        header.on('mouseenter', onMouseEnter)\n          .on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable){\n        header.addClass(\"slick-header-sortable\");\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        \"node\": header[0],\n        \"column\": m\n      });\n\n      if (options.showHeaderRow){\n        var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + \" r\" + i + \"'></div>\")\n          .data(\"column\", m)\n          .appendTo($headerRowTarget);\n\n        trigger(self.onHeaderRowCellRendered, {\n          \"node\": headerRowCell[0],\n          \"column\": m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder){\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort(){\n    $headers.click(function(e){\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass(\"slick-resizable-handle\")){\n        return;\n      }\n\n      var $col = $(e.target).closest(\".slick-header-column\");\n      if (!$col.length){\n        return;\n      }\n\n      var column = $col.data(\"column\");\n      if (column.sortable){\n        if (!getEditorLock().commitCurrentEdit()){\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++){\n          if (sortColumns[i].columnId == column.id){\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort){\n          if (sortOpts){\n            sortColumns.splice(i, 1);\n          }\n        } else {\n          if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort){\n            sortColumns = [];\n          }\n\n          if (!sortOpts){\n            sortOpts = {\n              columnId: column.id,\n              sortAsc: column.defaultSortAsc\n            };\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0){\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort){\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: $.map(sortColumns, function(col){\n              return {\n                sortCol: columns[getColumnIndex(col.columnId)],\n                sortAsc: col.sortAsc\n              };\n            })\n          }, e);\n        }\n      }\n    });\n  }\n\n  function currentPositionInHeader(id){\n    var currentPosition = 0;\n    $headers.find('.slick-header-column').each(function(i){\n      if (this.id == id){\n        currentPosition = i;\n        return false;\n      }\n    });\n\n    return currentPosition;\n  }\n\n  function limitPositionInGroup(idColumn){\n    var groupColumnOfPreviousPosition,\n      startLimit = 0,\n      endLimit = 0;\n\n    treeColumns.getColumnsInDepth($groupHeadersL.length - 1)\n      .some(function(groupColumn){\n        startLimit = endLimit;\n        endLimit += groupColumn.columns.length;\n\n        groupColumn.columns.some(function(column){\n\n          if (column.id === idColumn) groupColumnOfPreviousPosition = groupColumn;\n\n          return groupColumnOfPreviousPosition;\n        });\n\n        return groupColumnOfPreviousPosition;\n      });\n\n    endLimit--;\n\n    return {\n      start: startLimit,\n      end: endLimit,\n      group: groupColumnOfPreviousPosition\n    }\n  }\n\n  function remove(arr, elem){\n    var index = arr.lastIndexOf(elem);\n    if (index > -1){\n      arr.splice(index, 1);\n      remove(arr, elem);\n    }\n  }\n\n  function columnPositionValidInGroup($item){\n    var currentPosition = currentPositionInHeader($item[0].id);\n    var limit = limitPositionInGroup($item.data('column').id);\n    var positionValid = limit.start <= currentPosition && currentPosition <= limit.end;\n\n    return {\n      limit: limit,\n      valid: positionValid,\n      message: positionValid ? '' : 'Column \"'.concat($item.text(), '\" can be reordered only within the \"', limit.group.name, '\" group!')\n    };\n  }\n\n  function setupColumnReorder(){\n    let x = 0;\n    let delta = 0;\n    let placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    interact('.slick-header-column')\n      .ignoreFrom('.slick-resizable-handle')\n      .draggable({\n        inertia: true,\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: 'parent',\n          endOnly: true,\n          elementRect: {top: 0, left: 0, bottom: 0, right: 0}\n        },\n        // enable autoScroll\n        autoScroll: true,\n        axis: 'x',\n        onstart: event => {\n          x = 0;\n          delta = event.target.offsetWidth;\n\n          // get old order\n          $headers.find('.slick-header-column').each(function(index){\n            $(this).data('index', index);\n          });\n\n          placeholder.style.height = event.target.offsetHeight + 'px';\n          placeholder.style.width = delta + 'px';\n\n          $(event.target).after(placeholder).css({\n            position: 'absolute',\n            zIndex: 1000,\n            marginLeft: $(event.target).position().left - 1000\n          });\n        },\n\n        onmove: event => {\n          x += event.dx;\n          event.target.style.transform = `translate3d(${x}px, -3px, 100px)`;\n          // event.target.style.marginLeft = x + 'px';\n        },\n\n        onend: event => {\n          x = 0;\n          delta = 0;\n\n          if (treeColumns.hasDepth()) {\n            var validPositionInGroup = columnPositionValidInGroup($(event.target));\n            var limit = validPositionInGroup.limit;\n\n            var cancel = !validPositionInGroup.valid;\n\n            if (cancel)\n              alert(validPositionInGroup.message);\n          }\n\n          placeholder.parentNode.removeChild(placeholder);\n\n          if (cancel){\n            event.target.style.transform = 'none';\n            setColumns(getColumns());\n            return;\n          }\n\n          $(event.target).css({\n            position: 'relative',\n            zIndex: '',\n            marginLeft: 0,\n            transform: 'none'\n          });\n\n          const newColumns = [];\n          $headers.find('.slick-header-column').each(function(index){\n            newColumns.push(columns[$(this).data('index')]);\n            $(this).removeData('index');\n          });\n\n          setColumns(newColumns);\n\n          trigger(self.onColumnsReordered, { impactedColumns : getImpactedColumns( limit ), grid: self });\n          setupColumnResize();\n        }\n      })\n      .dropzone({\n        accept: '.slick-header-column',\n\n        ondragenter: event => {\n          event.target.classList.add('interact-drop-active');\n          event.relatedTarget.classList.add('interact-can-drop');\n        },\n\n        ondragleave: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n        },\n\n        ondrop: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n          $(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n        }\n      });\n  }\n\n  function getImpactedColumns(limit){\n    var impactedColumns = [];\n\n    if (limit != undefined){\n\n      for (var i = limit.start; i <= limit.end; i++){\n        impactedColumns.push(columns[i]);\n      }\n    } else {\n\n      impactedColumns = columns;\n    }\n\n    return impactedColumns;\n  }\n\n  function setupColumnResize(){\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function(i, e){\n      if (columns[i].resizable){\n        if (firstResizable === undefined){\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined){\n      return;\n    }\n    columnElements.each(function(i, element){\n      if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)){\n        return;\n      }\n      $col = $(element);\n\n      const $handle = $(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable'))\n        return;\n\n      const activeColumn = columns[i];\n      if (activeColumn.resizable){\n        $col.data('resizable', true);\n        interact(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function(event){\n          if (!getEditorLock().commitCurrentEdit()){\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function(event){\n          let x = event.dx;\n          let width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width)\n            width = activeColumn.minWidth;\n          else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width)\n            width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns){\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize){\n            applyColumnWidths();\n          }\n        }).on('resizeend', function(event){\n          event.target.classList.remove('slick-header-column-active');\n          if (treeColumns.hasDepth())\n            createColumnGroupHeaders();\n\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, {grid: self});\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el){\n    var p = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n    var delta = 0;\n    $.each(p, function(n, val){\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function setFrozenOptions(){\n    options.frozenColumn = (options.frozenColumn >= 0 && options.frozenColumn < columns.length) ? parseInt(options.frozenColumn) : -1;\n\n    options.frozenRow = (options.frozenRow >= 0 && options.frozenRow < numVisibleRows) ? parseInt(options.frozenRow) : -1;\n\n    if (options.frozenRow > -1){\n      hasFrozenRows = true;\n      frozenRowsHeight = (options.frozenRow) * options.rowHeight;\n\n      var dataLength = getDataLength() || this.data.length;\n\n      actualFrozenRow = (options.frozenBottom) ? (dataLength - options.frozenRow) : options.frozenRow;\n    } else {\n      hasFrozenRows = false;\n    }\n  }\n\n  function setPaneVisibility(){\n    if (hasFrozenColumns()){\n      $paneHeaderR.show();\n      $paneTopR.show();\n\n      if (hasFrozenRows){\n        $paneBottomL.show();\n        $paneBottomR.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    } else {\n      $paneHeaderR.hide();\n      $paneTopR.hide();\n      $paneBottomR.hide();\n\n      if (hasFrozenRows){\n        $paneBottomL.show();\n      } else {\n        $paneBottomR.hide();\n        $paneBottomL.hide();\n      }\n    }\n  }\n\n  function setOverflow(){\n    $viewportTopL.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'scroll') : (hasFrozenRows ? 'hidden' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'hidden') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportTopR.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'scroll') : (hasFrozenRows ? 'hidden' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportBottomL.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'auto' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'hidden' : 'hidden') : (hasFrozenRows ? 'scroll' : 'auto')\n    });\n\n    $viewportBottomR.css({\n      'overflow-x': (hasFrozenColumns()) ? (hasFrozenRows ? 'scroll' : 'auto') : (hasFrozenRows ? 'auto' : 'auto'),\n      'overflow-y': (hasFrozenColumns()) ? (hasFrozenRows ? 'auto' : 'auto') : (hasFrozenRows ? 'auto' : 'auto')\n    });\n  }\n\n  function setScroller(){\n    if (hasFrozenColumns()){\n      $headerScrollContainer = $headerScrollerR;\n      $headerRowScrollContainer = $headerRowScrollerR;\n      $footerRowScrollContainer = $footerRowScrollerR\n\n      if (hasFrozenRows){\n        if (options.frozenBottom){\n          $viewportScrollContainerX = $viewportBottomR;\n          $viewportScrollContainerY = $viewportTopR;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomR;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopR;\n      }\n    } else {\n      $headerScrollContainer = $headerScrollerL;\n      $headerRowScrollContainer = $headerRowScrollerL;\n      $footerRowScrollContainer = $footerRowScrollerL;\n\n      if (hasFrozenRows){\n        if (options.frozenBottom){\n          $viewportScrollContainerX = $viewportBottomL;\n          $viewportScrollContainerY = $viewportTopL;\n        } else {\n          $viewportScrollContainerX = $viewportScrollContainerY = $viewportBottomL;\n        }\n      } else {\n        $viewportScrollContainerX = $viewportScrollContainerY = $viewportTopL;\n      }\n    }\n  }\n\n  function measureCellPaddingAndBorder(){\n    var el;\n    var h = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"];\n    var v = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"];\n\n    el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\"){\n      $.each(h, function(n, val){\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css(\"box-sizing\") != \"border-box\" && el.css(\"-moz-box-sizing\") != \"border-box\" && el.css(\"-webkit-box-sizing\") != \"border-box\"){\n      $.each(h, function(n, val){\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules(){\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($(\"head\"));\n\n    const getRule = rule => `.${uid} ${rule}`\n\n    const rowHeight = (options.rowHeight - cellHeightDiff);\n    const rules = [\n      getRule('.slick-group-header-column { left: 1000px; }'),\n      getRule('.slick-header-column { left: 1000px; }'),\n      getRule(`.slick-top-panel { height: ${options.topPanelHeight}px; }`),\n      getRule(`.slick-headerrow-columns, .${uid} .slick-header-columns { height: ${options.headerRowHeight}px; }`),\n      getRule(`.slick-cell { height: ${rowHeight}px; }`),\n      getRule(`.slick-row { height: ${options.rowHeight}px; }`),\n      getRule(`.slick-footerrow-columns, ${uid} .slick-footer-columns  { height: ${options.footerRowHeight}px; }`)\n    ];\n\n    for (let i = 0; i < columns.length; i++){\n      rules.push(`.${uid} .l${i} { }`);\n      rules.push(`.${uid} .r${i} { }`);\n    }\n\n    if ($style[0].styleSheet){ // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx){\n    if (!stylesheet){\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++){\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]){\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet){\n        throw new Error(\"Cannot find stylesheet.\");\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = (stylesheet.cssRules || stylesheet.rules);\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++){\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      \"left\": columnCssRulesL[idx],\n      \"right\": columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules(){\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy(){\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {});\n\n    var i = plugins.length;\n    while (i--){\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind(\".slickgrid\");\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e){\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock(){\n    return options.editorLock;\n  }\n\n  function getEditController(){\n    return editController;\n  }\n\n  function getColumnIndex(id){\n    return columnsById[id];\n  }\n\n  function autosizeColumns(){\n    var i, c,\n      widths = [],\n      shrinkLeeway = 0,\n      total = 0,\n      prevTotal,\n      availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++){\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable){\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway){\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++){\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth){\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total){ // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth){\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++){\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth){\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += growSize;\n      }\n      if (prevTotal >= total){ // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++){\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]){\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    applyColumnGroupHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender){\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnGroupHeaderWidths(){\n    if (!treeColumns.hasDepth()) return;\n\n    for (var depth = $groupHeadersL.length - 1; depth >= 0; depth--){\n\n      var groupColumns = treeColumns.getColumnsInDepth(depth);\n\n      $().add($groupHeadersL[depth]).add($groupHeadersR[depth]).each(function(i){\n        var $groupHeader = $(this),\n          currentColumnIndex = 0;\n\n        $groupHeader.width(i == 0 ? getHeadersWidthL() : getHeadersWidthR());\n\n        $groupHeader.children().each(function(){\n          var $groupHeaderColumn = $(this);\n\n          var m = $(this).data('column');\n\n          m.width = 0;\n\n          m.columns.forEach(function(){\n            var $headerColumn = $groupHeader.next().children(':eq(' + (currentColumnIndex++) + ')');\n            m.width += $headerColumn.outerWidth();\n          })\n\n          $groupHeaderColumn.width(m.width - headerColumnWidthDiff);\n\n        });\n\n      })\n\n    }\n  }\n\n  function applyColumnHeaderWidths(){\n    if (!initialized){\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children(), ii = headers.length; i < ii; i++){\n      h = $(headers[i]);\n      if (h.css('width') !== columns[i].width - headerColumnWidthDiff){\n        h.css('width', columns[i].width - headerColumnWidthDiff);\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths(){\n    var x = 0,\n      w, rule;\n    for (var i = 0; i < columns.length; i++){\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + \"px\";\n      rule.right.style.right = (((options.frozenColumn != -1 && i > options.frozenColumn) ? canvasWidthR : canvasWidthL) - x - w) + \"px\";\n\n      // If this column is frozen, reset the css left value since the\n      // column starts in a new viewport.\n      if (options.frozenColumn == i){\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setSortColumn(columnId, ascending){\n    setSortColumns([{\n      columnId: columnId,\n      sortAsc: ascending\n    }]);\n  }\n\n  function setSortColumns(cols){\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls.removeClass(\"slick-header-column-sorted\")\n      .find(\".slick-sort-indicator\")\n      .removeClass(\"slick-sort-indicator-asc slick-sort-indicator-desc\");\n\n    $.each(sortColumns, function(i, col){\n      if (col.sortAsc == null){\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null){\n        headerColumnEls.eq(columnIndex)\n          .addClass(\"slick-header-column-sorted\")\n          .find(\".slick-sort-indicator\")\n          .addClass(col.sortAsc ? \"slick-sort-indicator-asc\" : \"slick-sort-indicator-desc\");\n      }\n    });\n  }\n\n  function getSortColumns(){\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges){\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        if (!hash[j]){ // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          if (canCellBeSelected(j, k)){\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {\n      rows: getSelectedRows()\n    }, e);\n  }\n\n  function getColumns(){\n    return columns;\n  }\n\n  function updateColumnCaches(){\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n\n      if (options.frozenColumn == i){\n        x = 0;\n      } else {\n        x += columns[i].width;\n      }\n    }\n  }\n\n  function setColumns(columnDefinitions){\n    var _treeColumns = new Slick.TreeColumns(columnDefinitions);\n    if (_treeColumns.hasDepth()){\n      treeColumns = _treeColumns;\n      columns = treeColumns.extractColumns();\n    } else {\n      columns = columnDefinitions;\n    }\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized){\n      setPaneVisibility();\n      setOverflow();\n\n      invalidateAllRows();\n      createColumnHeaders();\n      createColumnGroupHeaders();\n      createColumnFooter();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      updateCanvasWidth();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions(){\n    return options;\n  }\n\n  function setOptions(args){\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow){\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n\n    setFrozenOptions();\n    setScroller();\n    zombieRowNodeFromLastMouseWheelEvent = null;\n\n    setColumns(treeColumns.extractColumns());\n    render();\n  }\n\n  function validateAndEnforceOptions(){\n    if (options.autoHeight){\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop){\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop){\n      scrollTo(0);\n    }\n  }\n\n  function getData(){\n    return data;\n  }\n\n  function getDataLength(){\n    if (data.getLength){\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew(){\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i){\n    if (data.getItem){\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel(){\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible){\n    if (options.showTopPanel != visible){\n      options.showTopPanel = visible;\n      if (visible){\n        $topPanelScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible){\n    if (options.showHeaderRow != visible){\n      options.showHeaderRow = visible;\n      if (visible){\n        $headerRowScroller.slideDown(\"fast\", resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible){\n    if (options.showFooterRow != visible){\n      options.showFooterRow = visible;\n      if (visible){\n        $footerRowScroller.fadeIn(\"fast\", resizeCanvas);\n      } else {\n        $footerRowScroller.slideDown(\"fast\", resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode(){\n    return $container.get(0);\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row){\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y){\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y){\n    y = Math.max(y, 0);\n    y = Math.min(y, th - $viewportScrollContainerY.height() + ((viewportHasHScroll || hasFrozenColumns()) ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset){\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop){\n      vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\n\n      lastRenderedScrollTop = (scrollTop = prevScrollTop = newScrollTop);\n\n      if (hasFrozenColumns()){\n        $viewportTopL[0].scrollTop = newScrollTop;\n      }\n\n      if (hasFrozenRows){\n        $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\n      }\n\n      $viewportScrollContainerY[0].scrollTop = newScrollTop;\n\n      trigger(self.onViewportChanged, {});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext){\n    if (value == null){\n      return \"\";\n    } else {\n      return (value + \"\").replace(/&/g, \"&\").replace(/</g, \"<\").replace(/>/g, \">\");\n    }\n  }\n\n  function getFormatter(row, column){\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata && rowMetadata.columns && (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return (columnOverrides && columnOverrides.formatter) || (rowMetadata && rowMetadata.formatter) || column.formatter || (options.formatterFactory && options.formatterFactory.getFormatter(column)) || options.defaultFormatter;\n  }\n\n  function callFormatter(row, cell, value, m, item){\n\n    var result;\n\n    // pass metadata to formatter\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    metadata = metadata && metadata.columns;\n\n    if (metadata){\n      var columnData = metadata[m.id] || metadata[cell];\n      result = getFormatter(row, m)(row, cell, value, m, item, columnData);\n    } else {\n      result = getFormatter(row, m)(row, cell, value, m, item);\n    }\n\n    return result;\n  }\n\n  function getEditor(row, cell){\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined){\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined){\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\n  }\n\n  function getDataItemValueForColumn(item, columnDef){\n    if (options.dataItemColumnValueExtractor){\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArrayL, stringArrayR, row, range, dataLength){\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = \"slick-row\" + (hasFrozenRows && row < options.frozenRow ? ' frozen' : '') + (dataLoading ? \" loading\" : \"\") + (row === activeRow ? \" active\" : \"\") + (row % 2 == 1 ? \" odd\" : \" even\");\n\n    if (!d){\n      rowCss += \" \" + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses){\n      rowCss += \" \" + metadata.cssClasses;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var rowHtml = \"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + (getRowTop(row) - frozenRowOffset) + \"px'>\";\n\n    stringArrayL.push(rowHtml);\n\n    if (hasFrozenColumns()){\n      stringArrayR.push(rowHtml);\n    }\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns){\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = (columnData && columnData.colspan) || 1;\n        if (colspan === \"*\"){\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n        if (columnPosLeft[i] > range.rightPx){\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        if (hasFrozenColumns() && (i > options.frozenColumn)){\n          appendCellHtml(stringArrayR, row, i, colspan, d);\n        } else {\n          appendCellHtml(stringArrayL, row, i, colspan, d);\n        }\n      } else if (hasFrozenColumns() && (i <= options.frozenColumn)){\n        appendCellHtml(stringArrayL, row, i, colspan, d);\n      }\n\n      if (colspan > 1){\n        i += (colspan - 1);\n      }\n    }\n\n    stringArrayL.push(\"</div>\");\n\n    if (hasFrozenColumns()){\n      stringArrayR.push(\"</div>\");\n    }\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item){\n    var m = columns[cell];\n    var cellCss = \"slick-cell l\" + cell + \" r\" + Math.min(columns.length - 1, cell + colspan - 1) + (m.cssClass ? \" \" + m.cssClass : \"\");\n\n    if (hasFrozenColumns() && cell <= options.frozenColumn) cellCss += ' frozen';\n\n    if (row === activeRow && cell === activeCell) cellCss += \" active\";\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses){\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]){\n        cellCss += (\" \" + cellCssClasses[key][row][m.id]);\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item){\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(callFormatter(row, cell, value, m, item));\n    }\n\n    stringArray.push(\"</div>\");\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep){\n    for (var i in rowsCache){\n      var removeFrozenRow = true;\n\n      if (hasFrozenRows && ((options.frozenBottom && i >= actualFrozenRow) // Frozen bottom rows\n          ||\n          (!options.frozenBottom && i <= actualFrozenRow) // Frozen top rows\n        )){\n        removeFrozenRow = false;\n      }\n\n      if (((i = parseInt(i, 10)) !== activeRow) && (i < rangeToKeep.top || i > rangeToKeep.bottom) && (removeFrozenRow)){\n        removeRowFromCache(i);\n      }\n    }\n  }\n\n  function invalidate(){\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows(){\n    if (currentEditor){\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache){\n      removeRowFromCache(row);\n    }\n  }\n\n  function removeRowFromCache(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[0] || (hasFrozenColumns() && rowNodeFromLastMouseWheelEvent == cacheEntry.rowNode[1])){\n\n      cacheEntry.rowNode.hide();\n\n      zombieRowNodeFromLastMouseWheelEvent = cacheEntry.rowNode;\n    } else {\n\n      cacheEntry.rowNode.each(function(){\n        this.parentElement.removeChild(this);\n      });\n\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows){\n    var i, rl;\n    if (!rows || !rows.length){\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++){\n      if (currentEditor && activeRow === rows[i]){\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]){\n        removeRowFromCache(rows[i]);\n      }\n    }\n  }\n\n  function invalidateRow(row){\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell){\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode){\n      return;\n    }\n\n    var m = columns[cell],\n      d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell){\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? callFormatter(row, cell, getDataItemValueForColumn(d, m), m, d) : \"\";\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n        node = cacheEntry.cellNodesByColumnIdx[columnIdx][0];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor){\n        currentEditor.loadValue(d);\n      } else if (d){\n        node.innerHTML = callFormatter(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = \"\";\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight(){\n    if (options.autoHeight){\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew() + ((options.frozenColumn == -1) ? $headers.outerHeight() : 0);\n    } else {\n      topPanelH = (options.showTopPanel) ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0;\n\n      headerRowH = (options.showHeaderRow) ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0;\n\n      footerRowH = (options.showFooterRow) ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0;\n\n      viewportH = parseFloat($.css($container[0], \"height\", true)) - parseFloat($.css($container[0], \"paddingTop\", true)) - parseFloat($.css($container[0], \"paddingBottom\", true)) - parseFloat($.css($headerScroller[0], \"height\")) - getVBoxDelta($headerScroller) - topPanelH - headerRowH - footerRowH;\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n  }\n\n  function getViewportWidth(){\n    viewportW = parseFloat($.css($container[0], \"width\", true));\n  }\n\n  function resizeCanvas(){\n    if (!initialized){\n      return;\n    }\n\n    paneTopH = 0\n    paneBottomH = 0\n    viewportTopH = 0\n    viewportBottomH = 0;\n\n    getViewportWidth();\n    getViewportHeight();\n\n    // Account for Frozen Rows\n    if (hasFrozenRows){\n      if (options.frozenBottom){\n        paneTopH = viewportH - frozenRowsHeight - scrollbarDimensions.height;\n\n        paneBottomH = frozenRowsHeight + scrollbarDimensions.height;\n      } else {\n        paneTopH = frozenRowsHeight;\n        paneBottomH = viewportH - frozenRowsHeight;\n      }\n    } else {\n      paneTopH = viewportH;\n    }\n\n    // The top pane includes the top panel and the header row\n    paneTopH += topPanelH + headerRowH + footerRowH;\n\n    if (hasFrozenColumns() && options.autoHeight){\n      paneTopH += scrollbarDimensions.height;\n    }\n\n    // The top viewport does not contain the top panel or header row\n    viewportTopH = paneTopH - topPanelH - headerRowH - footerRowH;\n\n    if (options.autoHeight){\n      if (hasFrozenColumns()){\n        $container.height(\n          paneTopH + parseFloat($.css($headerScrollerL[0], \"height\")));\n      }\n\n      $paneTopL.css('position', 'relative');\n    }\n\n    $paneTopL.css({\n      'top': $paneHeaderL.height(),\n      'height': paneTopH\n    });\n\n    var paneBottomTop = $paneTopL.position().top + paneTopH;\n\n    $viewportTopL.height(viewportTopH);\n\n    if (hasFrozenColumns()){\n      $paneTopR.css({\n        'top': $paneHeaderL.height(),\n        'height': paneTopH\n      });\n\n      $viewportTopR.height(viewportTopH);\n\n      if (hasFrozenRows){\n        $paneBottomL.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $paneBottomR.css({\n          'top': paneBottomTop,\n          'height': paneBottomH\n        });\n\n        $viewportBottomR.height(paneBottomH);\n      }\n    } else {\n      if (hasFrozenRows){\n        $paneBottomL.css({\n          'width': '100%',\n          'height': paneBottomH\n        });\n\n        $paneBottomL.css('top', paneBottomTop);\n      }\n    }\n\n    if (hasFrozenRows){\n      $viewportBottomL.height(paneBottomH);\n\n      if (options.frozenBottom){\n        $canvasBottomL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()){\n          $canvasBottomR.height(frozenRowsHeight);\n        }\n      } else {\n        $canvasTopL.height(frozenRowsHeight);\n\n        if (hasFrozenColumns()){\n          $canvasTopR.height(frozenRowsHeight);\n        }\n      }\n    } else {\n      $viewportTopR.height(viewportTopH);\n    }\n\n    if (options.forceFitColumns){\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount(){\n    if (!initialized){\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = 0;\n    var oldH = (hasFrozenRows && !options.frozenBottom) ? $canvasBottomL.height() : $canvasTopL.height();\n\n    if (hasFrozenRows){\n      var numberOfRows = getDataLength() - options.frozenRow;\n    } else {\n      var numberOfRows = dataLengthIncludingAddNew + (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n    }\n\n    var tempViewportH = $viewportScrollContainerY.height();\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && (numberOfRows * options.rowHeight > tempViewportH);\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache){\n      if (i >= l){\n        removeRowFromCache(i);\n      }\n    }\n\n    th = Math.max(options.rowHeight * numberOfRows, tempViewportH - scrollbarDimensions.height);\n\n    if (activeCellNode && activeRow > l){\n      resetActiveCell();\n    }\n\n    if (th < maxSupportedCssHeight){\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH){\n      if (hasFrozenRows && !options.frozenBottom){\n        $canvasBottomL.css(\"height\", h);\n\n        if (hasFrozenColumns()){\n          $canvasBottomR.css(\"height\", h);\n        }\n      } else {\n        $canvasTopL.css(\"height\", h);\n        $canvasTopR.css(\"height\", h);\n      }\n\n      scrollTop = $viewportScrollContainerY[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = (scrollTop + offset <= th - tempViewportH);\n\n    if (th == 0 || scrollTop == 0){\n      page = offset = 0;\n    } else if (oldScrollTopInRange){\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - tempViewportH);\n    }\n\n    if (h != oldH && options.autoHeight){\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll){\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft){\n    if (viewportTop == null){\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null){\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft){\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1){\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1){\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row){\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry){\n      if (cacheEntry.cellRenderQueue.length){\n        var $lastNode = cacheEntry.rowNode.children().last();\n        while (cacheEntry.cellRenderQueue.length){\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = $lastNode;\n          $lastNode = $lastNode.prev();\n\n          // Hack to retrieve the frozen columns because\n          if ($lastNode.length == 0){\n            $lastNode = $(cacheEntry.rowNode[0]).children().last();\n          }\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row){\n    // Ignore frozen rows\n    if (hasFrozenRows && ((options.frozenBottom && row > actualFrozenRow) // Frozen bottom rows\n        ||\n        (row <= actualFrozenRow) // Frozen top rows\n      )){\n      return;\n    }\n\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx){\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)){\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      // Ignore frozen columns\n      if (i <= options.frozenColumn){\n        continue;\n      }\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx || columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx){\n        if (!(row == activeRow && i == activeCell)){\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove;\n    while ((cellToRemove = cellsToRemove.pop()) != null){\n      cacheEntry.cellNodesByColumnIdx[cellToRemove][0].parentElement.removeChild(cacheEntry.cellNodesByColumnIdx[cellToRemove][0]);\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]){\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range){\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++){\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry){\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++){\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx){\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null){\n          i += (colspan > 1 ? colspan - 1 : 0);\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata){\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === \"*\"){\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += (colspan > 1 ? colspan - 1 : 0);\n      }\n\n      if (cellsAdded){\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length){\n      return;\n    }\n\n    var x = document.createElement(\"div\");\n    x.innerHTML = stringArray.join(\"\");\n\n    var processedRow;\n    var $node;\n    while ((processedRow = processedRows.pop()) != null){\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null){\n        $node = $(x).children().last();\n\n        if (hasFrozenColumns() && (columnIdx > options.frozenColumn)){\n          $(cacheEntry.rowNode[1]).append($node);\n        } else {\n          $(cacheEntry.rowNode[0]).append($node);\n        }\n\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = $node;\n      }\n    }\n  }\n\n  function renderRows(range){\n    var stringArrayL = [],\n      stringArrayR = [],\n      rows = [],\n      needToReselectCell = false,\n      dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++){\n      if (rowsCache[i] || (hasFrozenRows && options.frozenBottom && i == getDataLength())){\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        \"rowNode\": null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        \"cellColSpans\": [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        \"cellNodesByColumnIdx\": [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        \"cellRenderQueue\": []\n      };\n\n      appendRowHtml(stringArrayL, stringArrayR, i, range, dataLength);\n      if (activeCellNode && activeRow === i){\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length){\n      return;\n    }\n\n    var x = document.createElement(\"div\"),\n      xRight = document.createElement(\"div\");\n\n    x.innerHTML = stringArrayL.join(\"\");\n    xRight.innerHTML = stringArrayR.join(\"\");\n\n    for (var i = 0, ii = rows.length; i < ii; i++){\n      if ((hasFrozenRows) && (rows[i] >= actualFrozenRow)){\n        if (hasFrozenColumns()){\n          rowsCache[rows[i]].rowNode = $()\n            .add($(x.firstChild).appendTo($canvasBottomL))\n            .add($(xRight.firstChild).appendTo($canvasBottomR));\n        } else {\n          rowsCache[rows[i]].rowNode = $()\n            .add($(x.firstChild).appendTo($canvasBottomL));\n        }\n      } else if (hasFrozenColumns()){\n        rowsCache[rows[i]].rowNode = $()\n          .add($(x.firstChild).appendTo($canvasTopL))\n          .add($(xRight.firstChild).appendTo($canvasTopR));\n      } else {\n        rowsCache[rows[i]].rowNode = $()\n          .add($(x.firstChild).appendTo($canvasTopL));\n      }\n    }\n\n    if (needToReselectCell){\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing(){\n    if (!options.enableAsyncPostRender){\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function invalidatePostProcessingResults(row){\n    delete postProcessedRows[row];\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions(){\n    for (var row in rowsCache){\n      rowsCache[row].rowNode.css('top', getRowTop(row) + \"px\");\n    }\n  }\n\n  function render(){\n    if (!initialized){\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft){\n\n      if (hasFrozenRows){\n\n        var renderedFrozenRows = $.extend(true, {}, rendered);\n\n        if (options.frozenBottom){\n\n          renderedFrozenRows.top = actualFrozenRow;\n          renderedFrozenRows.bottom = getDataLength();\n        } else {\n\n          renderedFrozenRows.top = 0;\n          renderedFrozenRows.bottom = options.frozenRow;\n        }\n\n        cleanUpAndRenderCells(renderedFrozenRows);\n      }\n\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    // Render frozen rows\n    if (hasFrozenRows){\n      if (options.frozenBottom){\n        renderRows({\n          top: actualFrozenRow,\n          bottom: getDataLength() - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      } else {\n        renderRows({\n          top: 0,\n          bottom: options.frozenRow - 1,\n          leftPx: rendered.leftPx,\n          rightPx: rendered.rightPx\n        });\n      }\n    }\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll(){\n    var scrollLeft = $headerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft){\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll(){\n    var scrollLeft = $footerRowScrollContainer[0].scrollLeft;\n    if (scrollLeft != $viewportScrollContainerX[0].scrollLeft){\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleMouseWheel(e, delta, deltaX, deltaY){\n    var $rowNode = $(e.target).closest(\".slick-row\");\n    var rowNode = $rowNode[0];\n\n    if (rowNode != rowNodeFromLastMouseWheelEvent){\n\n      var $gridCanvas = $rowNode.parents('.grid-canvas');\n      var left = $gridCanvas.hasClass('grid-canvas-left');\n\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent[left ? 0 : 1] != rowNode){\n        var zombieRow = zombieRowNodeFromLastMouseWheelEvent[left || zombieRowNodeFromLastMouseWheelEvent.length == 1 ? 0 : 1];\n        zombieRow.parentElement.removeChild(zombieRow);\n\n        zombieRowNodeFromLastMouseWheelEvent = null;\n      }\n\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n\n    scrollTop = Math.max(0, $viewportScrollContainerY[0].scrollTop - (deltaY * options.rowHeight));\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft + (deltaX * 10);\n    var handled = _handleScroll(true);\n    if (handled) e.preventDefault();\n  }\n\n  function handleScroll(){\n    scrollTop = $viewportScrollContainerY[0].scrollTop;\n    scrollLeft = $viewportScrollContainerX[0].scrollLeft;\n    return _handleScroll(false);\n  }\n\n  function _handleScroll(isMouseWheel){\n    var maxScrollDistanceY = $viewportScrollContainerY[0].scrollHeight - $viewportScrollContainerY[0].clientHeight;\n    var maxScrollDistanceX = $viewportScrollContainerY[0].scrollWidth - $viewportScrollContainerY[0].clientWidth;\n    var hasFrozenCols = hasFrozenColumns();\n\n    // Ceiling the max scroll values\n    if (scrollTop > maxScrollDistanceY){\n      scrollTop = maxScrollDistanceY;\n    }\n    if (scrollLeft > maxScrollDistanceX){\n      scrollLeft = maxScrollDistanceX;\n    }\n\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist){\n      prevScrollLeft = scrollLeft;\n\n      $viewportScrollContainerX[0].scrollLeft = scrollLeft;\n      $headerScrollContainer[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScrollContainer[0].scrollLeft = scrollLeft;\n      $footerRowScrollContainer[0].scrollLeft = scrollLeft;\n\n      if (hasFrozenCols){\n        if (hasFrozenRows){\n          $viewportTopR[0].scrollLeft = scrollLeft;\n        }\n      } else {\n        if (hasFrozenRows){\n          $viewportTopL[0].scrollLeft = scrollLeft;\n        }\n      }\n    }\n\n    if (vScrollDist){\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      if (isMouseWheel){\n        $viewportScrollContainerY[0].scrollTop = scrollTop;\n      }\n\n      if (hasFrozenCols){\n        if (hasFrozenRows && !options.frozenBottom){\n          $viewportBottomL[0].scrollTop = scrollTop;\n        } else {\n          $viewportTopL[0].scrollTop = scrollTop;\n        }\n      }\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH){\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH){\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset){\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist){\n      if (h_render){\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 || Math.abs(lastRenderedScrollLeft - scrollLeft) > 20){\n        if (options.forceSyncScrolling || (\n          Math.abs(lastRenderedScrollTop - scrollTop) < viewportH && Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW)){\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {});\n      }\n    }\n\n    trigger(self.onScroll, {\n      scrollLeft: scrollLeft,\n      scrollTop: scrollTop\n    });\n\n    if (hScrollDist || vScrollDist) return true;\n    return false;\n  }\n\n  function asyncPostProcessRows(){\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow){\n      var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength){\n        continue;\n      }\n\n      if (!postProcessedRows[row]){\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        if (m.asyncPostRender && !postProcessedRows[row][columnIdx]){\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node){\n            m.asyncPostRender(node, row, getDataItem(row), m);\n          }\n          postProcessedRows[row][columnIdx] = true;\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash){\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache){\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash){\n        for (columnId in removedRowHash){\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash){\n        for (columnId in addedRowHash){\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash){\n    if (cellCssClasses[key]){\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function removeCellCssStyles(key){\n    if (!cellCssClasses[key]){\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": null\n    });\n  }\n\n  function setCellCssStyles(key, hash){\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {\n      \"key\": key,\n      \"hash\": hash\n    });\n  }\n\n  function getCellCssStyles(key){\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed){\n    speed = speed || 100;\n    if (rowsCache[row]){\n      var $cell = $(getCellNode(row, cell));\n\n      function toggleCellClass(times){\n        if (!times){\n          return;\n        }\n        setTimeout(function(){\n            $cell.queue(function(){\n              $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n              toggleCellClass(times - 1);\n            });\n          },\n          speed);\n      }\n\n      toggleCellClass(4);\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleDragInit(e, dd){\n    var cell = getCellFromEvent(e);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragInit, dd, e);\n    if (e.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    // if nobody claims to be handling drag'n'drop by stopping immediate propagation,\n    // cancel out of it\n    return false;\n  }\n\n  function handleDragStart(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent){\n    trigger(self.onDragEnd, interactEvent, $.Event('mousedown'));\n  }\n\n  function handleKeyDown(e){\n    trigger(self.onKeyDown, {\n      row: activeRow,\n      cell: activeCell\n    }, e);\n    var handled = e.isImmediatePropagationStopped();\n\n    if (!handled){\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey){\n        if (e.which == 27){\n          if (!getEditorLock().isActive()){\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == 34){\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == 33){\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == 37){\n          handled = navigateLeft();\n        } else if (e.which == 39){\n          handled = navigateRight();\n        } else if (e.which == 38){\n          handled = navigateUp();\n        } else if (e.which == 40){\n          handled = navigateDown();\n        } else if (e.which == 9){\n          handled = navigateNext();\n        } else if (e.which == 13){\n          if (options.editable){\n            if (currentEditor){\n              // adding new row\n              if (activeRow === getDataLength()){\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()){\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == 9 && e.shiftKey && !e.ctrlKey && !e.altKey){\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled){\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error) {\n      }\n    }\n  }\n\n  function handleClick(e){\n    if (!currentEditor){\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || $(e.target).hasClass(\"slick-cell\")){\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)){\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()){\n\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e){\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n    if ($cell.length === 0){\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null){\n      return;\n    }\n\n    trigger(self.onContextMenu, {}, e);\n  }\n\n  function handleDblClick(e){\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onDblClick, {\n      row: cell.row,\n      cell: cell.cell\n    }, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if (options.editable){\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e){\n    trigger(self.onHeaderMouseEnter, {\n      \"column\": $(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e){\n    trigger(self.onHeaderMouseLeave, {\n      \"column\": $(this).data(\"column\")\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e){\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    trigger(self.onHeaderContextMenu, {\n      column: column\n    }, e);\n  }\n\n  function handleHeaderClick(e){\n    var $header = $(e.target).closest(\".slick-header-column\", \".slick-header-columns\");\n    var column = $header && $header.data(\"column\");\n    if (column){\n      trigger(self.onHeaderClick, {\n        column: column\n      }, e);\n    }\n  }\n\n  function handleMouseEnter(e){\n    trigger(self.onMouseEnter, {}, e);\n  }\n\n  function handleMouseLeave(e){\n    trigger(self.onMouseLeave, {}, e);\n  }\n\n  function cellExists(row, cell){\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y){\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++){\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0){\n      cell = 0;\n    }\n\n    return {\n      row: row,\n      cell: cell - 1\n    };\n  }\n\n  function getCellFromNode(cellNode){\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls){\n      throw \"getCellFromNode: cannot get cell - \" + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode){\n    for (var row in rowsCache)\n      for (var i in rowsCache[row].rowNode)\n        if (rowsCache[row].rowNode[i] === rowNode) return row | 0;\n\n    return null;\n  }\n\n  function getFrozenRowOffset(row){\n    var offset = (hasFrozenRows) ? (options.frozenBottom) ? (row >= actualFrozenRow) ? (h < viewportTopH) ? (actualFrozenRow * options.rowHeight) : h : 0 : (row >= actualFrozenRow) ? frozenRowsHeight : 0 : 0;\n\n    return offset;\n  }\n\n  function getCellFromEvent(e){\n    var row, cell;\n    var $cell = $(e.target).closest(\".slick-cell\", $canvas);\n    if (!$cell.length){\n      return null;\n    }\n\n    row = getRowFromNode($cell[0].parentNode);\n\n    if (hasFrozenRows){\n\n      var c = $cell.parents('.grid-canvas').offset();\n\n      var rowOffset = 0;\n      var isBottom = $cell.parents('.grid-canvas-bottom').length;\n\n      if (isBottom){\n        rowOffset = (options.frozenBottom) ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      row = getCellFromPoint(e.clientX - c.left, e.clientY - c.top + rowOffset + $(document).scrollTop()).row;\n    }\n\n    cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null){\n      return null;\n    } else {\n      return {\n        \"row\": row,\n        \"cell\": cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell){\n    if (!cellExists(row, cell)){\n      return null;\n    }\n\n    var frozenRowOffset = getFrozenRowOffset(row);\n\n    var y1 = getRowTop(row) - frozenRowOffset;\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++){\n      x1 += columns[i].width;\n\n      if (options.frozenColumn == i){\n        x1 = 0;\n      }\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell(){\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus(){\n    if (tabbingDirection == -1){\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging){\n    // Don't scroll to frozen cells\n    if (cell <= options.frozenColumn){\n      return;\n    }\n\n    if (row < actualFrozenRow){\n      scrollRowIntoView(row, doPaging);\n    }\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n      right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n      scrollRight = scrollLeft + $viewportScrollContainerX.width();\n\n    if (left < scrollLeft){\n      $viewportScrollContainerX.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight){\n      $viewportScrollContainerX.scrollLeft(Math.min(left, right - $viewportScrollContainerX[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode){\n    if (activeCellNode !== null){\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass(\"active\");\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).removeClass(\"active\");\n      }\n    }\n\n    var activeCellChanged = (activeCellNode !== newCell);\n    activeCellNode = newCell;\n\n    if (activeCellNode != null){\n      var $activeCellNode = $(activeCellNode);\n      var $activeCellOffset = $activeCellNode.offset();\n\n      var rowOffset = Math.floor($activeCellNode.parents('.grid-canvas').offset().top);\n      var isBottom = $activeCellNode.parents('.grid-canvas-bottom').length;\n\n      if (hasFrozenRows && isBottom){\n        rowOffset -= (options.frozenBottom) ? $canvasTopL.height() : frozenRowsHeight;\n      }\n\n      var cell = getCellFromPoint($activeCellOffset.left, Math.ceil($activeCellOffset.top) - rowOffset);\n\n      activeRow = cell.row;\n      activeCell = activePosX = activeCell = activePosX = getCellFromNode(activeCellNode[0]);\n\n      $activeCellNode.addClass(\"active\");\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).addClass('active');\n      }\n\n      if (opt_editMode == null){\n        opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\n      }\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)){\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading){\n          h_editorLoader = setTimeout(function(){\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged){\n      setTimeout(scrollActiveCellIntoView, 50);\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection(){\n    if (document.selection && document.selection.empty){\n      try {\n        //IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e) {\n      }\n    } else if (window.getSelection){\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges){\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell){\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)){\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength){\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)){\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal(){\n    if (!currentEditor){\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {\n      editor: currentEditor\n    });\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode){\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass(\"editable invalid\");\n      if (d){\n        var column = columns[activeCell];\n        activeCellNode[0].innerHTML = callFormatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)){\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor){\n    if (!activeCellNode){\n      return;\n    }\n    if (!options.editable){\n      throw \"Grid : makeActiveCellEditable : should never get called when options.editable is false\";\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)){\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n        row: activeRow,\n        cell: activeCell,\n        item: item,\n        column: columnDef\n      }) === false){\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass(\"editable\");\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor){\n      activeCellNode[0].innerHTML = \"\";\n    }\n\n    currentEditor = new (editor || getEditor(activeRow, activeCell))({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode[0]),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item){\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position){\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus(){\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()){\n      setFocus();\n      if (options.autoEdit){\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus(){\n    if (getEditorLock().cancelCurrentEdit()){\n      setFocus();\n    }\n  }\n\n  function absBox(elem){\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body){\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css(\"overflowY\") != \"visible\"){\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css(\"overflowX\") != \"visible\"){\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent){\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition(){\n    return absBox(activeCellNode[0]);\n  }\n\n  function getGridPosition(){\n    return absBox($container[0])\n  }\n\n  function handleActiveCellPositionChange(){\n    if (!activeCellNode){\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {});\n\n    if (currentEditor){\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide){\n        if (!cellBox.visible){\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position){\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor(){\n    return currentEditor;\n  }\n\n  function getActiveCell(){\n    if (!activeCellNode){\n      return null;\n    } else {\n      return {\n        row: activeRow,\n        cell: activeCell\n      };\n    }\n  }\n\n  function getActiveCellNode(){\n    return activeCellNode;\n  }\n\n  function scrollActiveCellIntoView(){\n    if (activeRow != null && activeCell != null){\n      scrollCellIntoView(activeRow, activeCell);\n    }\n  }\n\n  function scrollRowIntoView(row, doPaging){\n\n    if (!hasFrozenRows || (!options.frozenBottom && row > actualFrozenRow - 1) || (options.frozenBottom && row < actualFrozenRow - 1)){\n\n      var viewportScrollH = $viewportScrollContainerY.height();\n\n      var rowAtTop = row * options.rowHeight;\n      var rowAtBottom = (row + 1) * options.rowHeight - viewportScrollH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n      // need to page down?\n      if ((row + 1) * options.rowHeight > scrollTop + viewportScrollH + offset){\n        scrollTo(doPaging ? rowAtTop : rowAtBottom);\n        render();\n      }\n      // or page up?\n      else if (row * options.rowHeight < scrollTop + offset){\n        scrollTo(doPaging ? rowAtBottom : rowAtTop);\n        render();\n      }\n    }\n  }\n\n  function scrollRowToTop(row){\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir){\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null){\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew){\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0){\n        row = 0;\n      }\n\n      var cell = 0,\n        prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX){\n        if (canCellBeActive(row, cell)){\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null){\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown(){\n    scrollPage(1);\n  }\n\n  function navigatePageUp(){\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell){\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns){\n      return 1;\n    }\n\n    var columnData = columns[cell] && (metadata.columns[columns[cell].id] || metadata.columns[cell]);\n    var colspan = (columnData && columnData.colspan);\n    if (colspan === \"*\"){\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row){\n    var cell = 0;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row){\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX){\n    if (cell >= columns.length){\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    }\n    while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length){\n      return {\n        \"row\": row,\n        \"cell\": cell,\n        \"posX\": cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX){\n    if (cell <= 0){\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell){\n      return null;\n    }\n\n    var prev = {\n      \"row\": row,\n      \"cell\": firstFocusableCell,\n      \"posX\": firstFocusableCell\n    };\n    var pos;\n    while (true){\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos){\n        return null;\n      }\n      if (pos.cell >= cell){\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX){\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true){\n      if (++row >= dataLengthIncludingAddNew){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX){\n    var prevCell;\n    while (true){\n      if (--row < 0){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          \"row\": row,\n          \"cell\": prevCell,\n          \"posX\": posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX){\n    if (row == null && cell == null){\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)){\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos){\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew){\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null){\n        return {\n          \"row\": row,\n          \"cell\": firstFocusableCell,\n          \"posX\": firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX){\n    if (row == null && cell == null){\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)){\n        return {\n          \"row\": row,\n          \"cell\": cell,\n          \"posX\": cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos){\n      pos = gotoLeft(row, cell, posX);\n      if (pos){\n        break;\n      }\n      if (--row < 0){\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null){\n        pos = {\n          \"row\": row,\n          \"cell\": lastSelectableCell,\n          \"posX\": lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight(){\n    return navigate(\"right\");\n  }\n\n  function navigateLeft(){\n    return navigate(\"left\");\n  }\n\n  function navigateDown(){\n    return navigate(\"down\");\n  }\n\n  function navigateUp(){\n    return navigate(\"up\");\n  }\n\n  function navigateNext(){\n    return navigate(\"next\");\n  }\n\n  function navigatePrev(){\n    return navigate(\"prev\");\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir){\n    if (!options.enableCellNavigation){\n      return false;\n    }\n\n    if (!activeCellNode && dir != \"prev\" && dir != \"next\"){\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      \"up\": -1,\n      \"down\": 1,\n      \"left\": -1,\n      \"right\": 1,\n      \"prev\": -1,\n      \"next\": 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      \"up\": gotoUp,\n      \"down\": gotoDown,\n      \"left\": gotoLeft,\n      \"right\": gotoRight,\n      \"prev\": gotoPrev,\n      \"next\": gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos){\n      if (hasFrozenRows && options.frozenBottom & pos.row == getDataLength()){\n        return;\n      }\n\n      var isAddNewRow = (pos.row == getDataLength());\n\n      if ((!options.frozenBottom && pos.row >= actualFrozenRow) || (options.frozenBottom && pos.row < actualFrozenRow)){\n        scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      }\n\n      setActiveCellInternal(getCellNode(pos.row, pos.cell))\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell){\n    if (rowsCache[row]){\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell){\n    if (!initialized){\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return;\n    }\n\n    if (!options.enableCellNavigation){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell){\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === \"boolean\"){\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columns[cell] && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === \"boolean\"){\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === \"boolean\"){\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell] && columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell){\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === \"boolean\"){\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === \"boolean\"){\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit){\n    if (!initialized){\n      return;\n    }\n    if (!canCellBeActive(row, cell)){\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || (row === getDataLength()) || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor){\n      setFocus();\n    }\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit(){\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor){\n      if (currentEditor.isValueChanged()){\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid){\n          if (activeRow < getDataLength()){\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function(){\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              },\n              undo: function(){\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item\n                });\n              }\n            };\n\n            if (options.editCommandHandler){\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {\n              item: newItem,\n              column: column\n            });\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass(\"invalid\");\n          $(activeCellNode).width(); // force layout\n          $(activeCellNode).addClass(\"invalid\");\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit(){\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows){\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows(){\n    if (!selectionModel){\n      throw \"Selection model is not set\";\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows){\n    if (!selectionModel){\n      throw \"Selection model is not set\";\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function(){\n    var s = \"\";\n\n    s += (\"\\n\" + \"counter_rows_rendered:  \" + counter_rows_rendered);\n    s += (\"\\n\" + \"counter_rows_removed:  \" + counter_rows_removed);\n    s += (\"\\n\" + \"renderedRows:  \" + renderedRows);\n    s += (\"\\n\" + \"numVisibleRows:  \" + numVisibleRows);\n    s += (\"\\n\" + \"maxSupportedCssHeight:  \" + maxSupportedCssHeight);\n    s += (\"\\n\" + \"n(umber of pages):  \" + n);\n    s += (\"\\n\" + \"(current) page:  \" + page);\n    s += (\"\\n\" + \"page height (ph):  \" + ph);\n    s += (\"\\n\" + \"vScrollDir:  \" + vScrollDir);\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function(expr){\n    return eval(expr);\n  };\n\n  //////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  $.extend(this, {\n    \"slickGridVersion\": \"2.1\",\n\n    // Events\n    \"onScroll\": new Slick.Event(),\n    \"onSort\": new Slick.Event(),\n    \"onHeaderMouseEnter\": new Slick.Event(),\n    \"onHeaderMouseLeave\": new Slick.Event(),\n    \"onHeaderContextMenu\": new Slick.Event(),\n    \"onHeaderClick\": new Slick.Event(),\n    \"onHeaderCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderCellDestroy\": new Slick.Event(),\n    \"onHeaderRowCellRendered\": new Slick.Event(),\n    \"onFooterRowCellRendered\": new Slick.Event(),\n    \"onBeforeHeaderRowCellDestroy\": new Slick.Event(),\n    \"onBeforeFooterRowCellDestroy\": new Slick.Event(),\n    \"onMouseEnter\": new Slick.Event(),\n    \"onMouseLeave\": new Slick.Event(),\n    \"onClick\": new Slick.Event(),\n    \"onDblClick\": new Slick.Event(),\n    \"onContextMenu\": new Slick.Event(),\n    \"onKeyDown\": new Slick.Event(),\n    \"onAddNewRow\": new Slick.Event(),\n    \"onValidationError\": new Slick.Event(),\n    \"onViewportChanged\": new Slick.Event(),\n    \"onColumnsReordered\": new Slick.Event(),\n    \"onColumnsResized\": new Slick.Event(),\n    \"onCellChange\": new Slick.Event(),\n    \"onBeforeEditCell\": new Slick.Event(),\n    \"onBeforeCellEditorDestroy\": new Slick.Event(),\n    \"onBeforeDestroy\": new Slick.Event(),\n    \"onActiveCellChanged\": new Slick.Event(),\n    \"onActiveCellPositionChanged\": new Slick.Event(),\n    \"onDragInit\": new Slick.Event(),\n    \"onDragStart\": new Slick.Event(),\n    \"onDrag\": new Slick.Event(),\n    \"onDragEnd\": new Slick.Event(),\n    \"onSelectedRowsChanged\": new Slick.Event(),\n    \"onCellCssStylesChanged\": new Slick.Event(),\n\n    // Methods\n    \"registerPlugin\": registerPlugin,\n    \"unregisterPlugin\": unregisterPlugin,\n    \"getColumns\": getColumns,\n    \"setColumns\": setColumns,\n    \"getColumnIndex\": getColumnIndex,\n    \"updateColumnHeader\": updateColumnHeader,\n    \"setSortColumn\": setSortColumn,\n    \"setSortColumns\": setSortColumns,\n    \"getSortColumns\": getSortColumns,\n    \"autosizeColumns\": autosizeColumns,\n    \"getOptions\": getOptions,\n    \"setOptions\": setOptions,\n    \"getData\": getData,\n    \"getDataLength\": getDataLength,\n    \"getDataItem\": getDataItem,\n    \"setData\": setData,\n    \"getSelectionModel\": getSelectionModel,\n    \"setSelectionModel\": setSelectionModel,\n    \"getSelectedRows\": getSelectedRows,\n    \"setSelectedRows\": setSelectedRows,\n    \"getContainerNode\": getContainerNode,\n\n    \"render\": render,\n    \"invalidate\": invalidate,\n    \"invalidateRow\": invalidateRow,\n    \"invalidateRows\": invalidateRows,\n    \"invalidateAllRows\": invalidateAllRows,\n    \"updateCell\": updateCell,\n    \"updateRow\": updateRow,\n    \"getViewport\": getVisibleRange,\n    \"getRenderedRange\": getRenderedRange,\n    \"resizeCanvas\": resizeCanvas,\n    \"updateRowCount\": updateRowCount,\n    \"scrollRowIntoView\": scrollRowIntoView,\n    \"scrollRowToTop\": scrollRowToTop,\n    \"scrollCellIntoView\": scrollCellIntoView,\n    \"getCanvasNode\": getCanvasNode,\n    \"getCanvases\": getCanvases,\n    \"getActiveCanvasNode\": getActiveCanvasNode,\n    \"setActiveCanvasNode\": setActiveCanvasNode,\n    \"getViewportNode\": getViewportNode,\n    \"getActiveViewportNode\": getActiveViewportNode,\n    \"setActiveViewportNode\": setActiveViewportNode,\n    \"focus\": setFocus,\n\n    \"getCellFromPoint\": getCellFromPoint,\n    \"getCellFromEvent\": getCellFromEvent,\n    \"getActiveCell\": getActiveCell,\n    \"setActiveCell\": setActiveCell,\n    \"getActiveCellNode\": getActiveCellNode,\n    \"getActiveCellPosition\": getActiveCellPosition,\n    \"resetActiveCell\": resetActiveCell,\n    \"editActiveCell\": makeActiveCellEditable,\n    \"getCellEditor\": getCellEditor,\n    \"getCellNode\": getCellNode,\n    \"getCellNodeBox\": getCellNodeBox,\n    \"canCellBeSelected\": canCellBeSelected,\n    \"canCellBeActive\": canCellBeActive,\n    \"navigatePrev\": navigatePrev,\n    \"navigateNext\": navigateNext,\n    \"navigateUp\": navigateUp,\n    \"navigateDown\": navigateDown,\n    \"navigateLeft\": navigateLeft,\n    \"navigateRight\": navigateRight,\n    \"navigatePageUp\": navigatePageUp,\n    \"navigatePageDown\": navigatePageDown,\n    \"gotoCell\": gotoCell,\n    \"getTopPanel\": getTopPanel,\n    \"setTopPanelVisibility\": setTopPanelVisibility,\n    \"setHeaderRowVisibility\": setHeaderRowVisibility,\n    \"getHeaderRow\": getHeaderRow,\n    \"getHeaderRowColumn\": getHeaderRowColumn,\n    \"setFooterRowVisibility\": setFooterRowVisibility,\n    \"getFooterRow\": getFooterRow,\n    \"getFooterRowColumn\": getFooterRowColumn,\n    \"getGridPosition\": getGridPosition,\n    \"flashCell\": flashCell,\n    \"addCellCssStyles\": addCellCssStyles,\n    \"setCellCssStyles\": setCellCssStyles,\n    \"removeCellCssStyles\": removeCellCssStyles,\n    \"getCellCssStyles\": getCellCssStyles,\n    \"getFrozenRowOffset\": getFrozenRowOffset,\n\n    \"init\": finishInitialization,\n    \"destroy\": destroy,\n\n    // IEditor implementation\n    \"getEditorLock\": getEditorLock,\n    \"getEditController\": getEditController\n  });\n\n  init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick-frozen.grid.js","import Slick  from './slick.core';\nimport $      from 'jquery';\n\nconst Aggregators = {\n  Avg: AvgAggregator,\n  Min: MinAggregator,\n  Max: MaxAggregator,\n  Sum: SumAggregator\n};\n\nconst Data = {\n  DataView,\n  Aggregators\n};\n\nexport default Data;\n\n/** *\n * A sample Model implementation.\n * Provides a filtered view of the underlying data.\n *\n * Relies on the data item having an \"id\" property uniquely identifying it.\n */\nfunction DataView(options){\n  var self = this;\n\n  var defaults = {\n    groupItemMetadataProvider: null,\n    inlineFilters: false\n  };\n\n  // private\n  var idProperty = 'id';  // property holding a unique row id\n  var items = [];         // data by index\n  var rows = [];          // data by row\n  var idxById = {};       // indexes by id\n  var rowsById = null;    // rows by id; lazy-calculated\n  var filter = null;      // filter function\n  var updated = null;     // updated item ids\n  var suspend = false;    // suspends the recalculation\n  var sortAsc = true;\n  var fastSortField;\n  var sortComparer;\n  var refreshHints = {};\n  var prevRefreshHints = {};\n  var filterArgs;\n  var filteredItems = [];\n  var compiledFilter;\n  var compiledFilterWithCaching;\n  var filterCache = [];\n\n  // grouping\n  var groupingInfoDefaults = {\n    getter: null,\n    formatter: null,\n    comparer: function(a, b){\n      return (a.value === b.value ? 0 :\n          (a.value > b.value ? 1 : -1)\n      );\n    },\n    predefinedValues: [],\n    aggregators: [],\n    aggregateEmpty: false,\n    aggregateCollapsed: false,\n    aggregateChildGroups: false,\n    collapsed: false,\n    displayTotalsRow: true,\n    lazyTotalsCalculation: false\n  };\n  var groupingInfos = [];\n  var groups = [];\n  var toggledGroupsByLevel = [];\n  var groupingDelimiter = ':|:';\n\n  var pagesize = 0;\n  var pagenum = 0;\n  var totalRows = 0;\n\n  // events\n  var onRowCountChanged = new Slick.Event();\n  var onRowsChanged = new Slick.Event();\n  var onPagingInfoChanged = new Slick.Event();\n\n  options = $.extend(true, {}, defaults, options);\n\n  function beginUpdate(){\n    suspend = true;\n  }\n\n  function endUpdate(){\n    suspend = false;\n    refresh();\n  }\n\n  function setRefreshHints(hints){\n    refreshHints = hints;\n  }\n\n  function setFilterArgs(args){\n    filterArgs = args;\n  }\n\n  function updateIdxById(startingIndex){\n    startingIndex = startingIndex || 0;\n    var id;\n    for (var i = startingIndex, l = items.length; i < l; i++){\n      id = items[i][idProperty];\n      if (id === undefined){\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n      idxById[id] = i;\n    }\n  }\n\n  function ensureIdUniqueness(){\n    var id;\n    for (var i = 0, l = items.length; i < l; i++){\n      id = items[i][idProperty];\n      if (id === undefined || idxById[id] !== i){\n        throw 'Each data element must implement a unique \\'id\\' property';\n      }\n    }\n  }\n\n  function getItems(){\n    return items;\n  }\n\n  function setItems(data, objectIdProperty){\n    if (objectIdProperty !== undefined){\n      idProperty = objectIdProperty;\n    }\n    items = filteredItems = data;\n    idxById = {};\n    updateIdxById();\n    ensureIdUniqueness();\n    refresh();\n  }\n\n  function setPagingOptions(args){\n    if (args.pageSize != undefined){\n      pagesize = args.pageSize;\n      pagenum = pagesize ? Math.min(pagenum, Math.max(0, Math.ceil(totalRows / pagesize) - 1)) : 0;\n    }\n\n    if (args.pageNum != undefined){\n      pagenum = Math.min(args.pageNum, Math.max(0, Math.ceil(totalRows / pagesize) - 1));\n    }\n\n    onPagingInfoChanged.notify(getPagingInfo(), null, self);\n\n    refresh();\n  }\n\n  function getPagingInfo(){\n    var totalPages = pagesize ? Math.max(1, Math.ceil(totalRows / pagesize)) : 1;\n    return {pageSize: pagesize, pageNum: pagenum, totalRows: totalRows, totalPages: totalPages, dataView: self};\n  }\n\n  function sort(comparer, ascending){\n    sortAsc = ascending;\n    sortComparer = comparer;\n    fastSortField = null;\n    if (ascending === false){\n      items.reverse();\n    }\n    items.sort(comparer);\n    if (ascending === false){\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  /** *\n   * Provides a workaround for the extremely slow sorting in IE.\n   * Does a [lexicographic] sort on a give column by temporarily overriding Object.prototype.toString\n   * to return the value of that field and then doing a native Array.sort().\n   */\n  function fastSort(field, ascending){\n    sortAsc = ascending;\n    fastSortField = field;\n    sortComparer = null;\n    var oldToString = Object.prototype.toString;\n    Object.prototype.toString = (typeof field == 'function') ? field : function(){\n      return this[field];\n    };\n    // an extra reversal for descending sort keeps the sort stable\n    // (assuming a stable native sort implementation, which isn't true in some cases)\n    if (ascending === false){\n      items.reverse();\n    }\n    items.sort();\n    Object.prototype.toString = oldToString;\n    if (ascending === false){\n      items.reverse();\n    }\n    idxById = {};\n    updateIdxById();\n    refresh();\n  }\n\n  function reSort(){\n    if (sortComparer){\n      sort(sortComparer, sortAsc);\n    } else if (fastSortField){\n      fastSort(fastSortField, sortAsc);\n    }\n  }\n\n  function setFilter(filterFn){\n    filter = filterFn;\n    if (options.inlineFilters){\n      compiledFilter = compileFilter();\n      compiledFilterWithCaching = compileFilterWithCaching();\n    }\n    refresh();\n  }\n\n  function getGrouping(){\n    return groupingInfos;\n  }\n\n  function setGrouping(groupingInfo){\n    if (!options.groupItemMetadataProvider){\n      options.groupItemMetadataProvider = new Data.GroupItemMetadataProvider();\n    }\n\n    groups = [];\n    toggledGroupsByLevel = [];\n    groupingInfo = groupingInfo || [];\n    groupingInfos = (groupingInfo instanceof Array) ? groupingInfo : [groupingInfo];\n\n    for (var i = 0; i < groupingInfos.length; i++){\n      var gi = groupingInfos[i] = $.extend(true, {}, groupingInfoDefaults, groupingInfos[i]);\n      gi.getterIsAFn = typeof gi.getter === 'function';\n\n      // pre-compile accumulator loops\n      gi.compiledAccumulators = [];\n      var idx = gi.aggregators.length;\n      while (idx--){\n        gi.compiledAccumulators[idx] = compileAccumulatorLoop(gi.aggregators[idx]);\n      }\n\n      toggledGroupsByLevel[i] = {};\n    }\n\n    refresh();\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function groupBy(valueGetter, valueFormatter, sortComparer){\n    if (valueGetter == null){\n      setGrouping([]);\n      return;\n    }\n\n    setGrouping({\n      getter: valueGetter,\n      formatter: valueFormatter,\n      comparer: sortComparer\n    });\n  }\n\n  /**\n   * @deprecated Please use {@link setGrouping}.\n   */\n  function setAggregators(groupAggregators, includeCollapsed){\n    if (!groupingInfos.length){\n      throw new Error('At least one grouping must be specified before calling setAggregators().');\n    }\n\n    groupingInfos[0].aggregators = groupAggregators;\n    groupingInfos[0].aggregateCollapsed = includeCollapsed;\n\n    setGrouping(groupingInfos);\n  }\n\n  function getItemByIdx(i){\n    return items[i];\n  }\n\n  function getIdxById(id){\n    return idxById[id];\n  }\n\n  function ensureRowsByIdCache(){\n    if (!rowsById){\n      rowsById = {};\n      for (var i = 0, l = rows.length; i < l; i++){\n        rowsById[rows[i][idProperty]] = i;\n      }\n    }\n  }\n\n  function getRowById(id){\n    ensureRowsByIdCache();\n    return rowsById[id];\n  }\n\n  function getItemById(id){\n    return items[idxById[id]];\n  }\n\n  function mapIdsToRows(idArray){\n    var rows = [];\n    ensureRowsByIdCache();\n    for (var i = 0, l = idArray.length; i < l; i++){\n      var row = rowsById[idArray[i]];\n      if (row != null){\n        rows[rows.length] = row;\n      }\n    }\n    return rows;\n  }\n\n  function mapRowsToIds(rowArray){\n    var ids = [];\n    for (var i = 0, l = rowArray.length; i < l; i++){\n      if (rowArray[i] < rows.length){\n        ids[ids.length] = rows[rowArray[i]][idProperty];\n      }\n    }\n    return ids;\n  }\n\n  function updateItem(id, item){\n    if (idxById[id] === undefined || id !== item[idProperty]){\n      throw 'Invalid or non-matching id';\n    }\n    items[idxById[id]] = item;\n    if (!updated){\n      updated = {};\n    }\n    updated[id] = true;\n    refresh();\n  }\n\n  function insertItem(insertBefore, item){\n    items.splice(insertBefore, 0, item);\n    updateIdxById(insertBefore);\n    refresh();\n  }\n\n  function addItem(item){\n    items.push(item);\n    updateIdxById(items.length - 1);\n    refresh();\n  }\n\n  function deleteItem(id){\n    var idx = idxById[id];\n    if (idx === undefined){\n      throw 'Invalid id';\n    }\n    delete idxById[id];\n    items.splice(idx, 1);\n    updateIdxById(idx);\n    refresh();\n  }\n\n  function getLength(){\n    return rows.length;\n  }\n\n  function getItem(i){\n    var item = rows[i];\n\n    // if this is a group row, make sure totals are calculated and update the title\n    if (item && item.__group && item.totals && !item.totals.initialized){\n      var gi = groupingInfos[item.level];\n      if (!gi.displayTotalsRow){\n        calculateTotals(item.totals);\n        item.title = gi.formatter ? gi.formatter(item) : item.value;\n      }\n    }\n    // if this is a totals row, make sure it's calculated\n    else if (item && item.__groupTotals && !item.initialized){\n      calculateTotals(item);\n    }\n\n    return item;\n  }\n\n  function getItemMetadata(i){\n    var item = rows[i];\n    if (item === undefined){\n      return null;\n    }\n\n    // overrides for grouping rows\n    if (item.__group){\n      return options.groupItemMetadataProvider.getGroupRowMetadata(item);\n    }\n\n    // overrides for totals rows\n    if (item.__groupTotals){\n      return options.groupItemMetadataProvider.getTotalsRowMetadata(item);\n    }\n\n    return null;\n  }\n\n  function expandCollapseAllGroups(level, collapse){\n    if (level == null){\n      for (var i = 0; i < groupingInfos.length; i++){\n        toggledGroupsByLevel[i] = {};\n        groupingInfos[i].collapsed = collapse;\n      }\n    } else {\n      toggledGroupsByLevel[level] = {};\n      groupingInfos[level].collapsed = collapse;\n    }\n    refresh();\n  }\n\n  /**\n   * @param level {Number} Optional level to collapse.  If not specified, applies to all levels.\n   */\n  function collapseAllGroups(level){\n    expandCollapseAllGroups(level, true);\n  }\n\n  /**\n   * @param level {Number} Optional level to expand.  If not specified, applies to all levels.\n   */\n  function expandAllGroups(level){\n    expandCollapseAllGroups(level, false);\n  }\n\n  function expandCollapseGroup(level, groupingKey, collapse){\n    toggledGroupsByLevel[level][groupingKey] = groupingInfos[level].collapsed ^ collapse;\n    refresh();\n  }\n\n  /**\n   * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     variable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling collapseGroup('high', '10%') will collapse the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function collapseGroup(varArgs){\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1){\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, true);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), true);\n    }\n  }\n\n  /**\n   * @param varArgs Either a Slick.Group's \"groupingKey\" property, or a\n   *     variable argument list of grouping values denoting a unique path to the row.  For\n   *     example, calling expandGroup('high', '10%') will expand the '10%' subgroup of\n   *     the 'high' group.\n   */\n  function expandGroup(varArgs){\n    var args = Array.prototype.slice.call(arguments);\n    var arg0 = args[0];\n    if (args.length == 1 && arg0.indexOf(groupingDelimiter) != -1){\n      expandCollapseGroup(arg0.split(groupingDelimiter).length - 1, arg0, false);\n    } else {\n      expandCollapseGroup(args.length - 1, args.join(groupingDelimiter), false);\n    }\n  }\n\n  function getGroups(){\n    return groups;\n  }\n\n  function extractGroups(rows, parentGroup){\n    var group;\n    var val;\n    var groups = [];\n    var groupsByVal = {};\n    var r;\n    var level = parentGroup ? parentGroup.level + 1 : 0;\n    var gi = groupingInfos[level];\n\n    for (var i = 0, l = gi.predefinedValues.length; i < l; i++){\n      val = gi.predefinedValues[i];\n      group = groupsByVal[val];\n      if (!group){\n        group = new Slick.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n    }\n\n    for (var i = 0, l = rows.length; i < l; i++){\n      r = rows[i];\n      val = gi.getterIsAFn ? gi.getter(r) : r[gi.getter];\n      group = groupsByVal[val];\n      if (!group){\n        group = new Slick.Group();\n        group.value = val;\n        group.level = level;\n        group.groupingKey = (parentGroup ? parentGroup.groupingKey + groupingDelimiter : '') + val;\n        groups[groups.length] = group;\n        groupsByVal[val] = group;\n      }\n\n      group.rows[group.count++] = r;\n    }\n\n    if (level < groupingInfos.length - 1){\n      for (var i = 0; i < groups.length; i++){\n        group = groups[i];\n        group.groups = extractGroups(group.rows, group);\n      }\n    }\n\n    groups.sort(groupingInfos[level].comparer);\n\n    return groups;\n  }\n\n  function calculateTotals(totals){\n    var group = totals.group;\n    var gi = groupingInfos[group.level];\n    var isLeafLevel = (group.level == groupingInfos.length);\n    var agg, idx = gi.aggregators.length;\n\n    if (!isLeafLevel && gi.aggregateChildGroups){\n      // make sure all the subgroups are calculated\n      var i = group.groups.length;\n      while (i--){\n        if (!group.groups[i].totals.initialized){\n          calculateTotals(group.groups[i].totals);\n        }\n      }\n    }\n\n    while (idx--){\n      agg = gi.aggregators[idx];\n      agg.init();\n      if (!isLeafLevel && gi.aggregateChildGroups){\n        gi.compiledAccumulators[idx].call(agg, group.groups);\n      } else {\n        gi.compiledAccumulators[idx].call(agg, group.rows);\n      }\n      agg.storeResult(totals);\n    }\n    totals.initialized = true;\n  }\n\n  function addGroupTotals(group){\n    var gi = groupingInfos[group.level];\n    var totals = new Slick.GroupTotals();\n    totals.group = group;\n    group.totals = totals;\n    if (!gi.lazyTotalsCalculation){\n      calculateTotals(totals);\n    }\n  }\n\n  function addTotals(groups, level){\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupCollapsed = gi.collapsed;\n    var toggledGroups = toggledGroupsByLevel[level];\n    var idx = groups.length, g;\n    while (idx--){\n      g = groups[idx];\n\n      if (g.collapsed && !gi.aggregateCollapsed){\n        continue;\n      }\n\n      // Do a depth-first aggregation so that parent group aggregators can access subgroup totals.\n      if (g.groups){\n        addTotals(g.groups, level + 1);\n      }\n\n      if (gi.aggregators.length && (\n        gi.aggregateEmpty || g.rows.length || (g.groups && g.groups.length))){\n        addGroupTotals(g);\n      }\n\n      g.collapsed = groupCollapsed ^ toggledGroups[g.groupingKey];\n      g.title = gi.formatter ? gi.formatter(g) : g.value;\n    }\n  }\n\n  function flattenGroupedRows(groups, level){\n    level = level || 0;\n    var gi = groupingInfos[level];\n    var groupedRows = [], rows, gl = 0, g;\n    for (var i = 0, l = groups.length; i < l; i++){\n      g = groups[i];\n      groupedRows[gl++] = g;\n\n      if (!g.collapsed){\n        rows = g.groups ? flattenGroupedRows(g.groups, level + 1) : g.rows;\n        for (var j = 0, jj = rows.length; j < jj; j++){\n          groupedRows[gl++] = rows[j];\n        }\n      }\n\n      if (g.totals && gi.displayTotalsRow && (!g.collapsed || gi.aggregateCollapsed)){\n        groupedRows[gl++] = g.totals;\n      }\n    }\n    return groupedRows;\n  }\n\n  function getFunctionInfo(fn){\n    var fnRegex = /^function[^(]*\\(([^)]*)\\)\\s*{([\\s\\S]*)}$/;\n    var matches = fn.toString().match(fnRegex);\n    return {\n      params: matches[1].split(','),\n      body: matches[2]\n    };\n  }\n\n  function compileAccumulatorLoop(aggregator){\n    var accumulatorInfo = getFunctionInfo(aggregator.accumulate);\n    var fn = new Function(\n      '_items',\n      'for (var ' + accumulatorInfo.params[0] + ', _i=0, _il=_items.length; _i<_il; _i++) {' +\n      accumulatorInfo.params[0] + ' = _items[_i]; ' +\n      accumulatorInfo.body +\n      '}'\n    );\n    fn.displayName = 'compiledAccumulatorLoop';\n    return fn;\n  }\n\n  function compileFilter(){\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body\n      .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\n        '{ if ($1) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n      // \"function(_items, _args) { \",\n      'var _retval = [], _idx = 0; ',\n      'var $item$, $args$ = _args; ',\n      '_coreloop: ',\n      'for (var _i = 0, _il = _items.length; _i < _il; _i++) { ',\n      '$item$ = _items[_i]; ',\n      '$filter$; ',\n      '} ',\n      'return _retval; '\n      // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args', tpl);\n    fn.displayName = 'compiledFilter';\n\n    return fn;\n  }\n\n  function compileFilterWithCaching(){\n    var filterInfo = getFunctionInfo(filter);\n\n    var filterPath1 = '{ continue _coreloop; }$1';\n    var filterPath2 = '{ _cache[_i] = true;_retval[_idx++] = $item$; continue _coreloop; }$1';\n    // make some allowances for minification - there's only so far we can go with RegEx\n    var filterBody = filterInfo.body\n      .replace(/return false\\s*([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return!1([;}]|\\}|$)/gi, filterPath1)\n      .replace(/return true\\s*([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return!0([;}]|\\}|$)/gi, filterPath2)\n      .replace(/return ([^;}]+?)\\s*([;}]|$)/gi,\n        '{ if ((_cache[_i] = $1)) { _retval[_idx++] = $item$; }; continue _coreloop; }$2');\n\n    // This preserves the function template code after JS compression,\n    // so that replace() commands still work as expected.\n    var tpl = [\n      // \"function(_items, _args, _cache) { \",\n      'var _retval = [], _idx = 0; ',\n      'var $item$, $args$ = _args; ',\n      '_coreloop: ',\n      'for (var _i = 0, _il = _items.length; _i < _il; _i++) { ',\n      '$item$ = _items[_i]; ',\n      'if (_cache[_i]) { ',\n      '_retval[_idx++] = $item$; ',\n      'continue _coreloop; ',\n      '} ',\n      '$filter$; ',\n      '} ',\n      'return _retval; '\n      // \"}\"\n    ].join('');\n    tpl = tpl.replace(/\\$filter\\$/gi, filterBody);\n    tpl = tpl.replace(/\\$item\\$/gi, filterInfo.params[0]);\n    tpl = tpl.replace(/\\$args\\$/gi, filterInfo.params[1]);\n\n    var fn = new Function('_items,_args,_cache', tpl);\n    fn.displayName = 'compiledFilterWithCaching';\n    return fn;\n  }\n\n  function uncompiledFilter(items, args){\n    var retval = [], idx = 0;\n\n    for (var i = 0, ii = items.length; i < ii; i++){\n      if (filter(items[i], args)){\n        retval[idx++] = items[i];\n      }\n    }\n\n    return retval;\n  }\n\n  function uncompiledFilterWithCaching(items, args, cache){\n    var retval = [], idx = 0, item;\n\n    for (var i = 0, ii = items.length; i < ii; i++){\n      item = items[i];\n      if (cache[i]){\n        retval[idx++] = item;\n      } else if (filter(item, args)){\n        retval[idx++] = item;\n        cache[i] = true;\n      }\n    }\n\n    return retval;\n  }\n\n  function getFilteredAndPagedItems(items){\n    if (filter){\n      var batchFilter = options.inlineFilters ? compiledFilter : uncompiledFilter;\n      var batchFilterWithCaching = options.inlineFilters ? compiledFilterWithCaching : uncompiledFilterWithCaching;\n\n      if (refreshHints.isFilterNarrowing){\n        filteredItems = batchFilter(filteredItems, filterArgs);\n      } else if (refreshHints.isFilterExpanding){\n        filteredItems = batchFilterWithCaching(items, filterArgs, filterCache);\n      } else if (!refreshHints.isFilterUnchanged){\n        filteredItems = batchFilter(items, filterArgs);\n      }\n    } else {\n      // special case:  if not filtering and not paging, the resulting\n      // rows collection needs to be a copy so that changes due to sort\n      // can be caught\n      filteredItems = pagesize ? items : items.concat();\n    }\n\n    // get the current page\n    var paged;\n    if (pagesize){\n      if (filteredItems.length < pagenum * pagesize){\n        pagenum = Math.floor(filteredItems.length / pagesize);\n      }\n      paged = filteredItems.slice(pagesize * pagenum, pagesize * pagenum + pagesize);\n    } else {\n      paged = filteredItems;\n    }\n\n    return {totalRows: filteredItems.length, rows: paged};\n  }\n\n  function getRowDiffs(rows, newRows){\n    var item, r, eitherIsNonData, diff = [];\n    var from = 0, to = newRows.length;\n\n    if (refreshHints && refreshHints.ignoreDiffsBefore){\n      from = Math.max(0,\n        Math.min(newRows.length, refreshHints.ignoreDiffsBefore));\n    }\n\n    if (refreshHints && refreshHints.ignoreDiffsAfter){\n      to = Math.min(newRows.length,\n        Math.max(0, refreshHints.ignoreDiffsAfter));\n    }\n\n    for (var i = from, rl = rows.length; i < to; i++){\n      if (i >= rl){\n        diff[diff.length] = i;\n      } else {\n        item = newRows[i];\n        r = rows[i];\n\n        if ((groupingInfos.length && (eitherIsNonData = (item.__nonDataRow) || (r.__nonDataRow)) &&\n          item.__group !== r.__group ||\n          item.__group && !item.equals(r))\n          || (eitherIsNonData &&\n          // no good way to compare totals since they are arbitrary DTOs\n          // deep object comparison is pretty expensive\n          // always considering them 'dirty' seems easier for the time being\n          (item.__groupTotals || r.__groupTotals))\n          || item[idProperty] != r[idProperty]\n          || (updated && updated[item[idProperty]])\n        ){\n          diff[diff.length] = i;\n        }\n      }\n    }\n    return diff;\n  }\n\n  function recalc(_items){\n    rowsById = null;\n\n    if (refreshHints.isFilterNarrowing != prevRefreshHints.isFilterNarrowing ||\n      refreshHints.isFilterExpanding != prevRefreshHints.isFilterExpanding){\n      filterCache = [];\n    }\n\n    var filteredItems = getFilteredAndPagedItems(_items);\n    totalRows = filteredItems.totalRows;\n    var newRows = filteredItems.rows;\n\n    groups = [];\n    if (groupingInfos.length){\n      groups = extractGroups(newRows);\n      if (groups.length){\n        addTotals(groups);\n        newRows = flattenGroupedRows(groups);\n      }\n    }\n\n    var diff = getRowDiffs(rows, newRows);\n\n    rows = newRows;\n\n    return diff;\n  }\n\n  function refresh(){\n    if (suspend){\n      return;\n    }\n\n    var countBefore = rows.length;\n    var totalRowsBefore = totalRows;\n\n    var diff = recalc(items, filter); // pass as direct refs to avoid closure perf hit\n\n    // if the current page is no longer valid, go to last page and recalc\n    // we suffer a performance penalty here, but the main loop (recalc) remains highly optimized\n    if (pagesize && totalRows < pagenum * pagesize){\n      pagenum = Math.max(0, Math.ceil(totalRows / pagesize) - 1);\n      diff = recalc(items, filter);\n    }\n\n    updated = null;\n    prevRefreshHints = refreshHints;\n    refreshHints = {};\n\n    if (totalRowsBefore !== totalRows){\n      onPagingInfoChanged.notify(getPagingInfo(), null, self);\n    }\n    if (countBefore !== rows.length){\n      onRowCountChanged.notify({previous: countBefore, current: rows.length, dataView: self}, null, self);\n    }\n    if (diff.length > 0){\n      onRowsChanged.notify({rows: diff, dataView: self}, null, self);\n    }\n  }\n\n  /** *\n   * Wires the grid and the DataView together to keep row selection tied to item ids.\n   * This is useful since, without it, the grid only knows about rows, so if the items\n   * move around, the same rows stay selected instead of the selection moving along\n   * with the items.\n   *\n   * NOTE:  This doesn't work with cell selection model.\n   *\n   * @param grid {Slick.Grid} The grid to sync selection with.\n   * @param preserveHidden {Boolean} Whether to keep selected items that go out of the\n   *     view due to them getting filtered out.\n   * @param preserveHiddenOnSelectionChange {Boolean} Whether to keep selected items\n   *     that are currently out of the view (see preserveHidden) as selected when selection\n   *     changes.\n   * @return {Slick.Event} An event that notifies when an internal list of selected row ids\n   *     changes.  This is useful since, in combination with the above two options, it allows\n   *     access to the full list selected row ids, and not just the ones visible to the grid.\n   * @method syncGridSelection\n   */\n  function syncGridSelection(grid, preserveHidden, preserveHiddenOnSelectionChange){\n    var self = this;\n    var inHandler;\n    var selectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n    var onSelectedRowIdsChanged = new Slick.Event();\n\n    function setSelectedRowIds(rowIds){\n      if (selectedRowIds.join(',') == rowIds.join(',')){\n        return;\n      }\n\n      selectedRowIds = rowIds;\n\n      onSelectedRowIdsChanged.notify({\n        'grid': grid,\n        'ids': selectedRowIds,\n        'dataView': self\n      }, new Slick.EventData(), self);\n    }\n\n    function update(){\n      if (selectedRowIds.length > 0){\n        inHandler = true;\n        var selectedRows = self.mapIdsToRows(selectedRowIds);\n        if (!preserveHidden){\n          setSelectedRowIds(self.mapRowsToIds(selectedRows));\n        }\n        grid.setSelectedRows(selectedRows);\n        inHandler = false;\n      }\n    }\n\n    grid.onSelectedRowsChanged.subscribe(function(e, args){\n      if (inHandler){\n        return;\n      }\n      var newSelectedRowIds = self.mapRowsToIds(grid.getSelectedRows());\n      if (!preserveHiddenOnSelectionChange || !grid.getOptions().multiSelect){\n        setSelectedRowIds(newSelectedRowIds);\n      } else {\n        // keep the ones that are hidden\n        var existing = $.grep(selectedRowIds, function(id){\n          return self.getRowById(id) === undefined;\n        });\n        // add the newly selected ones\n        setSelectedRowIds(existing.concat(newSelectedRowIds));\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n\n    return onSelectedRowIdsChanged;\n  }\n\n  function syncGridCellCssStyles(grid, key){\n    var hashById;\n    var inHandler;\n\n    // since this method can be called after the cell styles have been set,\n    // get the existing ones right away\n    storeCellCssStyles(grid.getCellCssStyles(key));\n\n    function storeCellCssStyles(hash){\n      hashById = {};\n      for (var row in hash){\n        var id = rows[row][idProperty];\n        hashById[id] = hash[row];\n      }\n    }\n\n    function update(){\n      if (hashById){\n        inHandler = true;\n        ensureRowsByIdCache();\n        var newHash = {};\n        for (var id in hashById){\n          var row = rowsById[id];\n          if (row != undefined){\n            newHash[row] = hashById[id];\n          }\n        }\n        grid.setCellCssStyles(key, newHash);\n        inHandler = false;\n      }\n    }\n\n    grid.onCellCssStylesChanged.subscribe(function(e, args){\n      if (inHandler){\n        return;\n      }\n      if (key != args.key){\n        return;\n      }\n      if (args.hash){\n        storeCellCssStyles(args.hash);\n      }\n    });\n\n    this.onRowsChanged.subscribe(update);\n\n    this.onRowCountChanged.subscribe(update);\n  }\n\n  $.extend(this, {\n    // methods\n    'beginUpdate': beginUpdate,\n    'endUpdate': endUpdate,\n    'setPagingOptions': setPagingOptions,\n    'getPagingInfo': getPagingInfo,\n    'getItems': getItems,\n    'setItems': setItems,\n    'setFilter': setFilter,\n    'sort': sort,\n    'fastSort': fastSort,\n    'reSort': reSort,\n    'setGrouping': setGrouping,\n    'getGrouping': getGrouping,\n    'groupBy': groupBy,\n    'setAggregators': setAggregators,\n    'collapseAllGroups': collapseAllGroups,\n    'expandAllGroups': expandAllGroups,\n    'collapseGroup': collapseGroup,\n    'expandGroup': expandGroup,\n    'getGroups': getGroups,\n    'getIdxById': getIdxById,\n    'getRowById': getRowById,\n    'getItemById': getItemById,\n    'getItemByIdx': getItemByIdx,\n    'mapRowsToIds': mapRowsToIds,\n    'mapIdsToRows': mapIdsToRows,\n    'setRefreshHints': setRefreshHints,\n    'setFilterArgs': setFilterArgs,\n    'refresh': refresh,\n    'updateItem': updateItem,\n    'insertItem': insertItem,\n    'addItem': addItem,\n    'deleteItem': deleteItem,\n    'syncGridSelection': syncGridSelection,\n    'syncGridCellCssStyles': syncGridCellCssStyles,\n\n    // data provider methods\n    'getLength': getLength,\n    'getItem': getItem,\n    'getItemMetadata': getItemMetadata,\n\n    // events\n    'onRowCountChanged': onRowCountChanged,\n    'onRowsChanged': onRowsChanged,\n    'onPagingInfoChanged': onPagingInfoChanged\n  });\n}\n\nfunction AvgAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.count_ = 0;\n    this.nonNullCount_ = 0;\n    this.sum_ = 0;\n  };\n\n  this.accumulate = function(item){\n    var val = item[this.field_];\n    this.count_++;\n    if (val != null && val !== '' && !isNaN(val)){\n      this.nonNullCount_++;\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.avg){\n      groupTotals.avg = {};\n    }\n    if (this.nonNullCount_ != 0){\n      groupTotals.avg[this.field_] = this.sum_ / this.nonNullCount_;\n    }\n  };\n}\n\nfunction MinAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.min_ = null;\n  };\n\n  this.accumulate = function(item){\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      if (this.min_ == null || val < this.min_){\n        this.min_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.min){\n      groupTotals.min = {};\n    }\n    groupTotals.min[this.field_] = this.min_;\n  };\n}\n\nfunction MaxAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.max_ = null;\n  };\n\n  this.accumulate = function(item){\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      if (this.max_ == null || val > this.max_){\n        this.max_ = val;\n      }\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.max){\n      groupTotals.max = {};\n    }\n    groupTotals.max[this.field_] = this.max_;\n  };\n}\n\nfunction SumAggregator(field){\n  this.field_ = field;\n\n  this.init = function(){\n    this.sum_ = null;\n  };\n\n  this.accumulate = function(item){\n    var val = item[this.field_];\n    if (val != null && val !== '' && !isNaN(val)){\n      this.sum_ += parseFloat(val);\n    }\n  };\n\n  this.storeResult = function(groupTotals){\n    if (!groupTotals.sum){\n      groupTotals.sum = {};\n    }\n    groupTotals.sum[this.field_] = this.sum_;\n  };\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.dataview.js","import Slick from './slick.core';\nimport flatpickr from 'flatpickr';\n//import 'flatpickr/dist/flatpickr.min.css';\nimport $ from 'jquery';\n\nconst { keyCode } = Slick;\n\n/** *\n * Contains basic SlickGrid editors.\n * @module Editors\n * @namespace Slick\n */\n\nconst Editors = {\n  Text: TextEditor,\n  Integer: IntegerEditor,\n  Float: FloatEditor,\n  Date: DateEditor,\n  YesNoSelect: YesNoSelectEditor,\n  Checkbox: CheckboxEditor,\n  LongText: LongTextEditor\n};\n\nSlick.Editors = Editors;\nexport default Editors;\n\nfunction TextEditor(args){\n  let $input;\n  let defaultValue;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\\'editor-text\\' />')\n      .appendTo(args.container)\n      .bind('keydown.nav', function(e){\n        if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n          e.stopImmediatePropagation();\n        }\n      })\n      .focus()\n      .select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.getValue = function(){\n    return $input.val();\n  };\n\n  this.setValue = function(val){\n    $input.val(val);\n  };\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field] || '';\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction IntegerEditor(args){\n  let $input;\n  let defaultValue;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\\'editor-text\\' />');\n\n    $input.bind('keydown.nav', function(e){\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field];\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return parseInt($input.val(), 10) || 0;\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    if (isNaN($input.val())){\n      return {\n        valid: false,\n        msg: 'Please enter a valid integer'\n      };\n    }\n\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val());\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction FloatEditor(args){\n  let $input;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $input = $('<INPUT type=text class=\\'editor-text\\' />');\n\n    $input.bind('keydown.nav', function(e){\n      if (e.keyCode === keyCode.LEFT || e.keyCode === keyCode.RIGHT){\n        e.stopImmediatePropagation();\n      }\n    });\n\n    $input.appendTo(args.container);\n    $input.focus().select();\n  };\n\n  this.destroy = function(){\n    $input.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  function getDecimalPlaces(){\n    // returns the number of fixed decimal places or null\n    let rtn = args.column.editorFixedDecimalPlaces;\n    if (typeof rtn == 'undefined'){\n      rtn = FloatEditor.DefaultDecimalPlaces;\n    }\n    return (!rtn && rtn !== 0 ? null : rtn);\n  }\n\n  this.loadValue = function(item){\n    defaultValue = item[args.column.field];\n\n    let decPlaces = getDecimalPlaces();\n    if (decPlaces !== null\n      && (defaultValue || defaultValue === 0)\n      && defaultValue.toFixed){\n      defaultValue = defaultValue.toFixed(decPlaces);\n    }\n\n    $input.val(defaultValue);\n    $input[0].defaultValue = defaultValue;\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    let rtn = parseFloat($input.val()) || 0;\n\n    let decPlaces = getDecimalPlaces();\n    if (decPlaces !== null\n      && (rtn || rtn === 0)\n      && rtn.toFixed){\n      rtn = parseFloat(rtn.toFixed(decPlaces));\n    }\n\n    return rtn;\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    if (isNaN($input.val())){\n      return {\n        valid: false,\n        msg: 'Please enter a valid number'\n      };\n    }\n\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nFloatEditor.DefaultDecimalPlaces = null;\n\n/**\n * see https://chmln.github.io/flatpickr/#options - pass as column.options.date = {}\n * @param args\n * @constructor\n */\nfunction DateEditor(args){\n  let $input,\n    flatInstance,\n    defaultDate,\n    options = args.column.options && args.column.options.date ? args.column.options.date : {};\n\n  this.init = function(){\n    defaultDate = options.defaultDate = args.item[args.column.field];\n\n    $input = $('<input type=text data-default-date=\"'+defaultDate+'\" class=\"editor-text\" />');\n    $input.appendTo(args.container);\n    $input.focus().val(defaultDate).select();\n    flatInstance = flatpickr($input[0], options);\n  };\n\n  this.destroy = function(){\n    flatInstance.destroy();\n    $input.remove();\n  };\n\n  this.show = function(){\n    flatInstance.open();\n    flatInstance.positionCalendar();\n  };\n\n  this.hide = function(){\n    flatInstance.close();\n  };\n\n  this.position = function(position){\n    //todo: fix how scrolling is affected\n    flatInstance.positionCalendar();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultDate = item[args.column.field];\n    $input.val(defaultDate);\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultDate == null)) && ($input.val() != defaultDate);\n  };\n\n  this.validate = function(){\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      if (!validationResults.valid){\n        return validationResults;\n      }\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction YesNoSelectEditor(args){\n  let $select;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $select = $('<select tabIndex=\\'0\\' class=\\'editor-yesno\\'><option value=\\'yes\\'>Yes</option><option value=\\'no\\'>No</option></select>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function(){\n    $select.remove();\n  };\n\n  this.focus = function(){\n    $select.focus();\n  };\n\n  this.loadValue = function(item){\n    $select.val((defaultValue = item[args.column.field]) ? 'yes' : 'no');\n    $select.select();\n  };\n\n  this.serializeValue = function(){\n    return ($select.val() == 'yes');\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return ($select.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction CheckboxEditor(args){\n  let $select;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    $select = $('<INPUT type=checkbox value=\\'true\\' class=\\'editor-checkbox\\' hideFocus>');\n    $select.appendTo(args.container);\n    $select.focus();\n  };\n\n  this.destroy = function(){\n    $select.remove();\n  };\n\n  this.focus = function(){\n    $select.focus();\n  };\n\n  this.loadValue = function(item){\n    defaultValue = !!item[args.column.field];\n    if (defaultValue){\n      $select.prop('checked', true);\n    } else {\n      $select.prop('checked', false);\n    }\n  };\n\n  this.serializeValue = function(){\n    return $select.prop('checked');\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (this.serializeValue() !== defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($select.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\nfunction PercentCompleteEditor(args){\n  console.error('PercentCompleteEditor is derecated');\n}\n\n/*\n * An example of a \"detached\" editor.\n * The UI is added onto document BODY and .position(), .show() and .hide() are implemented.\n * KeyDown events are also handled to provide handling for Tab, Shift-Tab, Esc and Ctrl-Enter.\n */\nfunction LongTextEditor(args){\n  let $input, $wrapper;\n  let defaultValue;\n  let scope = this;\n\n  this.init = function(){\n    let $container = $('body');\n\n    $wrapper = $('<div class=\\'slick-large-editor-text\\' />').appendTo($container);\n    $input = $('<textarea hidefocus rows=5 />').appendTo($wrapper);\n\n    $('<div><button>Save</button> <button>Cancel</button></div>').appendTo($wrapper);\n\n    $wrapper.find('button:first').bind('click', this.save);\n    $wrapper.find('button:last').bind('click', this.cancel);\n    $input.bind('keydown', this.handleKeyDown);\n\n    scope.position(args.position);\n    $input.focus().select();\n  };\n\n  this.handleKeyDown = function(e){\n    if (e.which == keyCode.ENTER && e.ctrlKey){\n      scope.save();\n    } else if (e.which == keyCode.ESCAPE){\n      e.preventDefault();\n      scope.cancel();\n    } else if (e.which == keyCode.TAB && e.shiftKey){\n      e.preventDefault();\n      args.grid.navigatePrev();\n    } else if (e.which == keyCode.TAB){\n      e.preventDefault();\n      args.grid.navigateNext();\n    }\n  };\n\n  this.save = function(){\n    args.commitChanges();\n  };\n\n  this.cancel = function(){\n    $input.val(defaultValue);\n    args.cancelChanges();\n  };\n\n  this.hide = function(){\n    $wrapper.hide();\n  };\n\n  this.show = function(){\n    $wrapper.show();\n  };\n\n  this.position = function(position){\n    $wrapper\n      .css('top', position.top - 5)\n      .css('left', position.left - 5);\n  };\n\n  this.destroy = function(){\n    $wrapper.remove();\n  };\n\n  this.focus = function(){\n    $input.focus();\n  };\n\n  this.loadValue = function(item){\n    $input.val(defaultValue = item[args.column.field]);\n    $input.select();\n  };\n\n  this.serializeValue = function(){\n    return $input.val();\n  };\n\n  this.applyValue = function(item, state){\n    item[args.column.field] = state;\n  };\n\n  this.isValueChanged = function(){\n    return (!($input.val() == '' && defaultValue == null)) && ($input.val() != defaultValue);\n  };\n\n  this.validate = function(){\n    let valid = true;\n    let msg = null;\n    if (args.column.validator){\n      let validationResults = args.column.validator($input.val(), args);\n      valid = validationResults.valid;\n      msg = validationResults.msg;\n    }\n\n    return {\n      valid: true,\n      msg: null\n    };\n  };\n\n  this.init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.editors.js","function PercentCompleteFormatter(row, cell, value, columnDef, dataContext){\n  if (value == null || value === ''){\n    return '-';\n  } else if (value < 50){\n    return `<span style='color:red;font-weight:bold;'>${value}%</span>`;\n  } else {\n    return `<span style='color:green'>${value}%</span>`;\n  }\n}\n\nfunction PercentCompleteBarFormatter(row, cell, value, columnDef, dataContext){\n  if (value == null || value === ''){\n    return '';\n  }\n\n  let color;\n\n  if (value < 30){\n    color = 'red';\n  } else if (value < 70){\n    color = 'silver';\n  } else {\n    color = 'green';\n  }\n\n  return '<span class=\\'percent-complete-bar\\' style=\\'background:' + color + ';width:' + value + '%\\'></span>';\n}\n\nfunction YesNoFormatter(row, cell, value, columnDef, dataContext){\n  return value ? 'Yes' : 'No';\n}\n\nfunction CheckmarkFormatter(row, cell, value, columnDef, dataContext){\n  return value ? '✔' : '';\n}\n\nexport default {\n  PercentComplete: PercentCompleteFormatter,\n  PercentCompleteBar: PercentCompleteBarFormatter,\n  YesNo: YesNoFormatter,\n  Checkmark: CheckmarkFormatter\n};\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.formatters.js","/**\n * @license\n * (c) 2009-2013 Michael Leibman\n * michael{dot}leibman{at}gmail{dot}com\n * http://github.com/mleibman/slickgrid\n *\n * Distributed under MIT license.\n * All rights reserved.\n *\n * SlickGrid v2.2\n *\n * NOTES:\n *     Cell/row DOM manipulations are done directly bypassing jQuery's DOM manipulation methods.\n *     This increases the speed dramatically, but can only be done safely because there are no event handlers\n *     or data associated with any cell/row DOM nodes.  Cell editors must make sure they implement .destroy()\n *     and do proper cleanup.\n */\n\nimport $ from 'jquery';\nimport interact from 'interactjs';\n\nimport Slick from './slick.core';\n\n// Slick.Grid globals pretense\nSlick.Grid = SlickGrid;\n\nexport default SlickGrid;\n\n// shared across all grids on the page\nvar scrollbarDimensions;\nvar maxSupportedCssHeight;  // browser's breaking point\n\n// ////////////////////////////////////////////////////////////////////////////////////////////\n// SlickGrid class implementation (available as Slick.Grid)\n\n/**\n * Creates a new instance of the grid.\n * @class SlickGrid\n * @constructor\n * @param {Node}              container   Container node to create the grid in.\n * @param {Array,Object}      data        An array of objects for databinding.\n * @param {Array}             columns     An array of column definitions.\n * @param {Object}            options     Grid options.\n **/\nfunction SlickGrid(container, data, columns, options){\n  // settings\n  var defaults = {\n    explicitInitialization: false,\n    rowHeight: 25,\n    defaultColumnWidth: 80,\n    enableAddRow: false,\n    leaveSpaceForNewRows: false,\n    editable: false,\n    autoEdit: true,\n    enableCellNavigation: true,\n    enableColumnReorder: true,\n    asyncEditorLoading: false,\n    asyncEditorLoadDelay: 100,\n    forceFitColumns: false,\n    enableAsyncPostRender: false,\n    asyncPostRenderDelay: 50,\n    enableAsyncPostRenderCleanup: false,\n    asyncPostRenderCleanupDelay: 40,\n    autoHeight: false,\n    editorLock: Slick.GlobalEditorLock,\n    showHeaderRow: false,\n    headerRowHeight: 25,\n    createFooterRow: false,\n    showFooterRow: false,\n    footerRowHeight: 25,\n    showTopPanel: false,\n    topPanelHeight: 25,\n    formatterFactory: null,\n    editorFactory: null,\n    cellFlashingCssClass: 'flashing',\n    selectedCellCssClass: 'selected',\n    multiSelect: true,\n    enableTextSelectionOnCells: false,\n    dataItemColumnValueExtractor: null,\n    fullWidthRows: false,\n    multiColumnSort: false,\n    defaultFormatter: defaultFormatter,\n    forceSyncScrolling: false,\n    addNewRowCssClass: 'new-row'\n  };\n\n  var columnDefaults = {\n    name: '',\n    resizable: true,\n    sortable: false,\n    minWidth: 30,\n    rerenderOnResize: false,\n    headerCssClass: null,\n    defaultSortAsc: true,\n    focusable: true,\n    selectable: true\n  };\n\n  // scroller\n  var th;   // virtual height\n  var h;    // real scrollable height\n  var ph;   // page height\n  var n;    // number of pages\n  var cj;   // \"jumpiness\" coefficient\n\n  var page = 0;       // current page\n  var offset = 0;     // current page offset\n  var vScrollDir = 1;\n\n  // private\n  var initialized = false;\n  var $container;\n  var uid = 'slickgrid_' + Math.round(1000000 * Math.random());\n  var self = this;\n  var $focusSink, $focusSink2;\n  var $headerScroller;\n  var $headers;\n  var $headerRow, $headerRowScroller, $headerRowSpacer;\n  var $footerRow, $footerRowScroller, $footerRowSpacer;\n  var $topPanelScroller;\n  var $topPanel;\n  var $viewport;\n  var $canvas;\n  var $style;\n  var $boundAncestors;\n  var stylesheet, columnCssRulesL, columnCssRulesR;\n  var viewportH, viewportW;\n  var canvasWidth;\n  var viewportHasHScroll, viewportHasVScroll;\n  var headerColumnWidthDiff = 0, headerColumnHeightDiff = 0, // border+padding\n    cellWidthDiff = 0, cellHeightDiff = 0, jQueryNewWidthBehaviour = false;\n  var absoluteColumnMinWidth;\n\n  var tabbingDirection = 1;\n  var activePosX;\n  var activeRow, activeCell;\n  var activeCellNode = null;\n  var currentEditor = null;\n  var serializedEditorValue;\n  var editController;\n\n  var rowsCache = {};\n  var renderedRows = 0;\n  var numVisibleRows;\n  var prevScrollTop = 0;\n  var scrollTop = 0;\n  var lastRenderedScrollTop = 0;\n  var lastRenderedScrollLeft = 0;\n  var prevScrollLeft = 0;\n  var scrollLeft = 0;\n\n  var selectionModel;\n  var selectedRows = [];\n\n  var plugins = [];\n  var cellCssClasses = {};\n\n  var columnsById = {};\n  var sortColumns = [];\n  var columnPosLeft = [];\n  var columnPosRight = [];\n\n  // async call handles\n  var h_editorLoader = null;\n  var h_render = null;\n  var h_postrender = null;\n  var h_postrenderCleanup = null;\n  var postProcessedRows = {};\n  var postProcessToRow = null;\n  var postProcessFromRow = null;\n  var postProcessedCleanupQueue = [];\n  var postProcessgroupId = 0;\n\n  // perf counters\n  var counter_rows_rendered = 0;\n  var counter_rows_removed = 0;\n\n  // These two variables work around a bug with inertial scrolling in Webkit/Blink on Mac.\n  // See http://crbug.com/312427.\n  var rowNodeFromLastMouseWheelEvent;  // this node must not be deleted while inertial scrolling\n  var zombieRowNodeFromLastMouseWheelEvent;  // node that was hidden instead of getting deleted\n  var zombieRowCacheFromLastMouseWheelEvent;  // row cache for above node\n  var zombieRowPostProcessedFromLastMouseWheelEvent;  // post processing references for above node\n\n  // store css attributes if display:none is active in container or parent\n  var cssShow = {position: 'absolute', visibility: 'hidden', display: 'block'};\n  var $hiddenParents;\n  var oldProps = [];\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Initialization\n\n  function init(){\n    $container = $(container);\n    if ($container.length < 1){\n      throw new Error('SlickGrid requires a valid container, ' + container + ' does not exist in the DOM.');\n    }\n\n    cacheCssForHiddenInit();\n\n    // calculate these only once and share between grid instances\n    maxSupportedCssHeight = maxSupportedCssHeight || getMaxSupportedCssHeight();\n    scrollbarDimensions = scrollbarDimensions || measureScrollbar();\n\n    options = $.extend({}, defaults, options);\n    validateAndEnforceOptions();\n    columnDefaults.width = options.defaultColumnWidth;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    editController = {\n      'commitCurrentEdit': commitCurrentEdit,\n      'cancelCurrentEdit': cancelCurrentEdit\n    };\n\n    $container\n      .empty()\n      .css('overflow', 'hidden')\n      .css('outline', 0)\n      .addClass(uid)\n      .addClass('ui-widget');\n\n    // set up a positioning container if needed\n    if (!/relative|absolute|fixed/.test($container.css('position'))){\n      $container.css('position', 'relative');\n    }\n\n    $focusSink = $(\"<div tabIndex='0' hideFocus style='position:fixed;width:0;height:0;top:0;left:0;outline:0;'></div>\").appendTo($container);\n\n    $headerScroller = $(\"<div class='slick-header ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headers = $(\"<div class='slick-header-columns' />\").appendTo($headerScroller);\n    $headers.width(getHeadersWidth());\n\n    $headerRowScroller = $(\"<div class='slick-headerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $headerRow = $(\"<div class='slick-headerrow-columns' />\").appendTo($headerRowScroller);\n    $headerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n      .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n      .appendTo($headerRowScroller);\n\n    $topPanelScroller = $(\"<div class='slick-top-panel-scroller ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n    $topPanel = $(\"<div class='slick-top-panel' style='width:10000px' />\").appendTo($topPanelScroller);\n\n    if (!options.showTopPanel){\n      $topPanelScroller.hide();\n    }\n\n    if (!options.showHeaderRow){\n      $headerRowScroller.hide();\n    }\n\n    $viewport = $(\"<div class='slick-viewport' style='width:100%;overflow:auto;outline:0;position:relative;;'>\").appendTo($container);\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n\n    $canvas = $(\"<div class='grid-canvas' />\").appendTo($viewport);\n\n    if (options.createFooterRow){\n      $footerRowScroller = $(\"<div class='slick-footerrow ui-state-default' style='overflow:hidden;position:relative;' />\").appendTo($container);\n      $footerRow = $(\"<div class='slick-footerrow-columns' />\").appendTo($footerRowScroller);\n      $footerRowSpacer = $(\"<div style='display:block;height:1px;position:absolute;top:0;left:0;'></div>\")\n        .css('width', getCanvasWidth() + scrollbarDimensions.width + 'px')\n        .appendTo($footerRowScroller);\n\n      if (!options.showFooterRow){\n        $footerRowScroller.hide();\n      }\n    }\n\n    $focusSink2 = $focusSink.clone().appendTo($container);\n\n    if (!options.explicitInitialization){\n      finishInitialization();\n    }\n  }\n\n  function finishInitialization(){\n    if (!initialized){\n      initialized = true;\n\n      viewportW = parseFloat($.css($container[0], 'width', true));\n\n      // header columns and cells may have different padding/border skewing width calculations (box-sizing, hello?)\n      // calculate the diff so we can set consistent sizes\n      measureCellPaddingAndBorder();\n\n      // for usability reasons, all text selection in SlickGrid is disabled\n      // with the exception of input and textarea elements (selection must\n      // be enabled there so that editors work as expected); note that\n      // selection in grid cells (grid body) is already unavailable in\n      // all browsers except IE\n      disableSelection($headers); // disable all text selection in header (including input and textarea)\n\n      if (!options.enableTextSelectionOnCells){\n        // disable text selection in grid cells except in input and textarea elements\n        // (this is IE-specific, because selectstart event will only fire in IE)\n        $viewport.bind('selectstart.ui', function(event){\n          return $(event.target).is('input,textarea');\n        });\n      }\n\n      updateColumnCaches();\n      createColumnHeaders();\n      setupColumnSort();\n      createCssRules();\n      resizeCanvas();\n      bindAncestorScrollEvents();\n\n      $container\n        .bind('resize.slickgrid', resizeCanvas);\n      $viewport\n      // .bind(\"click\", handleClick)\n        .bind('scroll', handleScroll);\n      $headerScroller\n        .bind('contextmenu', handleHeaderContextMenu)\n        .bind('click', handleHeaderClick)\n        .delegate('.slick-header-column', 'mouseenter', handleHeaderMouseEnter)\n        .delegate('.slick-header-column', 'mouseleave', handleHeaderMouseLeave);\n      $headerRowScroller\n        .bind('scroll', handleHeaderRowScroll);\n\n      if (options.createFooterRow){\n        $footerRowScroller\n          .bind('scroll', handleFooterRowScroll);\n      }\n\n      $focusSink.add($focusSink2)\n        .bind('keydown', handleKeyDown);\n      $canvas\n        .bind('keydown', handleKeyDown)\n        .bind('click', handleClick)\n        .bind('dblclick', handleDblClick)\n        .bind('contextmenu', handleContextMenu)\n        .delegate('.slick-cell', 'mouseenter', handleMouseEnter)\n        .delegate('.slick-cell', 'mouseleave', handleMouseLeave);\n\n      // legacy support for drag events\n      interact($canvas[0]).allowFrom('div.slick-cell').draggable({\n        onmove: handleDrag,\n        onstart: handleDragStart,\n        onend: handleDragEnd\n      });\n\n      // Work around http://crbug.com/312427.\n      if (navigator.userAgent.toLowerCase().match(/webkit/) &&\n        navigator.userAgent.toLowerCase().match(/macintosh/)){\n        $canvas.bind('mousewheel', handleMouseWheel);\n      }\n      restoreCssFromHiddenInit();\n    }\n  }\n\n  function cacheCssForHiddenInit(){\n    // handle display:none on container or container parents\n    $hiddenParents = $container.parents().addBack().not(':visible');\n    $hiddenParents.each(function(){\n      var old = {};\n      for (var name in cssShow){\n        old[name] = this.style[name];\n        this.style[name] = cssShow[name];\n      }\n      oldProps.push(old);\n    });\n  }\n\n  function restoreCssFromHiddenInit(){\n    // finish handle display:none on container or container parents\n    // - put values back the way they were\n    $hiddenParents.each(function(i){\n      var old = oldProps[i];\n      for (var name in cssShow){\n        this.style[name] = old[name];\n      }\n    });\n  }\n\n  function registerPlugin(plugin){\n    plugins.unshift(plugin);\n    plugin.init(self);\n  }\n\n  function unregisterPlugin(plugin){\n    for (var i = plugins.length; i >= 0; i--){\n      if (plugins[i] === plugin){\n        if (plugins[i].destroy){\n          plugins[i].destroy();\n        }\n        plugins.splice(i, 1);\n        break;\n      }\n    }\n  }\n\n  function setSelectionModel(model){\n    if (selectionModel){\n      selectionModel.onSelectedRangesChanged.unsubscribe(handleSelectedRangesChanged);\n      if (selectionModel.destroy){\n        selectionModel.destroy();\n      }\n    }\n\n    selectionModel = model;\n    if (selectionModel){\n      selectionModel.init(self);\n      selectionModel.onSelectedRangesChanged.subscribe(handleSelectedRangesChanged);\n    }\n  }\n\n  function getSelectionModel(){\n    return selectionModel;\n  }\n\n  function getCanvasNode(){\n    return $canvas[0];\n  }\n\n  function measureScrollbar(){\n    var $c = $(\"<div style='position:absolute; top:-10000px; left:-10000px; width:100px; height:100px; overflow:scroll;'></div>\").appendTo('body');\n    var dim = {\n      width: $c.width() - $c[0].clientWidth,\n      height: $c.height() - $c[0].clientHeight\n    };\n    $c.remove();\n    return dim;\n  }\n\n  function getHeadersWidth(){\n    var headersWidth = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      var width = columns[i].width;\n      headersWidth += width;\n    }\n    headersWidth += scrollbarDimensions.width;\n    return Math.max(headersWidth, viewportW) + 1000;\n  }\n\n  function getCanvasWidth(){\n    var availableWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n    var rowWidth = 0;\n    var i = columns.length;\n    while (i--){\n      rowWidth += columns[i].width;\n    }\n    return options.fullWidthRows ? Math.max(rowWidth, availableWidth) : rowWidth;\n  }\n\n  function updateCanvasWidth(forceColumnWidthsUpdate){\n    var oldCanvasWidth = canvasWidth;\n    canvasWidth = getCanvasWidth();\n\n    if (canvasWidth != oldCanvasWidth){\n      $canvas.width(canvasWidth);\n      $headerRow.width(canvasWidth);\n      if (options.createFooterRow){\n        $footerRow.width(canvasWidth);\n      }\n      $headers.width(getHeadersWidth());\n      viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n    }\n\n    var w = canvasWidth + (viewportHasVScroll ? scrollbarDimensions.width : 0);\n    $headerRowSpacer.width(w);\n    if (options.createFooterRow){\n      $footerRowSpacer.width(w);\n    }\n\n    if (canvasWidth != oldCanvasWidth || forceColumnWidthsUpdate){\n      applyColumnWidths();\n    }\n  }\n\n  function disableSelection($target){\n    if ($target && $target.jquery){\n      $target\n        .attr('unselectable', 'on')\n        .css('MozUserSelect', 'none')\n        .bind('selectstart.ui', function(){\n          return false;\n        }); // from jquery:ui.core.js 1.7.2\n    }\n  }\n\n  function getMaxSupportedCssHeight(){\n    var supportedHeight = 1000000;\n    // FF reports the height back but still renders blank after ~6M px\n    var testUpTo = navigator.userAgent.toLowerCase().match(/firefox/) ? 6000000 : 1000000000;\n    var div = $(\"<div style='display:none' />\").appendTo(document.body);\n\n    while (true){\n      var test = supportedHeight * 2;\n      div.css('height', test);\n      if (test > testUpTo || div.height() !== test){\n        break;\n      } else {\n        supportedHeight = test;\n      }\n    }\n\n    div.remove();\n    return supportedHeight;\n  }\n\n  // TODO:  this is static.  need to handle page mutation.\n  function bindAncestorScrollEvents(){\n    var elem = $canvas[0];\n    while ((elem = elem.parentNode) != document.body && elem != null){\n      // bind to scroll containers only\n      if (elem == $viewport[0] || elem.scrollWidth != elem.clientWidth || elem.scrollHeight != elem.clientHeight){\n        var $elem = $(elem);\n        if (!$boundAncestors){\n          $boundAncestors = $elem;\n        } else {\n          $boundAncestors = $boundAncestors.add($elem);\n        }\n        $elem.bind('scroll.' + uid, handleActiveCellPositionChange);\n      }\n    }\n  }\n\n  function unbindAncestorScrollEvents(){\n    if (!$boundAncestors){\n      return;\n    }\n    $boundAncestors.unbind('scroll.' + uid);\n    $boundAncestors = null;\n  }\n\n  function updateColumnHeader(columnId, title, toolTip){\n    if (!initialized){\n      return;\n    }\n    var idx = getColumnIndex(columnId);\n    if (idx == null){\n      return;\n    }\n\n    var columnDef = columns[idx];\n    var $header = $headers.children().eq(idx);\n    if ($header){\n      if (title !== undefined){\n        columns[idx].name = title;\n      }\n      if (toolTip !== undefined){\n        columns[idx].toolTip = toolTip;\n      }\n\n      trigger(self.onBeforeHeaderCellDestroy, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n\n      $header\n        .attr('title', toolTip || '')\n        .children().eq(0).html(title);\n\n      trigger(self.onHeaderCellRendered, {\n        'node': $header[0],\n        'column': columnDef,\n        'grid': self\n      });\n    }\n  }\n\n  function getHeaderRow(){\n    return $headerRow[0];\n  }\n\n  function getFooterRow(){\n    return $footerRow[0];\n  }\n\n  function getHeaderRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n    var $header = $headerRow.children().eq(idx);\n    return $header && $header[0];\n  }\n\n  function getFooterRowColumn(columnId){\n    var idx = getColumnIndex(columnId);\n    var $footer = $footerRow.children().eq(idx);\n    return $footer && $footer[0];\n  }\n\n  function createColumnHeaders(){\n    function onMouseEnter(){\n      $(this).addClass('ui-state-hover');\n    }\n\n    function onMouseLeave(){\n      $(this).removeClass('ui-state-hover');\n    }\n\n    $headers.find('.slick-header-column')\n      .each(function(){\n        var columnDef = $(this).data('column');\n        if (columnDef){\n          trigger(self.onBeforeHeaderCellDestroy, {\n            'node': this,\n            'column': columnDef,\n            'grid': self\n          });\n        }\n      });\n    $headers.empty();\n    $headers.width(getHeadersWidth());\n\n    $headerRow.find('.slick-headerrow-column')\n      .each(function(){\n        var columnDef = $(this).data('column');\n        if (columnDef){\n          trigger(self.onBeforeHeaderRowCellDestroy, {\n            'node': this,\n            'column': columnDef,\n            'grid': self\n          });\n        }\n      });\n    $headerRow.empty();\n\n    if (options.createFooterRow){\n      $footerRow.find('.slick-footerrow-column')\n        .each(function(){\n          var columnDef = $(this).data('column');\n          if (columnDef){\n            trigger(self.onBeforeFooterRowCellDestroy, {\n              'node': this,\n              'column': columnDef\n            });\n          }\n        });\n      $footerRow.empty();\n    }\n\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i];\n\n      var header = $(\"<div class='ui-state-default slick-header-column' />\")\n        .html(\"<span class='slick-column-name'>\" + m.name + '</span>')\n        .width(m.width - headerColumnWidthDiff)\n        .attr('id', '' + uid + m.id)\n        .attr('title', m.toolTip || '')\n        .data('column', m)\n        .addClass(m.headerCssClass || '')\n        .appendTo($headers);\n\n      if (options.enableColumnReorder || m.sortable){\n        header\n          .on('mouseenter', onMouseEnter)\n          .on('mouseleave', onMouseLeave);\n      }\n\n      if (m.sortable){\n        header.addClass('slick-header-sortable');\n        header.append(\"<span class='slick-sort-indicator' />\");\n      }\n\n      trigger(self.onHeaderCellRendered, {\n        'node': header[0],\n        'column': m,\n        'grid': self\n      });\n\n      if (options.showHeaderRow){\n        var headerRowCell = $(\"<div class='ui-state-default slick-headerrow-column l\" + i + ' r' + i + \"'></div>\")\n          .data('column', m)\n          .appendTo($headerRow);\n\n        trigger(self.onHeaderRowCellRendered, {\n          'node': headerRowCell[0],\n          'column': m,\n          'grid': self\n        });\n      }\n      if (options.createFooterRow && options.showFooterRow){\n        var footerRowCell = $(\"<div class='ui-state-default slick-footerrow-column l\" + i + ' r' + i + \"'></div>\")\n          .data('column', m)\n          .appendTo($footerRow);\n\n        trigger(self.onFooterRowCellRendered, {\n          'node': footerRowCell[0],\n          'column': m\n        });\n      }\n    }\n\n    setSortColumns(sortColumns);\n    setupColumnResize();\n    if (options.enableColumnReorder){\n      setupColumnReorder();\n    }\n  }\n\n  function setupColumnSort(){\n    $headers.click(function(e){\n      // temporary workaround for a bug in jQuery 1.7.1 (http://bugs.jquery.com/ticket/11328)\n      e.metaKey = e.metaKey || e.ctrlKey;\n\n      if ($(e.target).hasClass('slick-resizable-handle')){\n        return;\n      }\n\n      var $col = $(e.target).closest('.slick-header-column');\n      if (!$col.length){\n        return;\n      }\n\n      var column = $col.data('column');\n      if (column.sortable){\n        if (!getEditorLock().commitCurrentEdit()){\n          return;\n        }\n\n        var sortOpts = null;\n        var i = 0;\n        for (; i < sortColumns.length; i++){\n          if (sortColumns[i].columnId == column.id){\n            sortOpts = sortColumns[i];\n            sortOpts.sortAsc = !sortOpts.sortAsc;\n            break;\n          }\n        }\n\n        if (e.metaKey && options.multiColumnSort){\n          if (sortOpts){\n            sortColumns.splice(i, 1);\n          }\n        }\n        else {\n          if ((!e.shiftKey && !e.metaKey) || !options.multiColumnSort){\n            sortColumns = [];\n          }\n\n          if (!sortOpts){\n            sortOpts = {columnId: column.id, sortAsc: column.defaultSortAsc};\n            sortColumns.push(sortOpts);\n          } else if (sortColumns.length == 0){\n            sortColumns.push(sortOpts);\n          }\n        }\n\n        setSortColumns(sortColumns);\n\n        if (!options.multiColumnSort){\n          trigger(self.onSort, {\n            multiColumnSort: false,\n            sortCol: column,\n            sortAsc: sortOpts.sortAsc,\n            grid: self\n          }, e);\n        } else {\n          trigger(self.onSort, {\n            multiColumnSort: true,\n            sortCols: $.map(sortColumns, function(col){\n              return {sortCol: columns[getColumnIndex(col.columnId)], sortAsc: col.sortAsc};\n            }),\n            grid: self\n          }, e);\n        }\n      }\n    });\n  }\n\n  /**\n   * Refactored to use interactjs\n   */\n  function setupColumnReorder(){\n    let x = 0;\n    let delta = 0;\n    let placeholder = document.createElement('div');\n\n    placeholder.className = 'interact-placeholder';\n\n    interact('.slick-header-column')\n      .ignoreFrom('.slick-resizable-handle')\n      .draggable({\n        inertia: true,\n        // keep the element within the area of it's parent\n        restrict: {\n          restriction: 'parent',\n          endOnly: true,\n          elementRect: {top: 0, left: 0, bottom: 0, right: 0}\n        },\n        // enable autoScroll\n        autoScroll: true,\n        axis: 'x',\n        onstart: event => {\n          x = 0;\n          delta = event.target.offsetWidth;\n\n          // get old order\n          $headers.find('.slick-header-column').each(function(index){\n            $(this).data('index', index);\n          });\n\n          placeholder.style.height = event.target.offsetHeight + 'px';\n          placeholder.style.width = delta + 'px';\n\n          $(event.target).after(placeholder).css({\n            position: 'absolute',\n            zIndex: 1000,\n            marginLeft: $(event.target).position().left\n          });\n        },\n\n        onmove: event => {\n          x += event.dx;\n          event.target.style.transform = `translate3d(${x}px, -3px, 100px)`;\n          // event.target.style.marginLeft = x + 'px';\n        },\n\n        onend: event => {\n          x = 0;\n          delta = 0;\n          $(event.target).css({\n            position: 'relative',\n            zIndex: '',\n            marginLeft: 0,\n            transform: 'none'\n          });\n\n          placeholder.parentNode.removeChild(placeholder);\n          const newColumns = [];\n\n          $headers.find('.slick-header-column').each(function(index){\n            newColumns.push(columns[$(this).data('index')]);\n            $(this).removeData('index');\n          });\n\n          setColumns(newColumns);\n          trigger(self.onColumnsReordered, {grid: self});\n          setupColumnResize();\n        }\n      })\n      .dropzone({\n        accept: '.slick-header-column',\n\n        ondragenter: event => {\n          event.target.classList.add('interact-drop-active');\n          event.relatedTarget.classList.add('interact-can-drop');\n        },\n\n        ondragleave: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n        },\n\n        ondrop: event => {\n          event.target.classList.remove('interact-drop-active');\n          event.relatedTarget.classList.remove('interact-can-drop');\n          $(event.target)[x > 0 ? 'after' : 'before'](event.relatedTarget);\n        }\n      });\n  }\n\n  function setupColumnResize(){\n    var $col, j, c, pageX, columnElements, minPageX, maxPageX, firstResizable, lastResizable;\n    columnElements = $headers.children();\n    columnElements.find('.slick-resizable-handle').remove();\n    columnElements.each(function(i, e){\n      if (columns[i].resizable){\n        if (firstResizable === undefined){\n          firstResizable = i;\n        }\n        lastResizable = i;\n      }\n    });\n    if (firstResizable === undefined){\n      return;\n    }\n    columnElements.each(function(i, element){\n      if (i < firstResizable || (options.forceFitColumns && i >= lastResizable)){\n        return;\n      }\n      $col = $(element);\n\n      const $handle = $(\"<div class='slick-resizable-handle' />\");\n      $handle.appendTo(element);\n\n      if ($col.data('resizable'))\n        return;\n\n      const activeColumn = columns[i];\n      if (activeColumn.resizable){\n        $col.data('resizable', true);\n        interact(element).resizable({\n          preserveAspectRatio: false,\n          edges: { left: true, right: true, bottom: false, top: false }\n        }).on('resizestart', function(event){\n          if (!getEditorLock().commitCurrentEdit()){\n            return false;\n          }\n          activeColumn.previousWidth = event.rect.width;\n          event.target.classList.add('slick-header-column-active');\n        }).on('resizemove', function(event){\n          let x = event.dx;\n          let width = activeColumn.width += x;\n\n          if (activeColumn.minWidth > 0 && activeColumn.minWidth > width)\n            width = activeColumn.minWidth;\n          else if (activeColumn.maxWidth > 0 && activeColumn.maxWidth < width)\n            width = activeColumn.maxWidth;\n\n          activeColumn.width = width;\n\n          if (options.forceFitColumns){\n            autosizeColumns();\n          }\n          applyColumnHeaderWidths();\n          if (options.syncColumnCellResize){\n            applyColumnWidths();\n          }\n        }).on('resizeend', function(event){\n          event.target.classList.remove('slick-header-column-active');\n          invalidateAllRows();\n          updateCanvasWidth(true);\n          render();\n          trigger(self.onColumnsResized, {grid: self});\n        });\n      }\n    });\n  }\n\n  function getVBoxDelta($el){\n    var p = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n    var delta = 0;\n    $.each(p, function(n, val){\n      delta += parseFloat($el.css(val)) || 0;\n    });\n    return delta;\n  }\n\n  function measureCellPaddingAndBorder(){\n    var el;\n    var h = ['borderLeftWidth', 'borderRightWidth', 'paddingLeft', 'paddingRight'];\n    var v = ['borderTopWidth', 'borderBottomWidth', 'paddingTop', 'paddingBottom'];\n\n    // jquery prior to version 1.8 handles .width setter/getter as a direct css write/read\n    // jquery 1.8 changed .width to read the true inner element width if box-sizing is set to border-box, and introduced a setter for .outerWidth\n    // so for equivalent functionality, prior to 1.8 use .width, and after use .outerWidth\n    var verArray = $.fn.jquery.split('.');\n    jQueryNewWidthBehaviour = (verArray[0] == 1 && verArray[1] >= 8) || verArray[0] >= 2;\n\n    el = $(\"<div class='ui-state-default slick-header-column' style='visibility:hidden'>-</div>\").appendTo($headers);\n    headerColumnWidthDiff = headerColumnHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box'){\n      $.each(h, function(n, val){\n        headerColumnWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        headerColumnHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    el.remove();\n\n    var r = $(\"<div class='slick-row' />\").appendTo($canvas);\n    el = $(\"<div class='slick-cell' id='' style='visibility:hidden'>-</div>\").appendTo(r);\n    cellWidthDiff = cellHeightDiff = 0;\n    if (el.css('box-sizing') != 'border-box' && el.css('-moz-box-sizing') != 'border-box' && el.css('-webkit-box-sizing') != 'border-box'){\n      $.each(h, function(n, val){\n        cellWidthDiff += parseFloat(el.css(val)) || 0;\n      });\n      $.each(v, function(n, val){\n        cellHeightDiff += parseFloat(el.css(val)) || 0;\n      });\n    }\n    r.remove();\n\n    absoluteColumnMinWidth = Math.max(headerColumnWidthDiff, cellWidthDiff);\n  }\n\n  function createCssRules(){\n    $style = $(\"<style type='text/css' rel='stylesheet' />\").appendTo($('head'));\n    var rowHeight = (options.rowHeight - cellHeightDiff);\n    var rules = [\n      '.' + uid + ' .slick-header-column { left: 0; }',\n      '.' + uid + ' .slick-top-panel { height:' + options.topPanelHeight + 'px; }',\n      '.' + uid + ' .slick-headerrow-columns { height:' + options.headerRowHeight + 'px; }',\n      '.' + uid + ' .slick-footerrow-columns { height:' + options.footerRowHeight + 'px; }',\n      '.' + uid + ' .slick-cell { height:' + rowHeight + 'px; }',\n      '.' + uid + ' .slick-row { height:' + options.rowHeight + 'px; }'\n    ];\n\n    for (var i = 0; i < columns.length; i++){\n      rules.push('.' + uid + ' .l' + i + ' { }');\n      rules.push('.' + uid + ' .r' + i + ' { }');\n    }\n\n    if ($style[0].styleSheet){ // IE\n      $style[0].styleSheet.cssText = rules.join(' ');\n    } else {\n      $style[0].appendChild(document.createTextNode(rules.join(' ')));\n    }\n  }\n\n  function getColumnCssRules(idx){\n    if (!stylesheet){\n      var sheets = document.styleSheets;\n      for (var i = 0; i < sheets.length; i++){\n        if ((sheets[i].ownerNode || sheets[i].owningElement) == $style[0]){\n          stylesheet = sheets[i];\n          break;\n        }\n      }\n\n      if (!stylesheet){\n        throw new Error('Cannot find stylesheet.');\n      }\n\n      // find and cache column CSS rules\n      columnCssRulesL = [];\n      columnCssRulesR = [];\n      var cssRules = (stylesheet.cssRules || stylesheet.rules);\n      var matches, columnIdx;\n      for (var i = 0; i < cssRules.length; i++){\n        var selector = cssRules[i].selectorText;\n        if (matches = /\\.l\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesL[columnIdx] = cssRules[i];\n        } else if (matches = /\\.r\\d+/.exec(selector)){\n          columnIdx = parseInt(matches[0].substr(2, matches[0].length - 2), 10);\n          columnCssRulesR[columnIdx] = cssRules[i];\n        }\n      }\n    }\n\n    return {\n      'left': columnCssRulesL[idx],\n      'right': columnCssRulesR[idx]\n    };\n  }\n\n  function removeCssRules(){\n    $style.remove();\n    stylesheet = null;\n  }\n\n  function destroy(){\n    getEditorLock().cancelCurrentEdit();\n\n    trigger(self.onBeforeDestroy, {grid: self});\n\n    var i = plugins.length;\n    while (i--){\n      unregisterPlugin(plugins[i]);\n    }\n\n    unbindAncestorScrollEvents();\n    $container.unbind('.slickgrid');\n    removeCssRules();\n\n    $container.empty().removeClass(uid);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // General\n\n  function trigger(evt, args, e){\n    e = e || new Slick.EventData();\n    args = args || {};\n    args.grid = self;\n    return evt.notify(args, e, self);\n  }\n\n  function getEditorLock(){\n    return options.editorLock;\n  }\n\n  function getEditController(){\n    return editController;\n  }\n\n  function getColumnIndex(id){\n    return columnsById[id];\n  }\n\n  function autosizeColumns(){\n    var i, c,\n      widths = [],\n      shrinkLeeway = 0,\n      total = 0,\n      prevTotal,\n      availWidth = viewportHasVScroll ? viewportW - scrollbarDimensions.width : viewportW;\n\n    for (i = 0; i < columns.length; i++){\n      c = columns[i];\n      widths.push(c.width);\n      total += c.width;\n      if (c.resizable){\n        shrinkLeeway += c.width - Math.max(c.minWidth, absoluteColumnMinWidth);\n      }\n    }\n\n    // shrink\n    prevTotal = total;\n    while (total > availWidth && shrinkLeeway){\n      var shrinkProportion = (total - availWidth) / shrinkLeeway;\n      for (i = 0; i < columns.length && total > availWidth; i++){\n        c = columns[i];\n        var width = widths[i];\n        if (!c.resizable || width <= c.minWidth || width <= absoluteColumnMinWidth){\n          continue;\n        }\n        var absMinWidth = Math.max(c.minWidth, absoluteColumnMinWidth);\n        var shrinkSize = Math.floor(shrinkProportion * (width - absMinWidth)) || 1;\n        shrinkSize = Math.min(shrinkSize, width - absMinWidth);\n        total -= shrinkSize;\n        shrinkLeeway -= shrinkSize;\n        widths[i] -= shrinkSize;\n      }\n      if (prevTotal <= total){  // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    // grow\n    prevTotal = total;\n    while (total < availWidth){\n      var growProportion = availWidth / total;\n      for (i = 0; i < columns.length && total < availWidth; i++){\n        c = columns[i];\n        var currentWidth = widths[i];\n        var growSize;\n\n        if (!c.resizable || c.maxWidth <= currentWidth){\n          growSize = 0;\n        } else {\n          growSize = Math.min(Math.floor(growProportion * currentWidth) - currentWidth, (c.maxWidth - currentWidth) || 1000000) || 1;\n        }\n        total += growSize;\n        widths[i] += (total <= availWidth ? growSize : 0);\n      }\n      if (prevTotal >= total){  // avoid infinite loop\n        break;\n      }\n      prevTotal = total;\n    }\n\n    var reRender = false;\n    for (i = 0; i < columns.length; i++){\n      if (columns[i].rerenderOnResize && columns[i].width != widths[i]){\n        reRender = true;\n      }\n      columns[i].width = widths[i];\n    }\n\n    applyColumnHeaderWidths();\n    updateCanvasWidth(true);\n    if (reRender){\n      invalidateAllRows();\n      render();\n    }\n  }\n\n  function applyColumnHeaderWidths(){\n    if (!initialized){\n      return;\n    }\n    var h;\n    for (var i = 0, headers = $headers.children('[id]'), ii = headers.length; i < ii; i++){\n      h = $(headers[i]);\n      if (jQueryNewWidthBehaviour){\n        if (h.outerWidth() !== columns[i].width){\n          h.outerWidth(columns[i].width);\n        }\n      } else {\n        if (h.width() !== columns[i].width - headerColumnWidthDiff){\n          h.width(columns[i].width - headerColumnWidthDiff);\n        }\n      }\n    }\n\n    updateColumnCaches();\n  }\n\n  function applyColumnWidths(){\n    var x = 0, w, rule;\n    for (var i = 0; i < columns.length; i++){\n      w = columns[i].width;\n\n      rule = getColumnCssRules(i);\n      rule.left.style.left = x + 'px';\n      rule.right.style.right = (canvasWidth - x - w) + 'px';\n\n      x += columns[i].width;\n    }\n  }\n\n  function setSortColumn(columnId, ascending){\n    setSortColumns([{columnId: columnId, sortAsc: ascending}]);\n  }\n\n  function setSortColumns(cols){\n    sortColumns = cols;\n\n    var headerColumnEls = $headers.children();\n    headerColumnEls\n      .removeClass('slick-header-column-sorted')\n      .find('.slick-sort-indicator')\n      .removeClass('slick-sort-indicator-asc slick-sort-indicator-desc');\n\n    $.each(sortColumns, function(i, col){\n      if (col.sortAsc == null){\n        col.sortAsc = true;\n      }\n      var columnIndex = getColumnIndex(col.columnId);\n      if (columnIndex != null){\n        headerColumnEls.eq(columnIndex)\n          .addClass('slick-header-column-sorted')\n          .find('.slick-sort-indicator')\n          .addClass(col.sortAsc ? 'slick-sort-indicator-asc' : 'slick-sort-indicator-desc');\n      }\n    });\n  }\n\n  function getSortColumns(){\n    return sortColumns;\n  }\n\n  function handleSelectedRangesChanged(e, ranges){\n    selectedRows = [];\n    var hash = {};\n    for (var i = 0; i < ranges.length; i++){\n      for (var j = ranges[i].fromRow; j <= ranges[i].toRow; j++){\n        if (!hash[j]){  // prevent duplicates\n          selectedRows.push(j);\n          hash[j] = {};\n        }\n        for (var k = ranges[i].fromCell; k <= ranges[i].toCell; k++){\n          if (canCellBeSelected(j, k)){\n            hash[j][columns[k].id] = options.selectedCellCssClass;\n          }\n        }\n      }\n    }\n\n    setCellCssStyles(options.selectedCellCssClass, hash);\n\n    trigger(self.onSelectedRowsChanged, {rows: getSelectedRows(), grid: self}, e);\n  }\n\n  function getColumns(){\n    return columns;\n  }\n\n  function updateColumnCaches(){\n    // Pre-calculate cell boundaries.\n    columnPosLeft = [];\n    columnPosRight = [];\n    var x = 0;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      columnPosLeft[i] = x;\n      columnPosRight[i] = x + columns[i].width;\n      x += columns[i].width;\n    }\n  }\n\n  function setColumns(columnDefinitions){\n    columns = columnDefinitions;\n\n    columnsById = {};\n    for (var i = 0; i < columns.length; i++){\n      var m = columns[i] = $.extend({}, columnDefaults, columns[i]);\n      columnsById[m.id] = i;\n      if (m.minWidth && m.width < m.minWidth){\n        m.width = m.minWidth;\n      }\n      if (m.maxWidth && m.width > m.maxWidth){\n        m.width = m.maxWidth;\n      }\n    }\n\n    updateColumnCaches();\n\n    if (initialized){\n      invalidateAllRows();\n      createColumnHeaders();\n      removeCssRules();\n      createCssRules();\n      resizeCanvas();\n      applyColumnWidths();\n      handleScroll();\n    }\n  }\n\n  function getOptions(){\n    return options;\n  }\n\n  function setOptions(args){\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    makeActiveCellNormal();\n\n    if (options.enableAddRow !== args.enableAddRow){\n      invalidateRow(getDataLength());\n    }\n\n    options = $.extend(options, args);\n    validateAndEnforceOptions();\n\n    $viewport.css('overflow-y', options.autoHeight ? 'hidden' : 'auto');\n    render();\n  }\n\n  function validateAndEnforceOptions(){\n    if (options.autoHeight){\n      options.leaveSpaceForNewRows = false;\n    }\n  }\n\n  function setData(newData, scrollToTop){\n    data = newData;\n    invalidateAllRows();\n    updateRowCount();\n    if (scrollToTop){\n      scrollTo(0);\n    }\n  }\n\n  function getData(){\n    return data;\n  }\n\n  function getDataLength(){\n    if (data.getLength){\n      return data.getLength();\n    } else {\n      return data.length;\n    }\n  }\n\n  function getDataLengthIncludingAddNew(){\n    return getDataLength() + (options.enableAddRow ? 1 : 0);\n  }\n\n  function getDataItem(i){\n    if (data.getItem){\n      return data.getItem(i);\n    } else {\n      return data[i];\n    }\n  }\n\n  function getTopPanel(){\n    return $topPanel[0];\n  }\n\n  function setTopPanelVisibility(visible){\n    if (options.showTopPanel != visible){\n      options.showTopPanel = visible;\n      if (visible){\n        $topPanelScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $topPanelScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setHeaderRowVisibility(visible){\n    if (options.showHeaderRow != visible){\n      options.showHeaderRow = visible;\n      if (visible){\n        $headerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $headerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function setFooterRowVisibility(visible){\n    if (options.showFooterRow != visible){\n      options.showFooterRow = visible;\n      if (visible){\n        $footerRowScroller.slideDown('fast', resizeCanvas);\n      } else {\n        $footerRowScroller.slideUp('fast', resizeCanvas);\n      }\n    }\n  }\n\n  function getContainerNode(){\n    return $container.get(0);\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Rendering / Scrolling\n\n  function getRowTop(row){\n    return options.rowHeight * row - offset;\n  }\n\n  function getRowFromPosition(y){\n    return Math.floor((y + offset) / options.rowHeight);\n  }\n\n  function scrollTo(y){\n    y = Math.max(y, 0);\n    y = Math.min(y, th - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0));\n\n    var oldOffset = offset;\n\n    page = Math.min(n - 1, Math.floor(y / ph));\n    offset = Math.round(page * cj);\n    var newScrollTop = y - offset;\n\n    if (offset != oldOffset){\n      var range = getVisibleRange(newScrollTop);\n      cleanupRows(range);\n      updateRowPositions();\n    }\n\n    if (prevScrollTop != newScrollTop){\n      vScrollDir = (prevScrollTop + oldOffset < newScrollTop + offset) ? 1 : -1;\n      $viewport[0].scrollTop = (lastRenderedScrollTop = scrollTop = prevScrollTop = newScrollTop);\n\n      trigger(self.onViewportChanged, {grid: self});\n    }\n  }\n\n  function defaultFormatter(row, cell, value, columnDef, dataContext){\n    if (value == null){\n      return '';\n    } else {\n      return (value + '').replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n    }\n  }\n\n  function getFormatter(row, column){\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    // look up by id, then index\n    var columnOverrides = rowMetadata &&\n      rowMetadata.columns &&\n      (rowMetadata.columns[column.id] || rowMetadata.columns[getColumnIndex(column.id)]);\n\n    return (columnOverrides && columnOverrides.formatter) ||\n      (rowMetadata && rowMetadata.formatter) ||\n      column.formatter ||\n      (options.formatterFactory && options.formatterFactory.getFormatter(column)) ||\n      options.defaultFormatter;\n  }\n\n  function getEditor(row, cell){\n    var column = columns[cell];\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n\n    if (columnMetadata && columnMetadata[column.id] && columnMetadata[column.id].editor !== undefined){\n      return columnMetadata[column.id].editor;\n    }\n    if (columnMetadata && columnMetadata[cell] && columnMetadata[cell].editor !== undefined){\n      return columnMetadata[cell].editor;\n    }\n\n    return column.editor || (options.editorFactory && options.editorFactory.getEditor(column));\n  }\n\n  function getDataItemValueForColumn(item, columnDef){\n    if (options.dataItemColumnValueExtractor){\n      return options.dataItemColumnValueExtractor(item, columnDef);\n    }\n    return item[columnDef.field];\n  }\n\n  function appendRowHtml(stringArray, row, range, dataLength){\n    var d = getDataItem(row);\n    var dataLoading = row < dataLength && !d;\n    var rowCss = 'slick-row' +\n      (dataLoading ? ' loading' : '') +\n      (row === activeRow ? ' active' : '') +\n      (row % 2 == 1 ? ' odd' : ' even');\n\n    if (!d){\n      rowCss += ' ' + options.addNewRowCssClass;\n    }\n\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n\n    if (metadata && metadata.cssClasses){\n      rowCss += ' ' + metadata.cssClasses;\n    }\n\n    stringArray.push(\"<div class='ui-widget-content \" + rowCss + \"' style='top:\" + getRowTop(row) + \"px'>\");\n\n    var colspan, m;\n    for (var i = 0, ii = columns.length; i < ii; i++){\n      m = columns[i];\n      colspan = 1;\n      if (metadata && metadata.columns){\n        var columnData = metadata.columns[m.id] || metadata.columns[i];\n        colspan = (columnData && columnData.colspan) || 1;\n        if (colspan === '*'){\n          colspan = ii - i;\n        }\n      }\n\n      // Do not render cells outside of the viewport.\n      if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n        if (columnPosLeft[i] > range.rightPx){\n          // All columns to the right are outside the range.\n          break;\n        }\n\n        appendCellHtml(stringArray, row, i, colspan, d);\n      }\n\n      if (colspan > 1){\n        i += (colspan - 1);\n      }\n    }\n\n    stringArray.push('</div>');\n  }\n\n  function appendCellHtml(stringArray, row, cell, colspan, item){\n    // stringArray: stringBuilder containing the HTML parts\n    // row, cell: row and column index\n    // colspan: HTML colspan\n    // item: grid data for row\n\n    var m = columns[cell];\n    var cellCss = 'slick-cell l' + cell + ' r' + Math.min(columns.length - 1, cell + colspan - 1) +\n      (m.cssClass ? ' ' + m.cssClass : '');\n    if (row === activeRow && cell === activeCell){\n      cellCss += (' active');\n    }\n\n    // TODO:  merge them together in the setter\n    for (var key in cellCssClasses){\n      if (cellCssClasses[key][row] && cellCssClasses[key][row][m.id]){\n        cellCss += (' ' + cellCssClasses[key][row][m.id]);\n      }\n    }\n\n    stringArray.push(\"<div class='\" + cellCss + \"'>\");\n\n    // if there is a corresponding row (if not, this is the Add New row or this data hasn't been loaded yet)\n    if (item){\n      var value = getDataItemValueForColumn(item, m);\n      stringArray.push(getFormatter(row, m)(row, cell, value, m, item));\n    }\n\n    stringArray.push('</div>');\n\n    rowsCache[row].cellRenderQueue.push(cell);\n    rowsCache[row].cellColSpans[cell] = colspan;\n  }\n\n  function cleanupRows(rangeToKeep){\n    for (var i in rowsCache){\n      if (((i = parseInt(i, 10)) !== activeRow) && (i < rangeToKeep.top || i > rangeToKeep.bottom)){\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidate(){\n    updateRowCount();\n    invalidateAllRows();\n    render();\n  }\n\n  function invalidateAllRows(){\n    if (currentEditor){\n      makeActiveCellNormal();\n    }\n    for (var row in rowsCache){\n      removeRowFromCache(row);\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function queuePostProcessedRowForCleanup(cacheEntry, postProcessedRow, rowIdx){\n    postProcessgroupId++;\n\n    // store and detach node for later async cleanup\n    for (var columnIdx in postProcessedRow){\n      if (postProcessedRow.hasOwnProperty(columnIdx)){\n        postProcessedCleanupQueue.push({\n          actionType: 'C',\n          groupId: postProcessgroupId,\n          node: cacheEntry.cellNodesByColumnIdx[columnIdx | 0],\n          columnIdx: columnIdx | 0,\n          rowIdx: rowIdx\n        });\n      }\n    }\n    postProcessedCleanupQueue.push({\n      actionType: 'R',\n      groupId: postProcessgroupId,\n      node: cacheEntry.rowNode\n    });\n    $(cacheEntry.rowNode).detach();\n  }\n\n  function queuePostProcessedCellForCleanup(cellnode, columnIdx, rowIdx){\n    postProcessedCleanupQueue.push({\n      actionType: 'C',\n      groupId: postProcessgroupId,\n      node: cellnode,\n      columnIdx: columnIdx,\n      rowIdx: rowIdx\n    });\n    $(cellnode).detach();\n  }\n\n  function removeRowFromCache(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    if (rowNodeFromLastMouseWheelEvent === cacheEntry.rowNode){\n      cacheEntry.rowNode.style.display = 'none';\n      zombieRowNodeFromLastMouseWheelEvent = rowNodeFromLastMouseWheelEvent;\n      zombieRowCacheFromLastMouseWheelEvent = cacheEntry;\n      zombieRowPostProcessedFromLastMouseWheelEvent = postProcessedRows[row];\n      // ignore post processing cleanup in this case - it will be dealt with later\n    } else {\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row]){\n        queuePostProcessedRowForCleanup(cacheEntry, postProcessedRows[row], row);\n      } else {\n        $canvas[0].removeChild(cacheEntry.rowNode);\n      }\n    }\n\n    delete rowsCache[row];\n    delete postProcessedRows[row];\n    renderedRows--;\n    counter_rows_removed++;\n  }\n\n  function invalidateRows(rows){\n    var i, rl;\n    if (!rows || !rows.length){\n      return;\n    }\n    vScrollDir = 0;\n    for (i = 0, rl = rows.length; i < rl; i++){\n      if (currentEditor && activeRow === rows[i]){\n        makeActiveCellNormal();\n      }\n      if (rowsCache[rows[i]]){\n        removeRowFromCache(rows[i]);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n  }\n\n  function invalidateRow(row){\n    invalidateRows([row]);\n  }\n\n  function updateCell(row, cell){\n    var cellNode = getCellNode(row, cell);\n    if (!cellNode){\n      return;\n    }\n\n    var m = columns[cell], d = getDataItem(row);\n    if (currentEditor && activeRow === row && activeCell === cell){\n      currentEditor.loadValue(d);\n    } else {\n      cellNode.innerHTML = d ? getFormatter(row, m)(row, cell, getDataItemValueForColumn(d, m), m, d) : '';\n      invalidatePostProcessingResults(row);\n    }\n  }\n\n  function updateRow(row){\n    var cacheEntry = rowsCache[row];\n    if (!cacheEntry){\n      return;\n    }\n\n    ensureCellNodesInRowsCache(row);\n\n    var d = getDataItem(row);\n\n    for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n        continue;\n      }\n\n      columnIdx = columnIdx | 0;\n      var m = columns[columnIdx],\n        node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n\n      if (row === activeRow && columnIdx === activeCell && currentEditor){\n        currentEditor.loadValue(d);\n      } else if (d){\n        node.innerHTML = getFormatter(row, m)(row, columnIdx, getDataItemValueForColumn(d, m), m, d);\n      } else {\n        node.innerHTML = '';\n      }\n    }\n\n    invalidatePostProcessingResults(row);\n  }\n\n  function getViewportHeight(){\n    return parseFloat($.css($container[0], 'height', true)) -\n      parseFloat($.css($container[0], 'paddingTop', true)) -\n      parseFloat($.css($container[0], 'paddingBottom', true)) -\n      parseFloat($.css($headerScroller[0], 'height')) - getVBoxDelta($headerScroller) -\n      (options.showTopPanel ? options.topPanelHeight + getVBoxDelta($topPanelScroller) : 0) -\n      (options.showHeaderRow ? options.headerRowHeight + getVBoxDelta($headerRowScroller) : 0) -\n      (options.createFooterRow && options.showFooterRow ? options.footerRowHeight + getVBoxDelta($footerRowScroller) : 0);\n  }\n\n  function resizeCanvas(){\n    if (!initialized){\n      return;\n    }\n    if (options.autoHeight){\n      viewportH = options.rowHeight * getDataLengthIncludingAddNew();\n    } else {\n      viewportH = getViewportHeight();\n    }\n\n    numVisibleRows = Math.ceil(viewportH / options.rowHeight);\n    viewportW = parseFloat($.css($container[0], 'width', true));\n    if (!options.autoHeight){\n      $viewport.height(viewportH);\n    }\n\n    if (options.forceFitColumns){\n      autosizeColumns();\n    }\n\n    updateRowCount();\n    handleScroll();\n    // Since the width has changed, force the render() to reevaluate virtually rendered cells.\n    lastRenderedScrollLeft = -1;\n    render();\n  }\n\n  function updateRowCount(){\n    if (!initialized){\n      return;\n    }\n\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    var numberOfRows = dataLengthIncludingAddNew +\n      (options.leaveSpaceForNewRows ? numVisibleRows - 1 : 0);\n\n    var oldViewportHasVScroll = viewportHasVScroll;\n    // with autoHeight, we do not need to accommodate the vertical scroll bar\n    viewportHasVScroll = !options.autoHeight && (numberOfRows * options.rowHeight > viewportH);\n    viewportHasHScroll = (canvasWidth > viewportW - scrollbarDimensions.width);\n\n    makeActiveCellNormal();\n\n    // remove the rows that are now outside of the data range\n    // this helps avoid redundant calls to .removeRow() when the size of the data decreased by thousands of rows\n    var l = dataLengthIncludingAddNew - 1;\n    for (var i in rowsCache){\n      if (i > l){\n        removeRowFromCache(i);\n      }\n    }\n    if (options.enableAsyncPostRenderCleanup){\n      startPostProcessingCleanup();\n    }\n\n    if (activeCellNode && activeRow > l){\n      resetActiveCell();\n    }\n\n    var oldH = h;\n    th = Math.max(options.rowHeight * numberOfRows, viewportH - scrollbarDimensions.height);\n    if (th < maxSupportedCssHeight){\n      // just one page\n      h = ph = th;\n      n = 1;\n      cj = 0;\n    } else {\n      // break into pages\n      h = maxSupportedCssHeight;\n      ph = h / 100;\n      n = Math.floor(th / ph);\n      cj = (th - h) / (n - 1);\n    }\n\n    if (h !== oldH){\n      $canvas.css('height', h);\n      scrollTop = $viewport[0].scrollTop;\n    }\n\n    var oldScrollTopInRange = (scrollTop + offset <= th - viewportH);\n\n    if (th == 0 || scrollTop == 0){\n      page = offset = 0;\n    } else if (oldScrollTopInRange){\n      // maintain virtual position\n      scrollTo(scrollTop + offset);\n    } else {\n      // scroll to bottom\n      scrollTo(th - viewportH);\n    }\n\n    if (h != oldH && options.autoHeight){\n      resizeCanvas();\n    }\n\n    if (options.forceFitColumns && oldViewportHasVScroll != viewportHasVScroll){\n      autosizeColumns();\n    }\n    updateCanvasWidth(false);\n  }\n\n  function getVisibleRange(viewportTop, viewportLeft){\n    if (viewportTop == null){\n      viewportTop = scrollTop;\n    }\n    if (viewportLeft == null){\n      viewportLeft = scrollLeft;\n    }\n\n    return {\n      top: getRowFromPosition(viewportTop),\n      bottom: getRowFromPosition(viewportTop + viewportH) + 1,\n      leftPx: viewportLeft,\n      rightPx: viewportLeft + viewportW\n    };\n  }\n\n  function getRenderedRange(viewportTop, viewportLeft){\n    var range = getVisibleRange(viewportTop, viewportLeft);\n    var buffer = Math.round(viewportH / options.rowHeight);\n    var minBuffer = 3;\n\n    if (vScrollDir == -1){\n      range.top -= buffer;\n      range.bottom += minBuffer;\n    } else if (vScrollDir == 1){\n      range.top -= minBuffer;\n      range.bottom += buffer;\n    } else {\n      range.top -= minBuffer;\n      range.bottom += minBuffer;\n    }\n\n    range.top = Math.max(0, range.top);\n    range.bottom = Math.min(getDataLengthIncludingAddNew() - 1, range.bottom);\n\n    range.leftPx -= viewportW;\n    range.rightPx += viewportW;\n\n    range.leftPx = Math.max(0, range.leftPx);\n    range.rightPx = Math.min(canvasWidth, range.rightPx);\n\n    return range;\n  }\n\n  function ensureCellNodesInRowsCache(row){\n    var cacheEntry = rowsCache[row];\n    if (cacheEntry){\n      if (cacheEntry.cellRenderQueue.length){\n        var lastChild = cacheEntry.rowNode.lastChild;\n        while (cacheEntry.cellRenderQueue.length){\n          var columnIdx = cacheEntry.cellRenderQueue.pop();\n          cacheEntry.cellNodesByColumnIdx[columnIdx] = lastChild;\n          lastChild = lastChild.previousSibling;\n        }\n      }\n    }\n  }\n\n  function cleanUpCells(range, row){\n    var totalCellsRemoved = 0;\n    var cacheEntry = rowsCache[row];\n\n    // Remove cells outside the range.\n    var cellsToRemove = [];\n    for (var i in cacheEntry.cellNodesByColumnIdx){\n      // I really hate it when people mess with Array.prototype.\n      if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(i)){\n        continue;\n      }\n\n      // This is a string, so it needs to be cast back to a number.\n      i = i | 0;\n\n      var colspan = cacheEntry.cellColSpans[i];\n      if (columnPosLeft[i] > range.rightPx ||\n        columnPosRight[Math.min(columns.length - 1, i + colspan - 1)] < range.leftPx){\n        if (!(row == activeRow && i == activeCell)){\n          cellsToRemove.push(i);\n        }\n      }\n    }\n\n    var cellToRemove, node;\n    postProcessgroupId++;\n    while ((cellToRemove = cellsToRemove.pop()) != null){\n      node = cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (options.enableAsyncPostRenderCleanup && postProcessedRows[row] && postProcessedRows[row][cellToRemove]){\n        queuePostProcessedCellForCleanup(node, cellToRemove, row);\n      } else {\n        cacheEntry.rowNode.removeChild(node);\n      }\n\n      delete cacheEntry.cellColSpans[cellToRemove];\n      delete cacheEntry.cellNodesByColumnIdx[cellToRemove];\n      if (postProcessedRows[row]){\n        delete postProcessedRows[row][cellToRemove];\n      }\n      totalCellsRemoved++;\n    }\n  }\n\n  function cleanUpAndRenderCells(range){\n    var cacheEntry;\n    var stringArray = [];\n    var processedRows = [];\n    var cellsAdded;\n    var totalCellsAdded = 0;\n    var colspan;\n\n    for (var row = range.top, btm = range.bottom; row <= btm; row++){\n      cacheEntry = rowsCache[row];\n      if (!cacheEntry){\n        continue;\n      }\n\n      // cellRenderQueue populated in renderRows() needs to be cleared first\n      ensureCellNodesInRowsCache(row);\n\n      cleanUpCells(range, row);\n\n      // Render missing cells.\n      cellsAdded = 0;\n\n      var metadata = data.getItemMetadata && data.getItemMetadata(row);\n      metadata = metadata && metadata.columns;\n\n      var d = getDataItem(row);\n\n      // TODO:  shorten this loop (index? heuristics? binary search?)\n      for (var i = 0, ii = columns.length; i < ii; i++){\n        // Cells to the right are outside the range.\n        if (columnPosLeft[i] > range.rightPx){\n          break;\n        }\n\n        // Already rendered.\n        if ((colspan = cacheEntry.cellColSpans[i]) != null){\n          i += (colspan > 1 ? colspan - 1 : 0);\n          continue;\n        }\n\n        colspan = 1;\n        if (metadata){\n          var columnData = metadata[columns[i].id] || metadata[i];\n          colspan = (columnData && columnData.colspan) || 1;\n          if (colspan === '*'){\n            colspan = ii - i;\n          }\n        }\n\n        if (columnPosRight[Math.min(ii - 1, i + colspan - 1)] > range.leftPx){\n          appendCellHtml(stringArray, row, i, colspan, d);\n          cellsAdded++;\n        }\n\n        i += (colspan > 1 ? colspan - 1 : 0);\n      }\n\n      if (cellsAdded){\n        totalCellsAdded += cellsAdded;\n        processedRows.push(row);\n      }\n    }\n\n    if (!stringArray.length){\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    var processedRow;\n    var node;\n    while ((processedRow = processedRows.pop()) != null){\n      cacheEntry = rowsCache[processedRow];\n      var columnIdx;\n      while ((columnIdx = cacheEntry.cellRenderQueue.pop()) != null){\n        node = x.lastChild;\n        cacheEntry.rowNode.appendChild(node);\n        cacheEntry.cellNodesByColumnIdx[columnIdx] = node;\n      }\n    }\n  }\n\n  function renderRows(range){\n    var parentNode = $canvas[0],\n      stringArray = [],\n      rows = [],\n      needToReselectCell = false,\n      dataLength = getDataLength();\n\n    for (var i = range.top, ii = range.bottom; i <= ii; i++){\n      if (rowsCache[i]){\n        continue;\n      }\n      renderedRows++;\n      rows.push(i);\n\n      // Create an entry right away so that appendRowHtml() can\n      // start populatating it.\n      rowsCache[i] = {\n        'rowNode': null,\n\n        // ColSpans of rendered cells (by column idx).\n        // Can also be used for checking whether a cell has been rendered.\n        'cellColSpans': [],\n\n        // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\n        'cellNodesByColumnIdx': [],\n\n        // Column indices of cell nodes that have been rendered, but not yet indexed in\n        // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\n        // end of the row.\n        'cellRenderQueue': []\n      };\n\n      appendRowHtml(stringArray, i, range, dataLength);\n      if (activeCellNode && activeRow === i){\n        needToReselectCell = true;\n      }\n      counter_rows_rendered++;\n    }\n\n    if (!rows.length){\n      return;\n    }\n\n    var x = document.createElement('div');\n    x.innerHTML = stringArray.join('');\n\n    for (var i = 0, ii = rows.length; i < ii; i++){\n      rowsCache[rows[i]].rowNode = parentNode.appendChild(x.firstChild);\n    }\n\n    if (needToReselectCell){\n      activeCellNode = getCellNode(activeRow, activeCell);\n    }\n  }\n\n  function startPostProcessing(){\n    if (!options.enableAsyncPostRender){\n      return;\n    }\n    clearTimeout(h_postrender);\n    h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n  }\n\n  function startPostProcessingCleanup(){\n    if (!options.enableAsyncPostRenderCleanup){\n      return;\n    }\n    clearTimeout(h_postrenderCleanup);\n    h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n  }\n\n  function invalidatePostProcessingResults(row){\n    // change status of columns to be re-rendered\n    for (var columnIdx in postProcessedRows[row]){\n      if (postProcessedRows[row].hasOwnProperty(columnIdx)){\n        postProcessedRows[row][columnIdx] = 'C';\n      }\n    }\n    postProcessFromRow = Math.min(postProcessFromRow, row);\n    postProcessToRow = Math.max(postProcessToRow, row);\n    startPostProcessing();\n  }\n\n  function updateRowPositions(){\n    for (var row in rowsCache){\n      rowsCache[row].rowNode.style.top = getRowTop(row) + 'px';\n    }\n  }\n\n  function render(){\n    if (!initialized){\n      return;\n    }\n    var visible = getVisibleRange();\n    var rendered = getRenderedRange();\n\n    // remove rows no longer in the viewport\n    cleanupRows(rendered);\n\n    // add new rows & missing cells in existing rows\n    if (lastRenderedScrollLeft != scrollLeft){\n      cleanUpAndRenderCells(rendered);\n    }\n\n    // render missing rows\n    renderRows(rendered);\n\n    postProcessFromRow = visible.top;\n    postProcessToRow = Math.min(getDataLengthIncludingAddNew() - 1, visible.bottom);\n    startPostProcessing();\n\n    lastRenderedScrollTop = scrollTop;\n    lastRenderedScrollLeft = scrollLeft;\n    h_render = null;\n  }\n\n  function handleHeaderRowScroll(){\n    var scrollLeft = $headerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft){\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleFooterRowScroll(){\n    var scrollLeft = $footerRowScroller[0].scrollLeft;\n    if (scrollLeft != $viewport[0].scrollLeft){\n      $viewport[0].scrollLeft = scrollLeft;\n    }\n  }\n\n  function handleScroll(){\n    scrollTop = $viewport[0].scrollTop;\n    scrollLeft = $viewport[0].scrollLeft;\n    var vScrollDist = Math.abs(scrollTop - prevScrollTop);\n    var hScrollDist = Math.abs(scrollLeft - prevScrollLeft);\n\n    if (hScrollDist){\n      prevScrollLeft = scrollLeft;\n      $headerScroller[0].scrollLeft = scrollLeft;\n      $topPanelScroller[0].scrollLeft = scrollLeft;\n      $headerRowScroller[0].scrollLeft = scrollLeft;\n      if (options.createFooterRow){\n        $footerRowScroller[0].scrollLeft = scrollLeft;\n      }\n    }\n\n    if (vScrollDist){\n      vScrollDir = prevScrollTop < scrollTop ? 1 : -1;\n      prevScrollTop = scrollTop;\n\n      // switch virtual pages if needed\n      if (vScrollDist < viewportH){\n        scrollTo(scrollTop + offset);\n      } else {\n        var oldOffset = offset;\n        if (h == viewportH){\n          page = 0;\n        } else {\n          page = Math.min(n - 1, Math.floor(scrollTop * ((th - viewportH) / (h - viewportH)) * (1 / ph)));\n        }\n        offset = Math.round(page * cj);\n        if (oldOffset != offset){\n          invalidateAllRows();\n        }\n      }\n    }\n\n    if (hScrollDist || vScrollDist){\n      if (h_render){\n        clearTimeout(h_render);\n      }\n\n      if (Math.abs(lastRenderedScrollTop - scrollTop) > 20 ||\n        Math.abs(lastRenderedScrollLeft - scrollLeft) > 20){\n        if (options.forceSyncScrolling || (\n          Math.abs(lastRenderedScrollTop - scrollTop) < viewportH &&\n          Math.abs(lastRenderedScrollLeft - scrollLeft) < viewportW)){\n          render();\n        } else {\n          h_render = setTimeout(render, 50);\n        }\n\n        trigger(self.onViewportChanged, {grid: self});\n      }\n    }\n\n    trigger(self.onScroll, {scrollLeft: scrollLeft, scrollTop: scrollTop, grid: self});\n  }\n\n  function asyncPostProcessRows(){\n    var dataLength = getDataLength();\n    while (postProcessFromRow <= postProcessToRow){\n      var row = (vScrollDir >= 0) ? postProcessFromRow++ : postProcessToRow--;\n      var cacheEntry = rowsCache[row];\n      if (!cacheEntry || row >= dataLength){\n        continue;\n      }\n\n      if (!postProcessedRows[row]){\n        postProcessedRows[row] = {};\n      }\n\n      ensureCellNodesInRowsCache(row);\n      for (var columnIdx in cacheEntry.cellNodesByColumnIdx){\n        if (!cacheEntry.cellNodesByColumnIdx.hasOwnProperty(columnIdx)){\n          continue;\n        }\n\n        columnIdx = columnIdx | 0;\n\n        var m = columns[columnIdx];\n        var processedStatus = postProcessedRows[row][columnIdx]; // C=cleanup and re-render, R=rendered\n        if (m.asyncPostRender && processedStatus !== 'R'){\n          var node = cacheEntry.cellNodesByColumnIdx[columnIdx];\n          if (node){\n            m.asyncPostRender(node, row, getDataItem(row), m, (processedStatus === 'C'));\n          }\n          postProcessedRows[row][columnIdx] = 'R';\n        }\n      }\n\n      h_postrender = setTimeout(asyncPostProcessRows, options.asyncPostRenderDelay);\n      return;\n    }\n  }\n\n  function asyncPostProcessCleanupRows(){\n    if (postProcessedCleanupQueue.length > 0){\n      var groupId = postProcessedCleanupQueue[0].groupId;\n\n      // loop through all queue members with this groupID\n      while (postProcessedCleanupQueue.length > 0 && postProcessedCleanupQueue[0].groupId == groupId){\n        var entry = postProcessedCleanupQueue.shift();\n        if (entry.actionType == 'R'){\n          $(entry.node).remove();\n        }\n        if (entry.actionType == 'C'){\n          var column = columns[entry.columnIdx];\n          if (column.asyncPostRenderCleanup && entry.node){\n            // cleanup must also remove element\n            column.asyncPostRenderCleanup(entry.node, entry.rowIdx, column);\n          }\n        }\n      }\n\n      // call this function again after the specified delay\n      h_postrenderCleanup = setTimeout(asyncPostProcessCleanupRows, options.asyncPostRenderCleanupDelay);\n    }\n  }\n\n  function updateCellCssStylesOnRenderedRows(addedHash, removedHash){\n    var node, columnId, addedRowHash, removedRowHash;\n    for (var row in rowsCache){\n      removedRowHash = removedHash && removedHash[row];\n      addedRowHash = addedHash && addedHash[row];\n\n      if (removedRowHash){\n        for (columnId in removedRowHash){\n          if (!addedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).removeClass(removedRowHash[columnId]);\n            }\n          }\n        }\n      }\n\n      if (addedRowHash){\n        for (columnId in addedRowHash){\n          if (!removedRowHash || removedRowHash[columnId] != addedRowHash[columnId]){\n            node = getCellNode(row, getColumnIndex(columnId));\n            if (node){\n              $(node).addClass(addedRowHash[columnId]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  function addCellCssStyles(key, hash){\n    if (cellCssClasses[key]){\n      throw \"addCellCssStyles: cell CSS hash with key '\" + key + \"' already exists.\";\n    }\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, null);\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': hash, 'grid': self});\n  }\n\n  function removeCellCssStyles(key){\n    if (!cellCssClasses[key]){\n      return;\n    }\n\n    updateCellCssStylesOnRenderedRows(null, cellCssClasses[key]);\n    delete cellCssClasses[key];\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': null, 'grid': self});\n  }\n\n  function setCellCssStyles(key, hash){\n    var prevHash = cellCssClasses[key];\n\n    cellCssClasses[key] = hash;\n    updateCellCssStylesOnRenderedRows(hash, prevHash);\n\n    trigger(self.onCellCssStylesChanged, {'key': key, 'hash': hash, 'grid': self});\n  }\n\n  function getCellCssStyles(key){\n    return cellCssClasses[key];\n  }\n\n  function flashCell(row, cell, speed){\n    speed = speed || 100;\n    if (rowsCache[row]){\n      var $cell = $(getCellNode(row, cell));\n\n      function toggleCellClass(times){\n        if (!times){\n          return;\n        }\n        setTimeout(function(){\n          $cell.queue(function(){\n            $cell.toggleClass(options.cellFlashingCssClass).dequeue();\n            toggleCellClass(times - 1);\n          });\n        },\n          speed);\n      }\n\n      toggleCellClass(4);\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Interactivity\n\n  function handleMouseWheel(e){\n    var rowNode = $(e.target).closest('.slick-row')[0];\n    if (rowNode != rowNodeFromLastMouseWheelEvent){\n      if (zombieRowNodeFromLastMouseWheelEvent && zombieRowNodeFromLastMouseWheelEvent != rowNode){\n        if (options.enableAsyncPostRenderCleanup && zombieRowPostProcessedFromLastMouseWheelEvent){\n          queuePostProcessedRowForCleanup(zombieRowCacheFromLastMouseWheelEvent,\n            zombieRowPostProcessedFromLastMouseWheelEvent);\n        } else {\n          $canvas[0].removeChild(zombieRowNodeFromLastMouseWheelEvent);\n        }\n        zombieRowNodeFromLastMouseWheelEvent = null;\n        zombieRowCacheFromLastMouseWheelEvent = null;\n        zombieRowPostProcessedFromLastMouseWheelEvent = null;\n\n        if (options.enableAsyncPostRenderCleanup){\n          startPostProcessingCleanup();\n        }\n      }\n      rowNodeFromLastMouseWheelEvent = rowNode;\n    }\n  }\n\n  function handleDragStart(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    var cell = getCellFromEvent(event);\n    if (!cell || !cellExists(cell.row, cell.cell)){\n      return false;\n    }\n\n    var retval = trigger(self.onDragStart, interactEvent, event);\n    if (event.isImmediatePropagationStopped()){\n      return retval;\n    }\n\n    return false;\n  }\n\n  function handleDrag(interactEvent){\n    var event = $.Event(interactEvent.originalEvent.type, interactEvent.originalEvent);\n    return trigger(self.onDrag, interactEvent, event);\n  }\n\n  function handleDragEnd(interactEvent){\n    trigger(self.onDragEnd, interactEvent, $.Event('mousedown'));\n  }\n\n  function handleKeyDown(e){\n    trigger(self.onKeyDown, {row: activeRow, cell: activeCell, grid: self}, e);\n    var handled = e.isImmediatePropagationStopped();\n    var keyCode = Slick.keyCode;\n\n    if (!handled){\n      if (!e.shiftKey && !e.altKey && !e.ctrlKey){\n        // editor may specify an array of keys to bubble\n        if (options.editable && currentEditor && currentEditor.keyCaptureList){\n          if (currentEditor.keyCaptureList.indexOf(e.which) > -1){\n            return;\n          }\n        }\n        if (e.which == keyCode.ESCAPE){\n          if (!getEditorLock().isActive()){\n            return; // no editing mode to cancel, allow bubbling and default processing (exit without cancelling the event)\n          }\n          cancelEditAndSetFocus();\n        } else if (e.which == keyCode.PAGE_DOWN){\n          navigatePageDown();\n          handled = true;\n        } else if (e.which == keyCode.PAGE_UP){\n          navigatePageUp();\n          handled = true;\n        } else if (e.which == keyCode.LEFT){\n          handled = navigateLeft();\n        } else if (e.which == keyCode.RIGHT){\n          handled = navigateRight();\n        } else if (e.which == keyCode.UP){\n          handled = navigateUp();\n        } else if (e.which == keyCode.DOWN){\n          handled = navigateDown();\n        } else if (e.which == keyCode.TAB){\n          handled = navigateNext();\n        } else if (e.which == keyCode.ENTER){\n          if (options.editable){\n            if (currentEditor){\n              // adding new row\n              if (activeRow === getDataLength()){\n                navigateDown();\n              } else {\n                commitEditAndSetFocus();\n              }\n            } else {\n              if (getEditorLock().commitCurrentEdit()){\n                makeActiveCellEditable();\n              }\n            }\n          }\n          handled = true;\n        }\n      } else if (e.which == keyCode.TAB && e.shiftKey && !e.ctrlKey && !e.altKey){\n        handled = navigatePrev();\n      }\n    }\n\n    if (handled){\n      // the event has been handled so don't let parent element (bubbling/propagation) or browser (default) handle it\n      e.stopPropagation();\n      e.preventDefault();\n      try {\n        e.originalEvent.keyCode = 0; // prevent default behaviour for special keys in IE browsers (F3, F5, etc.)\n      }\n        // ignore exceptions - setting the original event's keycode throws access denied exception for \"Ctrl\"\n        // (hitting control key only, nothing else), \"Shift\" (maybe others)\n      catch (error){\n      }\n    }\n  }\n\n  function handleClick(e){\n    if (!currentEditor){\n      // if this click resulted in some cell child node getting focus,\n      // don't steal it back - keyboard events will still bubble up\n      // IE9+ seems to default DIVs to tabIndex=0 instead of -1, so check for cell clicks directly.\n      if (e.target != document.activeElement || $(e.target).hasClass('slick-cell')){\n        setFocus();\n      }\n    }\n\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onClick, {row: cell.row, cell: cell.cell, grid: self}, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if ((activeCell != cell.cell || activeRow != cell.row) && canCellBeActive(cell.row, cell.cell)){\n      if (!getEditorLock().isActive() || getEditorLock().commitCurrentEdit()){\n        scrollRowIntoView(cell.row, false);\n        setActiveCellInternal(getCellNode(cell.row, cell.cell));\n      }\n    }\n  }\n\n  function handleContextMenu(e){\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if ($cell.length === 0){\n      return;\n    }\n\n    // are we editing this cell?\n    if (activeCellNode === $cell[0] && currentEditor !== null){\n      return;\n    }\n\n    trigger(self.onContextMenu, {grid: self}, e);\n  }\n\n  function handleDblClick(e){\n    var cell = getCellFromEvent(e);\n    if (!cell || (currentEditor !== null && activeRow == cell.row && activeCell == cell.cell)){\n      return;\n    }\n\n    trigger(self.onDblClick, {row: cell.row, cell: cell.cell, grid: self}, e);\n    if (e.isImmediatePropagationStopped()){\n      return;\n    }\n\n    if (options.editable){\n      gotoCell(cell.row, cell.cell, true);\n    }\n  }\n\n  function handleHeaderMouseEnter(e){\n    trigger(self.onHeaderMouseEnter, {\n      'column': $(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderMouseLeave(e){\n    trigger(self.onHeaderMouseLeave, {\n      'column': $(this).data('column'),\n      'grid': self\n    }, e);\n  }\n\n  function handleHeaderContextMenu(e){\n    var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    trigger(self.onHeaderContextMenu, {column: column, grid: self}, e);\n  }\n\n  function handleHeaderClick(e){\n    var $header = $(e.target).closest('.slick-header-column', '.slick-header-columns');\n    var column = $header && $header.data('column');\n    if (column){\n      trigger(self.onHeaderClick, {column: column, grid: self}, e);\n    }\n  }\n\n  function handleMouseEnter(e){\n    trigger(self.onMouseEnter, {grid: self}, e);\n  }\n\n  function handleMouseLeave(e){\n    trigger(self.onMouseLeave, {grid: self}, e);\n  }\n\n  function cellExists(row, cell){\n    return !(row < 0 || row >= getDataLength() || cell < 0 || cell >= columns.length);\n  }\n\n  function getCellFromPoint(x, y){\n    var row = getRowFromPosition(y);\n    var cell = 0;\n\n    var w = 0;\n    for (var i = 0; i < columns.length && w < x; i++){\n      w += columns[i].width;\n      cell++;\n    }\n\n    if (cell < 0){\n      cell = 0;\n    }\n\n    return {row: row, cell: cell - 1};\n  }\n\n  function getCellFromNode(cellNode){\n    // read column number from .l<columnNumber> CSS class\n    var cls = /l\\d+/.exec(cellNode.className);\n    if (!cls){\n      throw 'getCellFromNode: cannot get cell - ' + cellNode.className;\n    }\n    return parseInt(cls[0].substr(1, cls[0].length - 1), 10);\n  }\n\n  function getRowFromNode(rowNode){\n    for (var row in rowsCache){\n      if (rowsCache[row].rowNode === rowNode){\n        return row | 0;\n      }\n    }\n\n    return null;\n  }\n\n  function getCellFromEvent(e){\n    var $cell = $(e.target).closest('.slick-cell', $canvas);\n    if (!$cell.length){\n      return null;\n    }\n\n    var row = getRowFromNode($cell[0].parentNode);\n    var cell = getCellFromNode($cell[0]);\n\n    if (row == null || cell == null){\n      return null;\n    } else {\n      return {\n        'row': row,\n        'cell': cell\n      };\n    }\n  }\n\n  function getCellNodeBox(row, cell){\n    if (!cellExists(row, cell)){\n      return null;\n    }\n\n    var y1 = getRowTop(row);\n    var y2 = y1 + options.rowHeight - 1;\n    var x1 = 0;\n    for (var i = 0; i < cell; i++){\n      x1 += columns[i].width;\n    }\n    var x2 = x1 + columns[cell].width;\n\n    return {\n      top: y1,\n      left: x1,\n      bottom: y2,\n      right: x2\n    };\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Cell switching\n\n  function resetActiveCell(){\n    setActiveCellInternal(null, false);\n  }\n\n  function setFocus(){\n    if (tabbingDirection == -1){\n      $focusSink[0].focus();\n    } else {\n      $focusSink2[0].focus();\n    }\n  }\n\n  function scrollCellIntoView(row, cell, doPaging){\n    scrollRowIntoView(row, doPaging);\n\n    var colspan = getColspan(row, cell);\n    var left = columnPosLeft[cell],\n      right = columnPosRight[cell + (colspan > 1 ? colspan - 1 : 0)],\n      scrollRight = scrollLeft + viewportW;\n\n    if (left < scrollLeft){\n      $viewport.scrollLeft(left);\n      handleScroll();\n      render();\n    } else if (right > scrollRight){\n      $viewport.scrollLeft(Math.min(left, right - $viewport[0].clientWidth));\n      handleScroll();\n      render();\n    }\n  }\n\n  function setActiveCellInternal(newCell, opt_editMode){\n    if (activeCellNode !== null){\n      makeActiveCellNormal();\n      $(activeCellNode).removeClass('active');\n      if (rowsCache[activeRow]){\n        $(rowsCache[activeRow].rowNode).removeClass('active');\n      }\n    }\n\n    var activeCellChanged = (activeCellNode !== newCell);\n    activeCellNode = newCell;\n\n    if (activeCellNode != null){\n      activeRow = getRowFromNode(activeCellNode.parentNode);\n      activeCell = activePosX = getCellFromNode(activeCellNode);\n\n      if (opt_editMode == null){\n        opt_editMode = (activeRow == getDataLength()) || options.autoEdit;\n      }\n\n      $(activeCellNode).addClass('active');\n      $(rowsCache[activeRow].rowNode).addClass('active');\n\n      if (options.editable && opt_editMode && isCellPotentiallyEditable(activeRow, activeCell)){\n        clearTimeout(h_editorLoader);\n\n        if (options.asyncEditorLoading){\n          h_editorLoader = setTimeout(function(){\n            makeActiveCellEditable();\n          }, options.asyncEditorLoadDelay);\n        } else {\n          makeActiveCellEditable();\n        }\n      }\n    } else {\n      activeRow = activeCell = null;\n    }\n\n    if (activeCellChanged){\n      trigger(self.onActiveCellChanged, getActiveCell());\n    }\n  }\n\n  function clearTextSelection(){\n    if (document.selection && document.selection.empty){\n      try {\n        // IE fails here if selected element is not in dom\n        document.selection.empty();\n      } catch (e){\n      }\n    } else if (window.getSelection){\n      var sel = window.getSelection();\n      if (sel && sel.removeAllRanges){\n        sel.removeAllRanges();\n      }\n    }\n  }\n\n  function isCellPotentiallyEditable(row, cell){\n    var dataLength = getDataLength();\n    // is the data for this row loaded?\n    if (row < dataLength && !getDataItem(row)){\n      return false;\n    }\n\n    // are we in the Add New row?  can we create new from this cell?\n    if (columns[cell].cannotTriggerInsert && row >= dataLength){\n      return false;\n    }\n\n    // does this cell have an editor?\n    if (!getEditor(row, cell)){\n      return false;\n    }\n\n    return true;\n  }\n\n  function makeActiveCellNormal(){\n    if (!currentEditor){\n      return;\n    }\n    trigger(self.onBeforeCellEditorDestroy, {editor: currentEditor, grid: self});\n    currentEditor.destroy();\n    currentEditor = null;\n\n    if (activeCellNode){\n      var d = getDataItem(activeRow);\n      $(activeCellNode).removeClass('editable invalid');\n      if (d){\n        var column = columns[activeCell];\n        var formatter = getFormatter(activeRow, column);\n        activeCellNode.innerHTML = formatter(activeRow, activeCell, getDataItemValueForColumn(d, column), column, d, self);\n        invalidatePostProcessingResults(activeRow);\n      }\n    }\n\n    // if there previously was text selected on a page (such as selected text in the edit cell just removed),\n    // IE can't set focus to anything else correctly\n    if (navigator.userAgent.toLowerCase().match(/msie/)){\n      clearTextSelection();\n    }\n\n    getEditorLock().deactivate(editController);\n  }\n\n  function makeActiveCellEditable(editor){\n    if (!activeCellNode){\n      return;\n    }\n    if (!options.editable){\n      throw 'Grid : makeActiveCellEditable : should never get called when options.editable is false';\n    }\n\n    // cancel pending async call if there is one\n    clearTimeout(h_editorLoader);\n\n    if (!isCellPotentiallyEditable(activeRow, activeCell)){\n      return;\n    }\n\n    var columnDef = columns[activeCell];\n    var item = getDataItem(activeRow);\n\n    if (trigger(self.onBeforeEditCell, {\n      row: activeRow,\n      cell: activeCell,\n      item: item,\n      column: columnDef,\n      grid: self\n    }) === false){\n      setFocus();\n      return;\n    }\n\n    getEditorLock().activate(editController);\n    $(activeCellNode).addClass('editable');\n\n    var useEditor = editor || getEditor(activeRow, activeCell);\n\n    // don't clear the cell if a custom editor is passed through\n    if (!editor && !useEditor.suppressClearOnEdit){\n      activeCellNode.innerHTML = '';\n    }\n\n    currentEditor = new useEditor({\n      grid: self,\n      gridPosition: absBox($container[0]),\n      position: absBox(activeCellNode),\n      container: activeCellNode,\n      column: columnDef,\n      item: item || {},\n      commitChanges: commitEditAndSetFocus,\n      cancelChanges: cancelEditAndSetFocus\n    });\n\n    if (item){\n      currentEditor.loadValue(item);\n    }\n\n    serializedEditorValue = currentEditor.serializeValue();\n\n    if (currentEditor.position){\n      handleActiveCellPositionChange();\n    }\n  }\n\n  function commitEditAndSetFocus(){\n    // if the commit fails, it would do so due to a validation error\n    // if so, do not steal the focus from the editor\n    if (getEditorLock().commitCurrentEdit()){\n      setFocus();\n      if (options.autoEdit){\n        navigateDown();\n      }\n    }\n  }\n\n  function cancelEditAndSetFocus(){\n    if (getEditorLock().cancelCurrentEdit()){\n      setFocus();\n    }\n  }\n\n  function absBox(elem){\n    var box = {\n      top: elem.offsetTop,\n      left: elem.offsetLeft,\n      bottom: 0,\n      right: 0,\n      width: $(elem).outerWidth(),\n      height: $(elem).outerHeight(),\n      visible: true\n    };\n    box.bottom = box.top + box.height;\n    box.right = box.left + box.width;\n\n    // walk up the tree\n    var offsetParent = elem.offsetParent;\n    while ((elem = elem.parentNode) != document.body){\n      if (elem == null) break;\n\n      if (box.visible && elem.scrollHeight != elem.offsetHeight && $(elem).css('overflowY') != 'visible'){\n        box.visible = box.bottom > elem.scrollTop && box.top < elem.scrollTop + elem.clientHeight;\n      }\n\n      if (box.visible && elem.scrollWidth != elem.offsetWidth && $(elem).css('overflowX') != 'visible'){\n        box.visible = box.right > elem.scrollLeft && box.left < elem.scrollLeft + elem.clientWidth;\n      }\n\n      box.left -= elem.scrollLeft;\n      box.top -= elem.scrollTop;\n\n      if (elem === offsetParent){\n        box.left += elem.offsetLeft;\n        box.top += elem.offsetTop;\n        offsetParent = elem.offsetParent;\n      }\n\n      box.bottom = box.top + box.height;\n      box.right = box.left + box.width;\n    }\n\n    return box;\n  }\n\n  function getActiveCellPosition(){\n    return absBox(activeCellNode);\n  }\n\n  function getGridPosition(){\n    return absBox($container[0]);\n  }\n\n  function handleActiveCellPositionChange(){\n    if (!activeCellNode){\n      return;\n    }\n\n    trigger(self.onActiveCellPositionChanged, {grid: self});\n\n    if (currentEditor){\n      var cellBox = getActiveCellPosition();\n      if (currentEditor.show && currentEditor.hide){\n        if (!cellBox.visible){\n          currentEditor.hide();\n        } else {\n          currentEditor.show();\n        }\n      }\n\n      if (currentEditor.position){\n        currentEditor.position(cellBox);\n      }\n    }\n  }\n\n  function getCellEditor(){\n    return currentEditor;\n  }\n\n  function getActiveCell(){\n    if (!activeCellNode){\n      return null;\n    } else {\n      return {row: activeRow, cell: activeCell, grid: self};\n    }\n  }\n\n  function getActiveCellNode(){\n    return activeCellNode;\n  }\n\n  function scrollRowIntoView(row, doPaging){\n    var rowAtTop = row * options.rowHeight;\n    var rowAtBottom = (row + 1) * options.rowHeight - viewportH + (viewportHasHScroll ? scrollbarDimensions.height : 0);\n\n    // need to page down?\n    if ((row + 1) * options.rowHeight > scrollTop + viewportH + offset){\n      scrollTo(doPaging ? rowAtTop : rowAtBottom);\n      render();\n    }\n    // or page up?\n    else if (row * options.rowHeight < scrollTop + offset){\n      scrollTo(doPaging ? rowAtBottom : rowAtTop);\n      render();\n    }\n  }\n\n  function scrollRowToTop(row){\n    scrollTo(row * options.rowHeight);\n    render();\n  }\n\n  function scrollPage(dir){\n    var deltaRows = dir * numVisibleRows;\n    scrollTo((getRowFromPosition(scrollTop) + deltaRows) * options.rowHeight);\n    render();\n\n    if (options.enableCellNavigation && activeRow != null){\n      var row = activeRow + deltaRows;\n      var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n      if (row >= dataLengthIncludingAddNew){\n        row = dataLengthIncludingAddNew - 1;\n      }\n      if (row < 0){\n        row = 0;\n      }\n\n      var cell = 0, prevCell = null;\n      var prevActivePosX = activePosX;\n      while (cell <= activePosX){\n        if (canCellBeActive(row, cell)){\n          prevCell = cell;\n        }\n        cell += getColspan(row, cell);\n      }\n\n      if (prevCell !== null){\n        setActiveCellInternal(getCellNode(row, prevCell));\n        activePosX = prevActivePosX;\n      } else {\n        resetActiveCell();\n      }\n    }\n  }\n\n  function navigatePageDown(){\n    scrollPage(1);\n  }\n\n  function navigatePageUp(){\n    scrollPage(-1);\n  }\n\n  function getColspan(row, cell){\n    var metadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (!metadata || !metadata.columns){\n      return 1;\n    }\n\n    var columnData = metadata.columns[columns[cell].id] || metadata.columns[cell];\n    var colspan = (columnData && columnData.colspan);\n    if (colspan === '*'){\n      colspan = columns.length - cell;\n    } else {\n      colspan = colspan || 1;\n    }\n\n    return colspan;\n  }\n\n  function findFirstFocusableCell(row){\n    var cell = 0;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        return cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return null;\n  }\n\n  function findLastFocusableCell(row){\n    var cell = 0;\n    var lastFocusableCell = null;\n    while (cell < columns.length){\n      if (canCellBeActive(row, cell)){\n        lastFocusableCell = cell;\n      }\n      cell += getColspan(row, cell);\n    }\n    return lastFocusableCell;\n  }\n\n  function gotoRight(row, cell, posX){\n    if (cell >= columns.length){\n      return null;\n    }\n\n    do {\n      cell += getColspan(row, cell);\n    }\n    while (cell < columns.length && !canCellBeActive(row, cell));\n\n    if (cell < columns.length){\n      return {\n        'row': row,\n        'cell': cell,\n        'posX': cell\n      };\n    }\n    return null;\n  }\n\n  function gotoLeft(row, cell, posX){\n    if (cell <= 0){\n      return null;\n    }\n\n    var firstFocusableCell = findFirstFocusableCell(row);\n    if (firstFocusableCell === null || firstFocusableCell >= cell){\n      return null;\n    }\n\n    var prev = {\n      'row': row,\n      'cell': firstFocusableCell,\n      'posX': firstFocusableCell\n    };\n    var pos;\n    while (true){\n      pos = gotoRight(prev.row, prev.cell, prev.posX);\n      if (!pos){\n        return null;\n      }\n      if (pos.cell >= cell){\n        return prev;\n      }\n      prev = pos;\n    }\n  }\n\n  function gotoDown(row, cell, posX){\n    var prevCell;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (true){\n      if (++row >= dataLengthIncludingAddNew){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoUp(row, cell, posX){\n    var prevCell;\n    while (true){\n      if (--row < 0){\n        return null;\n      }\n\n      prevCell = cell = 0;\n      while (cell <= posX){\n        prevCell = cell;\n        cell += getColspan(row, cell);\n      }\n\n      if (canCellBeActive(row, prevCell)){\n        return {\n          'row': row,\n          'cell': prevCell,\n          'posX': posX\n        };\n      }\n    }\n  }\n\n  function gotoNext(row, cell, posX){\n    if (row == null && cell == null){\n      row = cell = posX = 0;\n      if (canCellBeActive(row, cell)){\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos = gotoRight(row, cell, posX);\n    if (pos){\n      return pos;\n    }\n\n    var firstFocusableCell = null;\n    var dataLengthIncludingAddNew = getDataLengthIncludingAddNew();\n    while (++row < dataLengthIncludingAddNew){\n      firstFocusableCell = findFirstFocusableCell(row);\n      if (firstFocusableCell !== null){\n        return {\n          'row': row,\n          'cell': firstFocusableCell,\n          'posX': firstFocusableCell\n        };\n      }\n    }\n    return null;\n  }\n\n  function gotoPrev(row, cell, posX){\n    if (row == null && cell == null){\n      row = getDataLengthIncludingAddNew() - 1;\n      cell = posX = columns.length - 1;\n      if (canCellBeActive(row, cell)){\n        return {\n          'row': row,\n          'cell': cell,\n          'posX': cell\n        };\n      }\n    }\n\n    var pos;\n    var lastSelectableCell;\n    while (!pos){\n      pos = gotoLeft(row, cell, posX);\n      if (pos){\n        break;\n      }\n      if (--row < 0){\n        return null;\n      }\n\n      cell = 0;\n      lastSelectableCell = findLastFocusableCell(row);\n      if (lastSelectableCell !== null){\n        pos = {\n          'row': row,\n          'cell': lastSelectableCell,\n          'posX': lastSelectableCell\n        };\n      }\n    }\n    return pos;\n  }\n\n  function navigateRight(){\n    return navigate('right');\n  }\n\n  function navigateLeft(){\n    return navigate('left');\n  }\n\n  function navigateDown(){\n    return navigate('down');\n  }\n\n  function navigateUp(){\n    return navigate('up');\n  }\n\n  function navigateNext(){\n    return navigate('next');\n  }\n\n  function navigatePrev(){\n    return navigate('prev');\n  }\n\n  /**\n   * @param {string} dir Navigation direction.\n   * @return {boolean} Whether navigation resulted in a change of active cell.\n   */\n  function navigate(dir){\n    if (!options.enableCellNavigation){\n      return false;\n    }\n\n    if (!activeCellNode && dir != 'prev' && dir != 'next'){\n      return false;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return true;\n    }\n    setFocus();\n\n    var tabbingDirections = {\n      'up': -1,\n      'down': 1,\n      'left': -1,\n      'right': 1,\n      'prev': -1,\n      'next': 1\n    };\n    tabbingDirection = tabbingDirections[dir];\n\n    var stepFunctions = {\n      'up': gotoUp,\n      'down': gotoDown,\n      'left': gotoLeft,\n      'right': gotoRight,\n      'prev': gotoPrev,\n      'next': gotoNext\n    };\n    var stepFn = stepFunctions[dir];\n    var pos = stepFn(activeRow, activeCell, activePosX);\n    if (pos){\n      var isAddNewRow = (pos.row == getDataLength());\n      scrollCellIntoView(pos.row, pos.cell, !isAddNewRow);\n      setActiveCellInternal(getCellNode(pos.row, pos.cell));\n      activePosX = pos.posX;\n      return true;\n    } else {\n      setActiveCellInternal(getCellNode(activeRow, activeCell));\n      return false;\n    }\n  }\n\n  function getCellNode(row, cell){\n    if (rowsCache[row]){\n      ensureCellNodesInRowsCache(row);\n      return rowsCache[row].cellNodesByColumnIdx[cell];\n    }\n    return null;\n  }\n\n  function setActiveCell(row, cell){\n    if (!initialized){\n      return;\n    }\n    if (row > getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return;\n    }\n\n    if (!options.enableCellNavigation){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n    setActiveCellInternal(getCellNode(row, cell), false);\n  }\n\n  function canCellBeActive(row, cell){\n    if (!options.enableCellNavigation || row >= getDataLengthIncludingAddNew() ||\n      row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.focusable === 'boolean'){\n      return rowMetadata.focusable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns;\n    if (columnMetadata && columnMetadata[columns[cell].id] && typeof columnMetadata[columns[cell].id].focusable === 'boolean'){\n      return columnMetadata[columns[cell].id].focusable;\n    }\n    if (columnMetadata && columnMetadata[cell] && typeof columnMetadata[cell].focusable === 'boolean'){\n      return columnMetadata[cell].focusable;\n    }\n\n    return columns[cell].focusable;\n  }\n\n  function canCellBeSelected(row, cell){\n    if (row >= getDataLength() || row < 0 || cell >= columns.length || cell < 0){\n      return false;\n    }\n\n    var rowMetadata = data.getItemMetadata && data.getItemMetadata(row);\n    if (rowMetadata && typeof rowMetadata.selectable === 'boolean'){\n      return rowMetadata.selectable;\n    }\n\n    var columnMetadata = rowMetadata && rowMetadata.columns && (rowMetadata.columns[columns[cell].id] || rowMetadata.columns[cell]);\n    if (columnMetadata && typeof columnMetadata.selectable === 'boolean'){\n      return columnMetadata.selectable;\n    }\n\n    return columns[cell].selectable;\n  }\n\n  function gotoCell(row, cell, forceEdit){\n    if (!initialized){\n      return;\n    }\n    if (!canCellBeActive(row, cell)){\n      return;\n    }\n\n    if (!getEditorLock().commitCurrentEdit()){\n      return;\n    }\n\n    scrollCellIntoView(row, cell, false);\n\n    var newCell = getCellNode(row, cell);\n\n    // if selecting the 'add new' row, start editing right away\n    setActiveCellInternal(newCell, forceEdit || (row === getDataLength()) || options.autoEdit);\n\n    // if no editor was created, set the focus back on the grid\n    if (!currentEditor){\n      setFocus();\n    }\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // IEditor implementation for the editor lock\n\n  function commitCurrentEdit(){\n    var item = getDataItem(activeRow);\n    var column = columns[activeCell];\n\n    if (currentEditor){\n      if (currentEditor.isValueChanged()){\n        var validationResults = currentEditor.validate();\n\n        if (validationResults.valid){\n          if (activeRow < getDataLength()){\n            var editCommand = {\n              row: activeRow,\n              cell: activeCell,\n              editor: currentEditor,\n              serializedValue: currentEditor.serializeValue(),\n              prevSerializedValue: serializedEditorValue,\n              execute: function(){\n                this.editor.applyValue(item, this.serializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              },\n              undo: function(){\n                this.editor.applyValue(item, this.prevSerializedValue);\n                updateRow(this.row);\n                trigger(self.onCellChange, {\n                  row: activeRow,\n                  cell: activeCell,\n                  item: item,\n                  grid: self\n                });\n              }\n            };\n\n            if (options.editCommandHandler){\n              makeActiveCellNormal();\n              options.editCommandHandler(item, column, editCommand);\n            } else {\n              editCommand.execute();\n              makeActiveCellNormal();\n            }\n          } else {\n            var newItem = {};\n            currentEditor.applyValue(newItem, currentEditor.serializeValue());\n            makeActiveCellNormal();\n            trigger(self.onAddNewRow, {item: newItem, column: column, grid: self});\n          }\n\n          // check whether the lock has been re-acquired by event handlers\n          return !getEditorLock().isActive();\n        } else {\n          // Re-add the CSS class to trigger transitions, if any.\n          $(activeCellNode).removeClass('invalid');\n          $(activeCellNode).width();  // force layout\n          $(activeCellNode).addClass('invalid');\n\n          trigger(self.onValidationError, {\n            editor: currentEditor,\n            cellNode: activeCellNode,\n            validationResults: validationResults,\n            row: activeRow,\n            cell: activeCell,\n            column: column,\n            grid: self\n          });\n\n          currentEditor.focus();\n          return false;\n        }\n      }\n\n      makeActiveCellNormal();\n    }\n    return true;\n  }\n\n  function cancelCurrentEdit(){\n    makeActiveCellNormal();\n    return true;\n  }\n\n  function rowsToRanges(rows){\n    var ranges = [];\n    var lastCell = columns.length - 1;\n    for (var i = 0; i < rows.length; i++){\n      ranges.push(new Slick.Range(rows[i], 0, rows[i], lastCell));\n    }\n    return ranges;\n  }\n\n  function getSelectedRows(){\n    if (!selectionModel){\n      throw 'Selection model is not set';\n    }\n    return selectedRows;\n  }\n\n  function setSelectedRows(rows){\n    if (!selectionModel){\n      throw 'Selection model is not set';\n    }\n    selectionModel.setSelectedRanges(rowsToRanges(rows));\n  }\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Debug\n\n  this.debug = function(){\n    var s = '';\n\n    s += ('\\n' + 'counter_rows_rendered:  ' + counter_rows_rendered);\n    s += ('\\n' + 'counter_rows_removed:  ' + counter_rows_removed);\n    s += ('\\n' + 'renderedRows:  ' + renderedRows);\n    s += ('\\n' + 'numVisibleRows:  ' + numVisibleRows);\n    s += ('\\n' + 'maxSupportedCssHeight:  ' + maxSupportedCssHeight);\n    s += ('\\n' + 'n(umber of pages):  ' + n);\n    s += ('\\n' + '(current) page:  ' + page);\n    s += ('\\n' + 'page height (ph):  ' + ph);\n    s += ('\\n' + 'vScrollDir:  ' + vScrollDir);\n\n    alert(s);\n  };\n\n  // a debug helper to be able to access private members\n  this.eval = function(expr){\n    return eval(expr);\n  };\n\n  // ////////////////////////////////////////////////////////////////////////////////////////////\n  // Public API\n\n  $.extend(this, {\n    'slickGridVersion': '2.2.4',\n\n    // Events\n    'onScroll': new Slick.Event(),\n    'onSort': new Slick.Event(),\n    'onHeaderMouseEnter': new Slick.Event(),\n    'onHeaderMouseLeave': new Slick.Event(),\n    'onHeaderContextMenu': new Slick.Event(),\n    'onHeaderClick': new Slick.Event(),\n    'onHeaderCellRendered': new Slick.Event(),\n    'onBeforeHeaderCellDestroy': new Slick.Event(),\n    'onHeaderRowCellRendered': new Slick.Event(),\n    'onFooterRowCellRendered': new Slick.Event(),\n    'onBeforeHeaderRowCellDestroy': new Slick.Event(),\n    'onBeforeFooterRowCellDestroy': new Slick.Event(),\n    'onMouseEnter': new Slick.Event(),\n    'onMouseLeave': new Slick.Event(),\n    'onClick': new Slick.Event(),\n    'onDblClick': new Slick.Event(),\n    'onContextMenu': new Slick.Event(),\n    'onKeyDown': new Slick.Event(),\n    'onAddNewRow': new Slick.Event(),\n    'onValidationError': new Slick.Event(),\n    'onViewportChanged': new Slick.Event(),\n    'onColumnsReordered': new Slick.Event(),\n    'onColumnsResized': new Slick.Event(),\n    'onCellChange': new Slick.Event(),\n    'onBeforeEditCell': new Slick.Event(),\n    'onBeforeCellEditorDestroy': new Slick.Event(),\n    'onBeforeDestroy': new Slick.Event(),\n    'onActiveCellChanged': new Slick.Event(),\n    'onActiveCellPositionChanged': new Slick.Event(),\n    'onDragInit': new Slick.Event(),\n    'onDragStart': new Slick.Event(),\n    'onDrag': new Slick.Event(),\n    'onDragEnd': new Slick.Event(),\n    'onSelectedRowsChanged': new Slick.Event(),\n    'onCellCssStylesChanged': new Slick.Event(),\n\n    // Methods\n    'registerPlugin': registerPlugin,\n    'unregisterPlugin': unregisterPlugin,\n    'getColumns': getColumns,\n    'setColumns': setColumns,\n    'getColumnIndex': getColumnIndex,\n    'updateColumnHeader': updateColumnHeader,\n    'setSortColumn': setSortColumn,\n    'setSortColumns': setSortColumns,\n    'getSortColumns': getSortColumns,\n    'autosizeColumns': autosizeColumns,\n    'getOptions': getOptions,\n    'setOptions': setOptions,\n    'getData': getData,\n    'getDataLength': getDataLength,\n    'getDataItem': getDataItem,\n    'setData': setData,\n    'getSelectionModel': getSelectionModel,\n    'setSelectionModel': setSelectionModel,\n    'getSelectedRows': getSelectedRows,\n    'setSelectedRows': setSelectedRows,\n    'getContainerNode': getContainerNode,\n\n    'render': render,\n    'invalidate': invalidate,\n    'invalidateRow': invalidateRow,\n    'invalidateRows': invalidateRows,\n    'invalidateAllRows': invalidateAllRows,\n    'updateCell': updateCell,\n    'updateRow': updateRow,\n    'getViewport': getVisibleRange,\n    'getRenderedRange': getRenderedRange,\n    'resizeCanvas': resizeCanvas,\n    'updateRowCount': updateRowCount,\n    'scrollRowIntoView': scrollRowIntoView,\n    'scrollRowToTop': scrollRowToTop,\n    'scrollCellIntoView': scrollCellIntoView,\n    'getCanvasNode': getCanvasNode,\n    'focus': setFocus,\n\n    'getCellFromPoint': getCellFromPoint,\n    'getCellFromEvent': getCellFromEvent,\n    'getActiveCell': getActiveCell,\n    'setActiveCell': setActiveCell,\n    'getActiveCellNode': getActiveCellNode,\n    'getActiveCellPosition': getActiveCellPosition,\n    'resetActiveCell': resetActiveCell,\n    'editActiveCell': makeActiveCellEditable,\n    'getCellEditor': getCellEditor,\n    'getCellNode': getCellNode,\n    'getCellNodeBox': getCellNodeBox,\n    'canCellBeSelected': canCellBeSelected,\n    'canCellBeActive': canCellBeActive,\n    'navigatePrev': navigatePrev,\n    'navigateNext': navigateNext,\n    'navigateUp': navigateUp,\n    'navigateDown': navigateDown,\n    'navigateLeft': navigateLeft,\n    'navigateRight': navigateRight,\n    'navigatePageUp': navigatePageUp,\n    'navigatePageDown': navigatePageDown,\n    'gotoCell': gotoCell,\n    'getTopPanel': getTopPanel,\n    'setTopPanelVisibility': setTopPanelVisibility,\n    'setHeaderRowVisibility': setHeaderRowVisibility,\n    'getHeaderRow': getHeaderRow,\n    'getHeaderRowColumn': getHeaderRowColumn,\n    'setFooterRowVisibility': setFooterRowVisibility,\n    'getFooterRow': getFooterRow,\n    'getFooterRowColumn': getFooterRowColumn,\n    'getGridPosition': getGridPosition,\n    'flashCell': flashCell,\n    'addCellCssStyles': addCellCssStyles,\n    'setCellCssStyles': setCellCssStyles,\n    'removeCellCssStyles': removeCellCssStyles,\n    'getCellCssStyles': getCellCssStyles,\n\n    'init': finishInitialization,\n    'destroy': destroy,\n\n    // IEditor implementation\n    'getEditorLock': getEditorLock,\n    'getEditController': getEditController\n  });\n\n  init();\n}\n\n\n\n// WEBPACK FOOTER //\n// ../src/slick.grid.js","module.exports = require(\"flatpickr\");\n\n\n//////////////////\n// WEBPACK FOOTER\n// external \"flatpickr\"\n// module id = 30\n// module chunks = 0"],"sourceRoot":""}